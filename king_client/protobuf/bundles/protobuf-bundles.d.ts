type Long = protobuf.Long;

/** Namespace pb. */
declare namespace pb {

    /** Properties of a TreasureReadAdsArg. */
    interface ITreasureReadAdsArg {

        /** TreasureReadAdsArg TreasureID */
        TreasureID?: (number|null);

        /** TreasureReadAdsArg IsConsumeJade */
        IsConsumeJade?: (boolean|null);
    }

    /** Represents a TreasureReadAdsArg. */
    class TreasureReadAdsArg implements ITreasureReadAdsArg {

        /**
         * Constructs a new TreasureReadAdsArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITreasureReadAdsArg);

        /** TreasureReadAdsArg TreasureID. */
        public TreasureID: number;

        /** TreasureReadAdsArg IsConsumeJade. */
        public IsConsumeJade: boolean;

        /**
         * Creates a new TreasureReadAdsArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreasureReadAdsArg instance
         */
        public static create(properties?: pb.ITreasureReadAdsArg): pb.TreasureReadAdsArg;

        /**
         * Encodes the specified TreasureReadAdsArg message. Does not implicitly {@link pb.TreasureReadAdsArg.verify|verify} messages.
         * @param message TreasureReadAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITreasureReadAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TreasureReadAdsArg message, length delimited. Does not implicitly {@link pb.TreasureReadAdsArg.verify|verify} messages.
         * @param message TreasureReadAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITreasureReadAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureReadAdsArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureReadAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TreasureReadAdsArg;

        /**
         * Decodes a TreasureReadAdsArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreasureReadAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TreasureReadAdsArg;

        /**
         * Verifies a TreasureReadAdsArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TreasureReadAdsReply. */
    interface ITreasureReadAdsReply {

        /** TreasureReadAdsReply RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents a TreasureReadAdsReply. */
    class TreasureReadAdsReply implements ITreasureReadAdsReply {

        /**
         * Constructs a new TreasureReadAdsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITreasureReadAdsReply);

        /** TreasureReadAdsReply RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new TreasureReadAdsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreasureReadAdsReply instance
         */
        public static create(properties?: pb.ITreasureReadAdsReply): pb.TreasureReadAdsReply;

        /**
         * Encodes the specified TreasureReadAdsReply message. Does not implicitly {@link pb.TreasureReadAdsReply.verify|verify} messages.
         * @param message TreasureReadAdsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITreasureReadAdsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TreasureReadAdsReply message, length delimited. Does not implicitly {@link pb.TreasureReadAdsReply.verify|verify} messages.
         * @param message TreasureReadAdsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITreasureReadAdsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureReadAdsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureReadAdsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TreasureReadAdsReply;

        /**
         * Decodes a TreasureReadAdsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreasureReadAdsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TreasureReadAdsReply;

        /**
         * Verifies a TreasureReadAdsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DailyTreasureReadAdsArg. */
    interface IDailyTreasureReadAdsArg {

        /** DailyTreasureReadAdsArg IsConsumeJade */
        IsConsumeJade?: (boolean|null);
    }

    /** Represents a DailyTreasureReadAdsArg. */
    class DailyTreasureReadAdsArg implements IDailyTreasureReadAdsArg {

        /**
         * Constructs a new DailyTreasureReadAdsArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDailyTreasureReadAdsArg);

        /** DailyTreasureReadAdsArg IsConsumeJade. */
        public IsConsumeJade: boolean;

        /**
         * Creates a new DailyTreasureReadAdsArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DailyTreasureReadAdsArg instance
         */
        public static create(properties?: pb.IDailyTreasureReadAdsArg): pb.DailyTreasureReadAdsArg;

        /**
         * Encodes the specified DailyTreasureReadAdsArg message. Does not implicitly {@link pb.DailyTreasureReadAdsArg.verify|verify} messages.
         * @param message DailyTreasureReadAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDailyTreasureReadAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DailyTreasureReadAdsArg message, length delimited. Does not implicitly {@link pb.DailyTreasureReadAdsArg.verify|verify} messages.
         * @param message DailyTreasureReadAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDailyTreasureReadAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DailyTreasureReadAdsArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DailyTreasureReadAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DailyTreasureReadAdsArg;

        /**
         * Decodes a DailyTreasureReadAdsArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DailyTreasureReadAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DailyTreasureReadAdsArg;

        /**
         * Verifies a DailyTreasureReadAdsArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WatchUpTreasureRareAdsArg. */
    interface IWatchUpTreasureRareAdsArg {

        /** WatchUpTreasureRareAdsArg IsConsumeJade */
        IsConsumeJade?: (boolean|null);
    }

    /** Represents a WatchUpTreasureRareAdsArg. */
    class WatchUpTreasureRareAdsArg implements IWatchUpTreasureRareAdsArg {

        /**
         * Constructs a new WatchUpTreasureRareAdsArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWatchUpTreasureRareAdsArg);

        /** WatchUpTreasureRareAdsArg IsConsumeJade. */
        public IsConsumeJade: boolean;

        /**
         * Creates a new WatchUpTreasureRareAdsArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchUpTreasureRareAdsArg instance
         */
        public static create(properties?: pb.IWatchUpTreasureRareAdsArg): pb.WatchUpTreasureRareAdsArg;

        /**
         * Encodes the specified WatchUpTreasureRareAdsArg message. Does not implicitly {@link pb.WatchUpTreasureRareAdsArg.verify|verify} messages.
         * @param message WatchUpTreasureRareAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWatchUpTreasureRareAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WatchUpTreasureRareAdsArg message, length delimited. Does not implicitly {@link pb.WatchUpTreasureRareAdsArg.verify|verify} messages.
         * @param message WatchUpTreasureRareAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWatchUpTreasureRareAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WatchUpTreasureRareAdsArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchUpTreasureRareAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchUpTreasureRareAdsArg;

        /**
         * Decodes a WatchUpTreasureRareAdsArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchUpTreasureRareAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchUpTreasureRareAdsArg;

        /**
         * Verifies a WatchUpTreasureRareAdsArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WatchTreasureAddCardAdsArg. */
    interface IWatchTreasureAddCardAdsArg {

        /** WatchTreasureAddCardAdsArg TreasureID */
        TreasureID?: (number|null);

        /** WatchTreasureAddCardAdsArg IsConsumeJade */
        IsConsumeJade?: (boolean|null);
    }

    /** Represents a WatchTreasureAddCardAdsArg. */
    class WatchTreasureAddCardAdsArg implements IWatchTreasureAddCardAdsArg {

        /**
         * Constructs a new WatchTreasureAddCardAdsArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWatchTreasureAddCardAdsArg);

        /** WatchTreasureAddCardAdsArg TreasureID. */
        public TreasureID: number;

        /** WatchTreasureAddCardAdsArg IsConsumeJade. */
        public IsConsumeJade: boolean;

        /**
         * Creates a new WatchTreasureAddCardAdsArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchTreasureAddCardAdsArg instance
         */
        public static create(properties?: pb.IWatchTreasureAddCardAdsArg): pb.WatchTreasureAddCardAdsArg;

        /**
         * Encodes the specified WatchTreasureAddCardAdsArg message. Does not implicitly {@link pb.WatchTreasureAddCardAdsArg.verify|verify} messages.
         * @param message WatchTreasureAddCardAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWatchTreasureAddCardAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WatchTreasureAddCardAdsArg message, length delimited. Does not implicitly {@link pb.WatchTreasureAddCardAdsArg.verify|verify} messages.
         * @param message WatchTreasureAddCardAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWatchTreasureAddCardAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WatchTreasureAddCardAdsArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchTreasureAddCardAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchTreasureAddCardAdsArg;

        /**
         * Decodes a WatchTreasureAddCardAdsArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchTreasureAddCardAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchTreasureAddCardAdsArg;

        /**
         * Verifies a WatchTreasureAddCardAdsArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BattleLoseReadAdsReply. */
    interface IBattleLoseReadAdsReply {

        /** BattleLoseReadAdsReply AddStar */
        AddStar?: (number|null);
    }

    /** Represents a BattleLoseReadAdsReply. */
    class BattleLoseReadAdsReply implements IBattleLoseReadAdsReply {

        /**
         * Constructs a new BattleLoseReadAdsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBattleLoseReadAdsReply);

        /** BattleLoseReadAdsReply AddStar. */
        public AddStar: number;

        /**
         * Creates a new BattleLoseReadAdsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BattleLoseReadAdsReply instance
         */
        public static create(properties?: pb.IBattleLoseReadAdsReply): pb.BattleLoseReadAdsReply;

        /**
         * Encodes the specified BattleLoseReadAdsReply message. Does not implicitly {@link pb.BattleLoseReadAdsReply.verify|verify} messages.
         * @param message BattleLoseReadAdsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBattleLoseReadAdsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BattleLoseReadAdsReply message, length delimited. Does not implicitly {@link pb.BattleLoseReadAdsReply.verify|verify} messages.
         * @param message BattleLoseReadAdsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBattleLoseReadAdsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BattleLoseReadAdsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BattleLoseReadAdsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BattleLoseReadAdsReply;

        /**
         * Decodes a BattleLoseReadAdsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BattleLoseReadAdsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BattleLoseReadAdsReply;

        /**
         * Verifies a BattleLoseReadAdsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** ShopFreeAdsType enum. */
    enum ShopFreeAdsType {
        GoldAds = 0,
        TreasureAds = 1,
        JadeAds = 2
    }

    /** Properties of a ShopFreeAds. */
    interface IShopFreeAds {

        /** ShopFreeAds Type */
        Type?: (pb.ShopFreeAdsType|null);

        /** ShopFreeAds ID */
        ID?: (number|null);

        /** ShopFreeAds RemainTime */
        RemainTime?: (number|null);

        /** ShopFreeAds CanGet */
        CanGet?: (boolean|null);
    }

    /** Represents a ShopFreeAds. */
    class ShopFreeAds implements IShopFreeAds {

        /**
         * Constructs a new ShopFreeAds.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IShopFreeAds);

        /** ShopFreeAds Type. */
        public Type: pb.ShopFreeAdsType;

        /** ShopFreeAds ID. */
        public ID: number;

        /** ShopFreeAds RemainTime. */
        public RemainTime: number;

        /** ShopFreeAds CanGet. */
        public CanGet: boolean;

        /**
         * Creates a new ShopFreeAds instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopFreeAds instance
         */
        public static create(properties?: pb.IShopFreeAds): pb.ShopFreeAds;

        /**
         * Encodes the specified ShopFreeAds message. Does not implicitly {@link pb.ShopFreeAds.verify|verify} messages.
         * @param message ShopFreeAds message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IShopFreeAds, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ShopFreeAds message, length delimited. Does not implicitly {@link pb.ShopFreeAds.verify|verify} messages.
         * @param message ShopFreeAds message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IShopFreeAds, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ShopFreeAds message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopFreeAds
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ShopFreeAds;

        /**
         * Decodes a ShopFreeAds message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopFreeAds
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ShopFreeAds;

        /**
         * Verifies a ShopFreeAds message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WatchShopFreeAdsArg. */
    interface IWatchShopFreeAdsArg {

        /** WatchShopFreeAdsArg Type */
        Type?: (pb.ShopFreeAdsType|null);

        /** WatchShopFreeAdsArg ID */
        ID?: (number|null);

        /** WatchShopFreeAdsArg IsConsumeJade */
        IsConsumeJade?: (boolean|null);
    }

    /** Represents a WatchShopFreeAdsArg. */
    class WatchShopFreeAdsArg implements IWatchShopFreeAdsArg {

        /**
         * Constructs a new WatchShopFreeAdsArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWatchShopFreeAdsArg);

        /** WatchShopFreeAdsArg Type. */
        public Type: pb.ShopFreeAdsType;

        /** WatchShopFreeAdsArg ID. */
        public ID: number;

        /** WatchShopFreeAdsArg IsConsumeJade. */
        public IsConsumeJade: boolean;

        /**
         * Creates a new WatchShopFreeAdsArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchShopFreeAdsArg instance
         */
        public static create(properties?: pb.IWatchShopFreeAdsArg): pb.WatchShopFreeAdsArg;

        /**
         * Encodes the specified WatchShopFreeAdsArg message. Does not implicitly {@link pb.WatchShopFreeAdsArg.verify|verify} messages.
         * @param message WatchShopFreeAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWatchShopFreeAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WatchShopFreeAdsArg message, length delimited. Does not implicitly {@link pb.WatchShopFreeAdsArg.verify|verify} messages.
         * @param message WatchShopFreeAdsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWatchShopFreeAdsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WatchShopFreeAdsArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchShopFreeAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchShopFreeAdsArg;

        /**
         * Decodes a WatchShopFreeAdsArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchShopFreeAdsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchShopFreeAdsArg;

        /**
         * Verifies a WatchShopFreeAdsArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WatchShopFreeAdsReply. */
    interface IWatchShopFreeAdsReply {

        /** WatchShopFreeAdsReply Type */
        Type?: (pb.ShopFreeAdsType|null);

        /** WatchShopFreeAdsReply RewardPayload */
        RewardPayload?: (Uint8Array|null);

        /** WatchShopFreeAdsReply NextAds */
        NextAds?: (pb.IShopFreeAds|null);
    }

    /** Represents a WatchShopFreeAdsReply. */
    class WatchShopFreeAdsReply implements IWatchShopFreeAdsReply {

        /**
         * Constructs a new WatchShopFreeAdsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWatchShopFreeAdsReply);

        /** WatchShopFreeAdsReply Type. */
        public Type: pb.ShopFreeAdsType;

        /** WatchShopFreeAdsReply RewardPayload. */
        public RewardPayload: Uint8Array;

        /** WatchShopFreeAdsReply NextAds. */
        public NextAds?: (pb.IShopFreeAds|null);

        /**
         * Creates a new WatchShopFreeAdsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchShopFreeAdsReply instance
         */
        public static create(properties?: pb.IWatchShopFreeAdsReply): pb.WatchShopFreeAdsReply;

        /**
         * Encodes the specified WatchShopFreeAdsReply message. Does not implicitly {@link pb.WatchShopFreeAdsReply.verify|verify} messages.
         * @param message WatchShopFreeAdsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWatchShopFreeAdsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WatchShopFreeAdsReply message, length delimited. Does not implicitly {@link pb.WatchShopFreeAdsReply.verify|verify} messages.
         * @param message WatchShopFreeAdsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWatchShopFreeAdsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WatchShopFreeAdsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchShopFreeAdsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchShopFreeAdsReply;

        /**
         * Decodes a WatchShopFreeAdsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchShopFreeAdsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchShopFreeAdsReply;

        /**
         * Verifies a WatchShopFreeAdsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace WatchShopFreeAdsReply {

        /** Properties of a GoldReward. */
        interface IGoldReward {

            /** GoldReward GoldAmount */
            GoldAmount?: (number|null);
        }

        /** Represents a GoldReward. */
        class GoldReward implements IGoldReward {

            /**
             * Constructs a new GoldReward.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.WatchShopFreeAdsReply.IGoldReward);

            /** GoldReward GoldAmount. */
            public GoldAmount: number;

            /**
             * Creates a new GoldReward instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GoldReward instance
             */
            public static create(properties?: pb.WatchShopFreeAdsReply.IGoldReward): pb.WatchShopFreeAdsReply.GoldReward;

            /**
             * Encodes the specified GoldReward message. Does not implicitly {@link pb.WatchShopFreeAdsReply.GoldReward.verify|verify} messages.
             * @param message GoldReward message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.WatchShopFreeAdsReply.IGoldReward, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified GoldReward message, length delimited. Does not implicitly {@link pb.WatchShopFreeAdsReply.GoldReward.verify|verify} messages.
             * @param message GoldReward message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.WatchShopFreeAdsReply.IGoldReward, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GoldReward message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GoldReward
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchShopFreeAdsReply.GoldReward;

            /**
             * Decodes a GoldReward message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GoldReward
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchShopFreeAdsReply.GoldReward;

            /**
             * Verifies a GoldReward message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);
        }

        /** Properties of a JadeReward. */
        interface IJadeReward {

            /** JadeReward JadeAmount */
            JadeAmount?: (number|null);
        }

        /** Represents a JadeReward. */
        class JadeReward implements IJadeReward {

            /**
             * Constructs a new JadeReward.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.WatchShopFreeAdsReply.IJadeReward);

            /** JadeReward JadeAmount. */
            public JadeAmount: number;

            /**
             * Creates a new JadeReward instance using the specified properties.
             * @param [properties] Properties to set
             * @returns JadeReward instance
             */
            public static create(properties?: pb.WatchShopFreeAdsReply.IJadeReward): pb.WatchShopFreeAdsReply.JadeReward;

            /**
             * Encodes the specified JadeReward message. Does not implicitly {@link pb.WatchShopFreeAdsReply.JadeReward.verify|verify} messages.
             * @param message JadeReward message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.WatchShopFreeAdsReply.IJadeReward, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified JadeReward message, length delimited. Does not implicitly {@link pb.WatchShopFreeAdsReply.JadeReward.verify|verify} messages.
             * @param message JadeReward message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.WatchShopFreeAdsReply.IJadeReward, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a JadeReward message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns JadeReward
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchShopFreeAdsReply.JadeReward;

            /**
             * Decodes a JadeReward message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns JadeReward
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchShopFreeAdsReply.JadeReward;

            /**
             * Verifies a JadeReward message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);
        }
    }

    /** Properties of a WatchTreasureAddCardAdsReply. */
    interface IWatchTreasureAddCardAdsReply {

        /** WatchTreasureAddCardAdsReply AddCardAmount */
        AddCardAmount?: (number|null);
    }

    /** Represents a WatchTreasureAddCardAdsReply. */
    class WatchTreasureAddCardAdsReply implements IWatchTreasureAddCardAdsReply {

        /**
         * Constructs a new WatchTreasureAddCardAdsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWatchTreasureAddCardAdsReply);

        /** WatchTreasureAddCardAdsReply AddCardAmount. */
        public AddCardAmount: number;

        /**
         * Creates a new WatchTreasureAddCardAdsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchTreasureAddCardAdsReply instance
         */
        public static create(properties?: pb.IWatchTreasureAddCardAdsReply): pb.WatchTreasureAddCardAdsReply;

        /**
         * Encodes the specified WatchTreasureAddCardAdsReply message. Does not implicitly {@link pb.WatchTreasureAddCardAdsReply.verify|verify} messages.
         * @param message WatchTreasureAddCardAdsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWatchTreasureAddCardAdsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WatchTreasureAddCardAdsReply message, length delimited. Does not implicitly {@link pb.WatchTreasureAddCardAdsReply.verify|verify} messages.
         * @param message WatchTreasureAddCardAdsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWatchTreasureAddCardAdsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WatchTreasureAddCardAdsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchTreasureAddCardAdsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchTreasureAddCardAdsReply;

        /**
         * Decodes a WatchTreasureAddCardAdsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchTreasureAddCardAdsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchTreasureAddCardAdsReply;

        /**
         * Verifies a WatchTreasureAddCardAdsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SendEmojiArg. */
    interface ISendEmojiArg {

        /** SendEmojiArg EmojiID */
        EmojiID?: (number|null);
    }

    /** Represents a SendEmojiArg. */
    class SendEmojiArg implements ISendEmojiArg {

        /**
         * Constructs a new SendEmojiArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISendEmojiArg);

        /** SendEmojiArg EmojiID. */
        public EmojiID: number;

        /**
         * Creates a new SendEmojiArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendEmojiArg instance
         */
        public static create(properties?: pb.ISendEmojiArg): pb.SendEmojiArg;

        /**
         * Encodes the specified SendEmojiArg message. Does not implicitly {@link pb.SendEmojiArg.verify|verify} messages.
         * @param message SendEmojiArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISendEmojiArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SendEmojiArg message, length delimited. Does not implicitly {@link pb.SendEmojiArg.verify|verify} messages.
         * @param message SendEmojiArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISendEmojiArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SendEmojiArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendEmojiArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SendEmojiArg;

        /**
         * Decodes a SendEmojiArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendEmojiArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SendEmojiArg;

        /**
         * Verifies a SendEmojiArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MovieEffect. */
    interface IMovieEffect {

        /** MovieEffect MovieID */
        MovieID?: (string|null);

        /** MovieEffect PlayType */
        PlayType?: (number|null);

        /** MovieEffect OwnerObjID */
        OwnerObjID?: (number|null);
    }

    /** Represents a MovieEffect. */
    class MovieEffect implements IMovieEffect {

        /**
         * Constructs a new MovieEffect.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMovieEffect);

        /** MovieEffect MovieID. */
        public MovieID: string;

        /** MovieEffect PlayType. */
        public PlayType: number;

        /** MovieEffect OwnerObjID. */
        public OwnerObjID: number;

        /**
         * Creates a new MovieEffect instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MovieEffect instance
         */
        public static create(properties?: pb.IMovieEffect): pb.MovieEffect;

        /**
         * Encodes the specified MovieEffect message. Does not implicitly {@link pb.MovieEffect.verify|verify} messages.
         * @param message MovieEffect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMovieEffect, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MovieEffect message, length delimited. Does not implicitly {@link pb.MovieEffect.verify|verify} messages.
         * @param message MovieEffect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMovieEffect, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MovieEffect message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MovieEffect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MovieEffect;

        /**
         * Decodes a MovieEffect message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MovieEffect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MovieEffect;

        /**
         * Verifies a MovieEffect message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DiyFightCardInfo. */
    interface IDiyFightCardInfo {

        /** DiyFightCardInfo CardId */
        CardId?: (number|null);

        /** DiyFightCardInfo Name */
        Name?: (string|null);

        /** DiyFightCardInfo DiySkillId1 */
        DiySkillId1?: (number|null);

        /** DiyFightCardInfo DiySkillId2 */
        DiySkillId2?: (number|null);

        /** DiyFightCardInfo Weapon */
        Weapon?: (string|null);
    }

    /** Represents a DiyFightCardInfo. */
    class DiyFightCardInfo implements IDiyFightCardInfo {

        /**
         * Constructs a new DiyFightCardInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDiyFightCardInfo);

        /** DiyFightCardInfo CardId. */
        public CardId: number;

        /** DiyFightCardInfo Name. */
        public Name: string;

        /** DiyFightCardInfo DiySkillId1. */
        public DiySkillId1: number;

        /** DiyFightCardInfo DiySkillId2. */
        public DiySkillId2: number;

        /** DiyFightCardInfo Weapon. */
        public Weapon: string;

        /**
         * Creates a new DiyFightCardInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DiyFightCardInfo instance
         */
        public static create(properties?: pb.IDiyFightCardInfo): pb.DiyFightCardInfo;

        /**
         * Encodes the specified DiyFightCardInfo message. Does not implicitly {@link pb.DiyFightCardInfo.verify|verify} messages.
         * @param message DiyFightCardInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDiyFightCardInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DiyFightCardInfo message, length delimited. Does not implicitly {@link pb.DiyFightCardInfo.verify|verify} messages.
         * @param message DiyFightCardInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDiyFightCardInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DiyFightCardInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DiyFightCardInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DiyFightCardInfo;

        /**
         * Decodes a DiyFightCardInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DiyFightCardInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DiyFightCardInfo;

        /**
         * Verifies a DiyFightCardInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a Card. */
    interface ICard {

        /** Card Id */
        Id?: (number|null);

        /** Card ObjId */
        ObjId?: (number|null);

        /** Card Up */
        Up?: (number|null);

        /** Card Down */
        Down?: (number|null);

        /** Card Left */
        Left?: (number|null);

        /** Card Right */
        Right?: (number|null);

        /** Card DiyInfo */
        DiyInfo?: (pb.IDiyFightCardInfo|null);

        /** Card Effect */
        Effect?: (pb.IMovieEffect[]|null);

        /** Card Skills */
        Skills?: (number[]|null);

        /** Card IsInFog */
        IsInFog?: (boolean|null);

        /** Card IsPublicEnemy */
        IsPublicEnemy?: (boolean|null);

        /** Card Skin */
        Skin?: (string|null);

        /** Card Equip */
        Equip?: (pb.IBattleEquip|null);
    }

    /** Represents a Card. */
    class Card implements ICard {

        /**
         * Constructs a new Card.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICard);

        /** Card Id. */
        public Id: number;

        /** Card ObjId. */
        public ObjId: number;

        /** Card Up. */
        public Up: number;

        /** Card Down. */
        public Down: number;

        /** Card Left. */
        public Left: number;

        /** Card Right. */
        public Right: number;

        /** Card DiyInfo. */
        public DiyInfo?: (pb.IDiyFightCardInfo|null);

        /** Card Effect. */
        public Effect: pb.IMovieEffect[];

        /** Card Skills. */
        public Skills: number[];

        /** Card IsInFog. */
        public IsInFog: boolean;

        /** Card IsPublicEnemy. */
        public IsPublicEnemy: boolean;

        /** Card Skin. */
        public Skin: string;

        /** Card Equip. */
        public Equip?: (pb.IBattleEquip|null);

        /**
         * Creates a new Card instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Card instance
         */
        public static create(properties?: pb.ICard): pb.Card;

        /**
         * Encodes the specified Card message. Does not implicitly {@link pb.Card.verify|verify} messages.
         * @param message Card message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Card message, length delimited. Does not implicitly {@link pb.Card.verify|verify} messages.
         * @param message Card message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Card message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Card
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Card;

        /**
         * Decodes a Card message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Card
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Card;

        /**
         * Verifies a Card message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BattleEquip. */
    interface IBattleEquip {

        /** BattleEquip EquipID */
        EquipID?: (string|null);

        /** BattleEquip Skills */
        Skills?: (number[]|null);
    }

    /** Represents a BattleEquip. */
    class BattleEquip implements IBattleEquip {

        /**
         * Constructs a new BattleEquip.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBattleEquip);

        /** BattleEquip EquipID. */
        public EquipID: string;

        /** BattleEquip Skills. */
        public Skills: number[];

        /**
         * Creates a new BattleEquip instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BattleEquip instance
         */
        public static create(properties?: pb.IBattleEquip): pb.BattleEquip;

        /**
         * Encodes the specified BattleEquip message. Does not implicitly {@link pb.BattleEquip.verify|verify} messages.
         * @param message BattleEquip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBattleEquip, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BattleEquip message, length delimited. Does not implicitly {@link pb.BattleEquip.verify|verify} messages.
         * @param message BattleEquip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBattleEquip, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BattleEquip message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BattleEquip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BattleEquip;

        /**
         * Decodes a BattleEquip message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BattleEquip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BattleEquip;

        /**
         * Verifies a BattleEquip message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a Fighter. */
    interface IFighter {

        /** Fighter Uid */
        Uid?: (number|Long|null);

        /** Fighter Hand */
        Hand?: (pb.ICard[]|null);

        /** Fighter ObjId */
        ObjId?: (number|null);

        /** Fighter CasterSkills */
        CasterSkills?: (number[]|null);

        /** Fighter Name */
        Name?: (string|null);

        /** Fighter Camp */
        Camp?: (number|null);

        /** Fighter PvpScore */
        PvpScore?: (number|null);

        /** Fighter MaxHandAmount */
        MaxHandAmount?: (number|null);

        /** Fighter HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** Fighter HeadFrame */
        HeadFrame?: (string|null);

        /** Fighter NameText */
        NameText?: (number|null);
    }

    /** Represents a Fighter. */
    class Fighter implements IFighter {

        /**
         * Constructs a new Fighter.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFighter);

        /** Fighter Uid. */
        public Uid: (number|Long);

        /** Fighter Hand. */
        public Hand: pb.ICard[];

        /** Fighter ObjId. */
        public ObjId: number;

        /** Fighter CasterSkills. */
        public CasterSkills: number[];

        /** Fighter Name. */
        public Name: string;

        /** Fighter Camp. */
        public Camp: number;

        /** Fighter PvpScore. */
        public PvpScore: number;

        /** Fighter MaxHandAmount. */
        public MaxHandAmount: number;

        /** Fighter HeadImgUrl. */
        public HeadImgUrl: string;

        /** Fighter HeadFrame. */
        public HeadFrame: string;

        /** Fighter NameText. */
        public NameText: number;

        /**
         * Creates a new Fighter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Fighter instance
         */
        public static create(properties?: pb.IFighter): pb.Fighter;

        /**
         * Encodes the specified Fighter message. Does not implicitly {@link pb.Fighter.verify|verify} messages.
         * @param message Fighter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFighter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Fighter message, length delimited. Does not implicitly {@link pb.Fighter.verify|verify} messages.
         * @param message Fighter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFighter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Fighter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Fighter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Fighter;

        /**
         * Decodes a Fighter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Fighter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Fighter;

        /**
         * Verifies a Fighter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a Grid. */
    interface IGrid {

        /** Grid ObjId */
        ObjId?: (number|null);

        /** Grid InGridCard */
        InGridCard?: (pb.ICard|null);

        /** Grid Owner */
        Owner?: (number|Long|null);

        /** Grid Effect */
        Effect?: (pb.IMovieEffect[]|null);
    }

    /** Represents a Grid. */
    class Grid implements IGrid {

        /**
         * Constructs a new Grid.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGrid);

        /** Grid ObjId. */
        public ObjId: number;

        /** Grid InGridCard. */
        public InGridCard?: (pb.ICard|null);

        /** Grid Owner. */
        public Owner: (number|Long);

        /** Grid Effect. */
        public Effect: pb.IMovieEffect[];

        /**
         * Creates a new Grid instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Grid instance
         */
        public static create(properties?: pb.IGrid): pb.Grid;

        /**
         * Encodes the specified Grid message. Does not implicitly {@link pb.Grid.verify|verify} messages.
         * @param message Grid message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGrid, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Grid message, length delimited. Does not implicitly {@link pb.Grid.verify|verify} messages.
         * @param message Grid message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGrid, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Grid message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Grid
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Grid;

        /**
         * Decodes a Grid message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Grid
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Grid;

        /**
         * Verifies a Grid message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FightDesk. */
    interface IFightDesk {

        /** FightDesk DeskId */
        DeskId?: (number|Long|null);

        /** FightDesk Type */
        Type?: (number|null);

        /** FightDesk Grids */
        Grids?: (pb.IGrid[]|null);

        /** FightDesk Fighter1 */
        Fighter1?: (pb.IFighter|null);

        /** FightDesk Fighter2 */
        Fighter2?: (pb.IFighter|null);

        /** FightDesk Scale */
        Scale?: (number|null);

        /** FightDesk BattleRes */
        BattleRes?: (number|null);

        /** FightDesk IsFirstPvp */
        IsFirstPvp?: (boolean|null);
    }

    /** Represents a FightDesk. */
    class FightDesk implements IFightDesk {

        /**
         * Constructs a new FightDesk.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFightDesk);

        /** FightDesk DeskId. */
        public DeskId: (number|Long);

        /** FightDesk Type. */
        public Type: number;

        /** FightDesk Grids. */
        public Grids: pb.IGrid[];

        /** FightDesk Fighter1. */
        public Fighter1?: (pb.IFighter|null);

        /** FightDesk Fighter2. */
        public Fighter2?: (pb.IFighter|null);

        /** FightDesk Scale. */
        public Scale: number;

        /** FightDesk BattleRes. */
        public BattleRes: number;

        /** FightDesk IsFirstPvp. */
        public IsFirstPvp: boolean;

        /**
         * Creates a new FightDesk instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FightDesk instance
         */
        public static create(properties?: pb.IFightDesk): pb.FightDesk;

        /**
         * Encodes the specified FightDesk message. Does not implicitly {@link pb.FightDesk.verify|verify} messages.
         * @param message FightDesk message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFightDesk, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FightDesk message, length delimited. Does not implicitly {@link pb.FightDesk.verify|verify} messages.
         * @param message FightDesk message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFightDesk, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FightDesk message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FightDesk
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FightDesk;

        /**
         * Decodes a FightDesk message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FightDesk
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FightDesk;

        /**
         * Verifies a FightDesk message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** BattleHandType enum. */
    enum BattleHandType {
        UnknowType = 0,
        Default = 1,
        Random = 2,
        Ban = 3,
        Switch = 4
    }

    /** Properties of a SeasonBattle. */
    interface ISeasonBattle {

        /** SeasonBattle Battle */
        Battle?: (pb.IFightDesk|null);

        /** SeasonBattle HandType */
        HandType?: (pb.BattleHandType|null);

        /** SeasonBattle MyHandCards */
        MyHandCards?: (pb.ISkinGCard[]|null);

        /** SeasonBattle Arg */
        Arg?: (Uint8Array|null);
    }

    /** Represents a SeasonBattle. */
    class SeasonBattle implements ISeasonBattle {

        /**
         * Constructs a new SeasonBattle.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonBattle);

        /** SeasonBattle Battle. */
        public Battle?: (pb.IFightDesk|null);

        /** SeasonBattle HandType. */
        public HandType: pb.BattleHandType;

        /** SeasonBattle MyHandCards. */
        public MyHandCards: pb.ISkinGCard[];

        /** SeasonBattle Arg. */
        public Arg: Uint8Array;

        /**
         * Creates a new SeasonBattle instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonBattle instance
         */
        public static create(properties?: pb.ISeasonBattle): pb.SeasonBattle;

        /**
         * Encodes the specified SeasonBattle message. Does not implicitly {@link pb.SeasonBattle.verify|verify} messages.
         * @param message SeasonBattle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonBattle, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonBattle message, length delimited. Does not implicitly {@link pb.SeasonBattle.verify|verify} messages.
         * @param message SeasonBattle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonBattle, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonBattle message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonBattle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonBattle;

        /**
         * Decodes a SeasonBattle message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonBattle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonBattle;

        /**
         * Verifies a SeasonBattle message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonRandomHand. */
    interface ISeasonRandomHand {

        /** SeasonRandomHand ChooseAmount */
        ChooseAmount?: (number|null);

        /** SeasonRandomHand RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents a SeasonRandomHand. */
    class SeasonRandomHand implements ISeasonRandomHand {

        /**
         * Constructs a new SeasonRandomHand.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonRandomHand);

        /** SeasonRandomHand ChooseAmount. */
        public ChooseAmount: number;

        /** SeasonRandomHand RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new SeasonRandomHand instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonRandomHand instance
         */
        public static create(properties?: pb.ISeasonRandomHand): pb.SeasonRandomHand;

        /**
         * Encodes the specified SeasonRandomHand message. Does not implicitly {@link pb.SeasonRandomHand.verify|verify} messages.
         * @param message SeasonRandomHand message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonRandomHand, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonRandomHand message, length delimited. Does not implicitly {@link pb.SeasonRandomHand.verify|verify} messages.
         * @param message SeasonRandomHand message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonRandomHand, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonRandomHand message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonRandomHand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonRandomHand;

        /**
         * Decodes a SeasonRandomHand message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonRandomHand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonRandomHand;

        /**
         * Verifies a SeasonRandomHand message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonBanHand. */
    interface ISeasonBanHand {

        /** SeasonBanHand BanMyCardIdxs */
        BanMyCardIdxs?: (number[]|null);

        /** SeasonBanHand MyRandomCards */
        MyRandomCards?: (pb.ISkinGCard[]|null);

        /** SeasonBanHand BanEnemyCardIdxs */
        BanEnemyCardIdxs?: (number[]|null);

        /** SeasonBanHand EnemyBanCards */
        EnemyBanCards?: (pb.ISkinGCard[]|null);
    }

    /** Represents a SeasonBanHand. */
    class SeasonBanHand implements ISeasonBanHand {

        /**
         * Constructs a new SeasonBanHand.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonBanHand);

        /** SeasonBanHand BanMyCardIdxs. */
        public BanMyCardIdxs: number[];

        /** SeasonBanHand MyRandomCards. */
        public MyRandomCards: pb.ISkinGCard[];

        /** SeasonBanHand BanEnemyCardIdxs. */
        public BanEnemyCardIdxs: number[];

        /** SeasonBanHand EnemyBanCards. */
        public EnemyBanCards: pb.ISkinGCard[];

        /**
         * Creates a new SeasonBanHand instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonBanHand instance
         */
        public static create(properties?: pb.ISeasonBanHand): pb.SeasonBanHand;

        /**
         * Encodes the specified SeasonBanHand message. Does not implicitly {@link pb.SeasonBanHand.verify|verify} messages.
         * @param message SeasonBanHand message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonBanHand, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonBanHand message, length delimited. Does not implicitly {@link pb.SeasonBanHand.verify|verify} messages.
         * @param message SeasonBanHand message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonBanHand, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonBanHand message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonBanHand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonBanHand;

        /**
         * Decodes a SeasonBanHand message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonBanHand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonBanHand;

        /**
         * Verifies a SeasonBanHand message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonSwitchHand. */
    interface ISeasonSwitchHand {

        /** SeasonSwitchHand SwitchMyCardIdxs */
        SwitchMyCardIdxs?: (number[]|null);

        /** SeasonSwitchHand SwitchEnemyCardIdxs */
        SwitchEnemyCardIdxs?: (number[]|null);

        /** SeasonSwitchHand EnemySwitchCards */
        EnemySwitchCards?: (pb.ISkinGCard[]|null);
    }

    /** Represents a SeasonSwitchHand. */
    class SeasonSwitchHand implements ISeasonSwitchHand {

        /**
         * Constructs a new SeasonSwitchHand.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonSwitchHand);

        /** SeasonSwitchHand SwitchMyCardIdxs. */
        public SwitchMyCardIdxs: number[];

        /** SeasonSwitchHand SwitchEnemyCardIdxs. */
        public SwitchEnemyCardIdxs: number[];

        /** SeasonSwitchHand EnemySwitchCards. */
        public EnemySwitchCards: pb.ISkinGCard[];

        /**
         * Creates a new SeasonSwitchHand instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonSwitchHand instance
         */
        public static create(properties?: pb.ISeasonSwitchHand): pb.SeasonSwitchHand;

        /**
         * Encodes the specified SeasonSwitchHand message. Does not implicitly {@link pb.SeasonSwitchHand.verify|verify} messages.
         * @param message SeasonSwitchHand message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonSwitchHand, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonSwitchHand message, length delimited. Does not implicitly {@link pb.SeasonSwitchHand.verify|verify} messages.
         * @param message SeasonSwitchHand message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonSwitchHand, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonSwitchHand message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonSwitchHand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonSwitchHand;

        /**
         * Decodes a SeasonSwitchHand message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonSwitchHand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonSwitchHand;

        /**
         * Verifies a SeasonSwitchHand message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonBattleReady. */
    interface ISeasonBattleReady {

        /** SeasonBattleReady ChooseCards */
        ChooseCards?: (number[]|null);
    }

    /** Represents a SeasonBattleReady. */
    class SeasonBattleReady implements ISeasonBattleReady {

        /**
         * Constructs a new SeasonBattleReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonBattleReady);

        /** SeasonBattleReady ChooseCards. */
        public ChooseCards: number[];

        /**
         * Creates a new SeasonBattleReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonBattleReady instance
         */
        public static create(properties?: pb.ISeasonBattleReady): pb.SeasonBattleReady;

        /**
         * Encodes the specified SeasonBattleReady message. Does not implicitly {@link pb.SeasonBattleReady.verify|verify} messages.
         * @param message SeasonBattleReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonBattleReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonBattleReady message, length delimited. Does not implicitly {@link pb.SeasonBattleReady.verify|verify} messages.
         * @param message SeasonBattleReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonBattleReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonBattleReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonBattleReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonBattleReady;

        /**
         * Decodes a SeasonBattleReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonBattleReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonBattleReady;

        /**
         * Verifies a SeasonBattleReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonBattleBegin. */
    interface ISeasonBattleBegin {

        /** SeasonBattleBegin MyHand */
        MyHand?: (pb.ICard[]|null);

        /** SeasonBattleBegin EnemyHand */
        EnemyHand?: (pb.ICard[]|null);
    }

    /** Represents a SeasonBattleBegin. */
    class SeasonBattleBegin implements ISeasonBattleBegin {

        /**
         * Constructs a new SeasonBattleBegin.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonBattleBegin);

        /** SeasonBattleBegin MyHand. */
        public MyHand: pb.ICard[];

        /** SeasonBattleBegin EnemyHand. */
        public EnemyHand: pb.ICard[];

        /**
         * Creates a new SeasonBattleBegin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonBattleBegin instance
         */
        public static create(properties?: pb.ISeasonBattleBegin): pb.SeasonBattleBegin;

        /**
         * Encodes the specified SeasonBattleBegin message. Does not implicitly {@link pb.SeasonBattleBegin.verify|verify} messages.
         * @param message SeasonBattleBegin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonBattleBegin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonBattleBegin message, length delimited. Does not implicitly {@link pb.SeasonBattleBegin.verify|verify} messages.
         * @param message SeasonBattleBegin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonBattleBegin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonBattleBegin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonBattleBegin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonBattleBegin;

        /**
         * Decodes a SeasonBattleBegin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonBattleBegin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonBattleBegin;

        /**
         * Verifies a SeasonBattleBegin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FightBoutBegin. */
    interface IFightBoutBegin {

        /** FightBoutBegin BoutUid */
        BoutUid?: (number|Long|null);

        /** FightBoutBegin Actions */
        Actions?: (pb.IClientAction[]|null);

        /** FightBoutBegin BoutTimeout */
        BoutTimeout?: (number|null);
    }

    /** Represents a FightBoutBegin. */
    class FightBoutBegin implements IFightBoutBegin {

        /**
         * Constructs a new FightBoutBegin.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFightBoutBegin);

        /** FightBoutBegin BoutUid. */
        public BoutUid: (number|Long);

        /** FightBoutBegin Actions. */
        public Actions: pb.IClientAction[];

        /** FightBoutBegin BoutTimeout. */
        public BoutTimeout: number;

        /**
         * Creates a new FightBoutBegin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FightBoutBegin instance
         */
        public static create(properties?: pb.IFightBoutBegin): pb.FightBoutBegin;

        /**
         * Encodes the specified FightBoutBegin message. Does not implicitly {@link pb.FightBoutBegin.verify|verify} messages.
         * @param message FightBoutBegin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFightBoutBegin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FightBoutBegin message, length delimited. Does not implicitly {@link pb.FightBoutBegin.verify|verify} messages.
         * @param message FightBoutBegin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFightBoutBegin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FightBoutBegin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FightBoutBegin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FightBoutBegin;

        /**
         * Decodes a FightBoutBegin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FightBoutBegin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FightBoutBegin;

        /**
         * Verifies a FightBoutBegin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FightBoutCmd. */
    interface IFightBoutCmd {

        /** FightBoutCmd UseCardObjID */
        UseCardObjID?: (number|null);

        /** FightBoutCmd TargetGridId */
        TargetGridId?: (number|null);
    }

    /** Represents a FightBoutCmd. */
    class FightBoutCmd implements IFightBoutCmd {

        /**
         * Constructs a new FightBoutCmd.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFightBoutCmd);

        /** FightBoutCmd UseCardObjID. */
        public UseCardObjID: number;

        /** FightBoutCmd TargetGridId. */
        public TargetGridId: number;

        /**
         * Creates a new FightBoutCmd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FightBoutCmd instance
         */
        public static create(properties?: pb.IFightBoutCmd): pb.FightBoutCmd;

        /**
         * Encodes the specified FightBoutCmd message. Does not implicitly {@link pb.FightBoutCmd.verify|verify} messages.
         * @param message FightBoutCmd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFightBoutCmd, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FightBoutCmd message, length delimited. Does not implicitly {@link pb.FightBoutCmd.verify|verify} messages.
         * @param message FightBoutCmd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFightBoutCmd, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FightBoutCmd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FightBoutCmd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FightBoutCmd;

        /**
         * Decodes a FightBoutCmd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FightBoutCmd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FightBoutCmd;

        /**
         * Verifies a FightBoutCmd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FightBoutResult. */
    interface IFightBoutResult {

        /** FightBoutResult BoutUid */
        BoutUid?: (number|Long|null);

        /** FightBoutResult UseCardObjID */
        UseCardObjID?: (number|null);

        /** FightBoutResult TargetGridId */
        TargetGridId?: (number|null);

        /** FightBoutResult Actions */
        Actions?: (pb.IClientAction[]|null);

        /** FightBoutResult WinUid */
        WinUid?: (number|Long|null);

        /** FightBoutResult CardNeedTalk */
        CardNeedTalk?: (boolean|null);

        /** FightBoutResult IsUseCardPublicEnemy */
        IsUseCardPublicEnemy?: (boolean|null);

        /** FightBoutResult IsUseCardInFog */
        IsUseCardInFog?: (boolean|null);
    }

    /** Represents a FightBoutResult. */
    class FightBoutResult implements IFightBoutResult {

        /**
         * Constructs a new FightBoutResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFightBoutResult);

        /** FightBoutResult BoutUid. */
        public BoutUid: (number|Long);

        /** FightBoutResult UseCardObjID. */
        public UseCardObjID: number;

        /** FightBoutResult TargetGridId. */
        public TargetGridId: number;

        /** FightBoutResult Actions. */
        public Actions: pb.IClientAction[];

        /** FightBoutResult WinUid. */
        public WinUid: (number|Long);

        /** FightBoutResult CardNeedTalk. */
        public CardNeedTalk: boolean;

        /** FightBoutResult IsUseCardPublicEnemy. */
        public IsUseCardPublicEnemy: boolean;

        /** FightBoutResult IsUseCardInFog. */
        public IsUseCardInFog: boolean;

        /**
         * Creates a new FightBoutResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FightBoutResult instance
         */
        public static create(properties?: pb.IFightBoutResult): pb.FightBoutResult;

        /**
         * Encodes the specified FightBoutResult message. Does not implicitly {@link pb.FightBoutResult.verify|verify} messages.
         * @param message FightBoutResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFightBoutResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FightBoutResult message, length delimited. Does not implicitly {@link pb.FightBoutResult.verify|verify} messages.
         * @param message FightBoutResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFightBoutResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FightBoutResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FightBoutResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FightBoutResult;

        /**
         * Decodes a FightBoutResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FightBoutResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FightBoutResult;

        /**
         * Verifies a FightBoutResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ChangeCardInfo. */
    interface IChangeCardInfo {

        /** ChangeCardInfo Old */
        Old?: (pb.ICardInfo|null);

        /** ChangeCardInfo New */
        New?: (pb.ICardInfo|null);
    }

    /** Represents a ChangeCardInfo. */
    class ChangeCardInfo implements IChangeCardInfo {

        /**
         * Constructs a new ChangeCardInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IChangeCardInfo);

        /** ChangeCardInfo Old. */
        public Old?: (pb.ICardInfo|null);

        /** ChangeCardInfo New. */
        public New?: (pb.ICardInfo|null);

        /**
         * Creates a new ChangeCardInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeCardInfo instance
         */
        public static create(properties?: pb.IChangeCardInfo): pb.ChangeCardInfo;

        /**
         * Encodes the specified ChangeCardInfo message. Does not implicitly {@link pb.ChangeCardInfo.verify|verify} messages.
         * @param message ChangeCardInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IChangeCardInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChangeCardInfo message, length delimited. Does not implicitly {@link pb.ChangeCardInfo.verify|verify} messages.
         * @param message ChangeCardInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IChangeCardInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeCardInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeCardInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ChangeCardInfo;

        /**
         * Decodes a ChangeCardInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeCardInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ChangeCardInfo;

        /**
         * Verifies a ChangeCardInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ChangeResInfo. */
    interface IChangeResInfo {

        /** ChangeResInfo Old */
        Old?: (pb.IResource|null);

        /** ChangeResInfo New */
        New?: (pb.IResource|null);
    }

    /** Represents a ChangeResInfo. */
    class ChangeResInfo implements IChangeResInfo {

        /**
         * Constructs a new ChangeResInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IChangeResInfo);

        /** ChangeResInfo Old. */
        public Old?: (pb.IResource|null);

        /** ChangeResInfo New. */
        public New?: (pb.IResource|null);

        /**
         * Creates a new ChangeResInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeResInfo instance
         */
        public static create(properties?: pb.IChangeResInfo): pb.ChangeResInfo;

        /**
         * Encodes the specified ChangeResInfo message. Does not implicitly {@link pb.ChangeResInfo.verify|verify} messages.
         * @param message ChangeResInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IChangeResInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChangeResInfo message, length delimited. Does not implicitly {@link pb.ChangeResInfo.verify|verify} messages.
         * @param message ChangeResInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IChangeResInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeResInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeResInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ChangeResInfo;

        /**
         * Decodes a ChangeResInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeResInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ChangeResInfo;

        /**
         * Verifies a ChangeResInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BattleResult. */
    interface IBattleResult {

        /** BattleResult WinUid */
        WinUid?: (number|Long|null);

        /** BattleResult ChangeCards */
        ChangeCards?: (pb.IChangeCardInfo[]|null);

        /** BattleResult ChangeRes */
        ChangeRes?: (pb.IChangeResInfo[]|null);

        /** BattleResult TreasureID */
        TreasureID?: (string|null);

        /** BattleResult UpPvpLevelRewardCards */
        UpPvpLevelRewardCards?: (number[]|null);

        /** BattleResult CanShare */
        CanShare?: (boolean|null);

        /** BattleResult NoTreasureReason */
        NoTreasureReason?: (pb.NoTreasureReasonEnum|null);

        /** BattleResult UpRareTreasureModelID */
        UpRareTreasureModelID?: (string|null);

        /** BattleResult NoSubStarReason */
        NoSubStarReason?: (pb.BattleResult.NoSubStarReasonEnum|null);
    }

    /** Represents a BattleResult. */
    class BattleResult implements IBattleResult {

        /**
         * Constructs a new BattleResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBattleResult);

        /** BattleResult WinUid. */
        public WinUid: (number|Long);

        /** BattleResult ChangeCards. */
        public ChangeCards: pb.IChangeCardInfo[];

        /** BattleResult ChangeRes. */
        public ChangeRes: pb.IChangeResInfo[];

        /** BattleResult TreasureID. */
        public TreasureID: string;

        /** BattleResult UpPvpLevelRewardCards. */
        public UpPvpLevelRewardCards: number[];

        /** BattleResult CanShare. */
        public CanShare: boolean;

        /** BattleResult NoTreasureReason. */
        public NoTreasureReason: pb.NoTreasureReasonEnum;

        /** BattleResult UpRareTreasureModelID. */
        public UpRareTreasureModelID: string;

        /** BattleResult NoSubStarReason. */
        public NoSubStarReason: pb.BattleResult.NoSubStarReasonEnum;

        /**
         * Creates a new BattleResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BattleResult instance
         */
        public static create(properties?: pb.IBattleResult): pb.BattleResult;

        /**
         * Encodes the specified BattleResult message. Does not implicitly {@link pb.BattleResult.verify|verify} messages.
         * @param message BattleResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBattleResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BattleResult message, length delimited. Does not implicitly {@link pb.BattleResult.verify|verify} messages.
         * @param message BattleResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBattleResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BattleResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BattleResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BattleResult;

        /**
         * Decodes a BattleResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BattleResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BattleResult;

        /**
         * Verifies a BattleResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace BattleResult {

        /** NoSubStarReasonEnum enum. */
        enum NoSubStarReasonEnum {
            Normal = 0,
            NoSubStarPriv = 1
        }
    }

    /** Properties of a LoadFightReq. */
    interface ILoadFightReq {

        /** LoadFightReq DeskID */
        DeskID?: (number|Long|null);
    }

    /** Represents a LoadFightReq. */
    class LoadFightReq implements ILoadFightReq {

        /**
         * Constructs a new LoadFightReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILoadFightReq);

        /** LoadFightReq DeskID. */
        public DeskID: (number|Long);

        /**
         * Creates a new LoadFightReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoadFightReq instance
         */
        public static create(properties?: pb.ILoadFightReq): pb.LoadFightReq;

        /**
         * Encodes the specified LoadFightReq message. Does not implicitly {@link pb.LoadFightReq.verify|verify} messages.
         * @param message LoadFightReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILoadFightReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LoadFightReq message, length delimited. Does not implicitly {@link pb.LoadFightReq.verify|verify} messages.
         * @param message LoadFightReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILoadFightReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LoadFightReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoadFightReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LoadFightReq;

        /**
         * Decodes a LoadFightReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoadFightReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LoadFightReq;

        /**
         * Verifies a LoadFightReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RestoredFightDesk. */
    interface IRestoredFightDesk {

        /** RestoredFightDesk Desk */
        Desk?: (pb.IFightDesk|null);

        /** RestoredFightDesk CurBoutUid */
        CurBoutUid?: (number|Long|null);

        /** RestoredFightDesk CampaignType */
        CampaignType?: (number|null);

        /** RestoredFightDesk CampaignLevel */
        CampaignLevel?: (number|null);

        /** RestoredFightDesk LevelID */
        LevelID?: (number|null);

        /** RestoredFightDesk FieldCnt */
        FieldCnt?: (number|null);

        /** RestoredFightDesk CurBout */
        CurBout?: (number|null);
    }

    /** Represents a RestoredFightDesk. */
    class RestoredFightDesk implements IRestoredFightDesk {

        /**
         * Constructs a new RestoredFightDesk.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRestoredFightDesk);

        /** RestoredFightDesk Desk. */
        public Desk?: (pb.IFightDesk|null);

        /** RestoredFightDesk CurBoutUid. */
        public CurBoutUid: (number|Long);

        /** RestoredFightDesk CampaignType. */
        public CampaignType: number;

        /** RestoredFightDesk CampaignLevel. */
        public CampaignLevel: number;

        /** RestoredFightDesk LevelID. */
        public LevelID: number;

        /** RestoredFightDesk FieldCnt. */
        public FieldCnt: number;

        /** RestoredFightDesk CurBout. */
        public CurBout: number;

        /**
         * Creates a new RestoredFightDesk instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RestoredFightDesk instance
         */
        public static create(properties?: pb.IRestoredFightDesk): pb.RestoredFightDesk;

        /**
         * Encodes the specified RestoredFightDesk message. Does not implicitly {@link pb.RestoredFightDesk.verify|verify} messages.
         * @param message RestoredFightDesk message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRestoredFightDesk, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RestoredFightDesk message, length delimited. Does not implicitly {@link pb.RestoredFightDesk.verify|verify} messages.
         * @param message RestoredFightDesk message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRestoredFightDesk, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RestoredFightDesk message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RestoredFightDesk
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RestoredFightDesk;

        /**
         * Decodes a RestoredFightDesk message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RestoredFightDesk
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RestoredFightDesk;

        /**
         * Verifies a RestoredFightDesk message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VideoBattleData. */
    interface IVideoBattleData {

        /** VideoBattleData Actions */
        Actions?: (pb.IVideoAction[]|null);

        /** VideoBattleData ShareUid */
        ShareUid?: (number|Long|null);
    }

    /** Represents a VideoBattleData. */
    class VideoBattleData implements IVideoBattleData {

        /**
         * Constructs a new VideoBattleData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVideoBattleData);

        /** VideoBattleData Actions. */
        public Actions: pb.IVideoAction[];

        /** VideoBattleData ShareUid. */
        public ShareUid: (number|Long);

        /**
         * Creates a new VideoBattleData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VideoBattleData instance
         */
        public static create(properties?: pb.IVideoBattleData): pb.VideoBattleData;

        /**
         * Encodes the specified VideoBattleData message. Does not implicitly {@link pb.VideoBattleData.verify|verify} messages.
         * @param message VideoBattleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVideoBattleData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VideoBattleData message, length delimited. Does not implicitly {@link pb.VideoBattleData.verify|verify} messages.
         * @param message VideoBattleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVideoBattleData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VideoBattleData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VideoBattleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VideoBattleData;

        /**
         * Decodes a VideoBattleData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VideoBattleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VideoBattleData;

        /**
         * Verifies a VideoBattleData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VideoAction. */
    interface IVideoAction {

        /** VideoAction ID */
        ID?: (pb.VideoAction.ActionID|null);

        /** VideoAction Data */
        Data?: (Uint8Array|null);
    }

    /** Represents a VideoAction. */
    class VideoAction implements IVideoAction {

        /**
         * Constructs a new VideoAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVideoAction);

        /** VideoAction ID. */
        public ID: pb.VideoAction.ActionID;

        /** VideoAction Data. */
        public Data: Uint8Array;

        /**
         * Creates a new VideoAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VideoAction instance
         */
        public static create(properties?: pb.IVideoAction): pb.VideoAction;

        /**
         * Encodes the specified VideoAction message. Does not implicitly {@link pb.VideoAction.verify|verify} messages.
         * @param message VideoAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVideoAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VideoAction message, length delimited. Does not implicitly {@link pb.VideoAction.verify|verify} messages.
         * @param message VideoAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVideoAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VideoAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VideoAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VideoAction;

        /**
         * Decodes a VideoAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VideoAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VideoAction;

        /**
         * Verifies a VideoAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace VideoAction {

        /** ActionID enum. */
        enum ActionID {
            Unknow = 0,
            Begin = 1,
            BoutBegin = 2,
            BoutAction = 3,
            End = 4
        }
    }

    /** Properties of an InGridCard. */
    interface IInGridCard {

        /** InGridCard GridID */
        GridID?: (number|null);

        /** InGridCard GCardID */
        GCardID?: (number|null);

        /** InGridCard Skin */
        Skin?: (string|null);

        /** InGridCard Equip */
        Equip?: (string|null);
    }

    /** Represents an InGridCard. */
    class InGridCard implements IInGridCard {

        /**
         * Constructs a new InGridCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IInGridCard);

        /** InGridCard GridID. */
        public GridID: number;

        /** InGridCard GCardID. */
        public GCardID: number;

        /** InGridCard Skin. */
        public Skin: string;

        /** InGridCard Equip. */
        public Equip: string;

        /**
         * Creates a new InGridCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InGridCard instance
         */
        public static create(properties?: pb.IInGridCard): pb.InGridCard;

        /**
         * Encodes the specified InGridCard message. Does not implicitly {@link pb.InGridCard.verify|verify} messages.
         * @param message InGridCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IInGridCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified InGridCard message, length delimited. Does not implicitly {@link pb.InGridCard.verify|verify} messages.
         * @param message InGridCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IInGridCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an InGridCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InGridCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.InGridCard;

        /**
         * Decodes an InGridCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InGridCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.InGridCard;

        /**
         * Verifies an InGridCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FighterData. */
    interface IFighterData {

        /** FighterData Uid */
        Uid?: (number|Long|null);

        /** FighterData ClientID */
        ClientID?: (number|Long|null);

        /** FighterData GateID */
        GateID?: (number|null);

        /** FighterData HandCards */
        HandCards?: (pb.ISkinGCard[]|null);

        /** FighterData DrawCardPool */
        DrawCardPool?: (pb.ISkinGCard[]|null);

        /** FighterData Name */
        Name?: (string|null);

        /** FighterData Camp */
        Camp?: (number|null);

        /** FighterData PvpScore */
        PvpScore?: (number|null);

        /** FighterData IsRobot */
        IsRobot?: (boolean|null);

        /** FighterData GridCards */
        GridCards?: (pb.IInGridCard[]|null);

        /** FighterData CasterSkills */
        CasterSkills?: (number[]|null);

        /** FighterData Mmr */
        Mmr?: (number|null);

        /** FighterData RobotID */
        RobotID?: (number|Long|null);

        /** FighterData HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** FighterData HeadFrame */
        HeadFrame?: (string|null);

        /** FighterData NameText */
        NameText?: (number|null);
    }

    /** Represents a FighterData. */
    class FighterData implements IFighterData {

        /**
         * Constructs a new FighterData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFighterData);

        /** FighterData Uid. */
        public Uid: (number|Long);

        /** FighterData ClientID. */
        public ClientID: (number|Long);

        /** FighterData GateID. */
        public GateID: number;

        /** FighterData HandCards. */
        public HandCards: pb.ISkinGCard[];

        /** FighterData DrawCardPool. */
        public DrawCardPool: pb.ISkinGCard[];

        /** FighterData Name. */
        public Name: string;

        /** FighterData Camp. */
        public Camp: number;

        /** FighterData PvpScore. */
        public PvpScore: number;

        /** FighterData IsRobot. */
        public IsRobot: boolean;

        /** FighterData GridCards. */
        public GridCards: pb.IInGridCard[];

        /** FighterData CasterSkills. */
        public CasterSkills: number[];

        /** FighterData Mmr. */
        public Mmr: number;

        /** FighterData RobotID. */
        public RobotID: (number|Long);

        /** FighterData HeadImgUrl. */
        public HeadImgUrl: string;

        /** FighterData HeadFrame. */
        public HeadFrame: string;

        /** FighterData NameText. */
        public NameText: number;

        /**
         * Creates a new FighterData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FighterData instance
         */
        public static create(properties?: pb.IFighterData): pb.FighterData;

        /**
         * Encodes the specified FighterData message. Does not implicitly {@link pb.FighterData.verify|verify} messages.
         * @param message FighterData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFighterData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FighterData message, length delimited. Does not implicitly {@link pb.FighterData.verify|verify} messages.
         * @param message FighterData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFighterData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FighterData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FighterData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FighterData;

        /**
         * Decodes a FighterData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FighterData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FighterData;

        /**
         * Verifies a FighterData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BeginBattleArg. */
    interface IBeginBattleArg {

        /** BeginBattleArg BattleType */
        BattleType?: (number|null);

        /** BeginBattleArg Fighter1 */
        Fighter1?: (pb.IFighterData|null);

        /** BeginBattleArg Fighter2 */
        Fighter2?: (pb.IFighterData|null);

        /** BeginBattleArg NeedFortifications */
        NeedFortifications?: (boolean|null);

        /** BeginBattleArg BonusType */
        BonusType?: (number|null);

        /** BeginBattleArg NeedVideo */
        NeedVideo?: (boolean|null);

        /** BeginBattleArg UpperType */
        UpperType?: (number|null);

        /** BeginBattleArg IsFirstPvp */
        IsFirstPvp?: (boolean|null);

        /** BeginBattleArg SeasonPvpSession */
        SeasonPvpSession?: (number|null);
    }

    /** Represents a BeginBattleArg. */
    class BeginBattleArg implements IBeginBattleArg {

        /**
         * Constructs a new BeginBattleArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBeginBattleArg);

        /** BeginBattleArg BattleType. */
        public BattleType: number;

        /** BeginBattleArg Fighter1. */
        public Fighter1?: (pb.IFighterData|null);

        /** BeginBattleArg Fighter2. */
        public Fighter2?: (pb.IFighterData|null);

        /** BeginBattleArg NeedFortifications. */
        public NeedFortifications: boolean;

        /** BeginBattleArg BonusType. */
        public BonusType: number;

        /** BeginBattleArg NeedVideo. */
        public NeedVideo: boolean;

        /** BeginBattleArg UpperType. */
        public UpperType: number;

        /** BeginBattleArg IsFirstPvp. */
        public IsFirstPvp: boolean;

        /** BeginBattleArg SeasonPvpSession. */
        public SeasonPvpSession: number;

        /**
         * Creates a new BeginBattleArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginBattleArg instance
         */
        public static create(properties?: pb.IBeginBattleArg): pb.BeginBattleArg;

        /**
         * Encodes the specified BeginBattleArg message. Does not implicitly {@link pb.BeginBattleArg.verify|verify} messages.
         * @param message BeginBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBeginBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BeginBattleArg message, length delimited. Does not implicitly {@link pb.BeginBattleArg.verify|verify} messages.
         * @param message BeginBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBeginBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeginBattleArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BeginBattleArg;

        /**
         * Decodes a BeginBattleArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BeginBattleArg;

        /**
         * Verifies a BeginBattleArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BeginLevelBattleArg. */
    interface IBeginLevelBattleArg {

        /** BeginLevelBattleArg Fighter1 */
        Fighter1?: (pb.IFighterData|null);

        /** BeginLevelBattleArg LevelID */
        LevelID?: (number|null);
    }

    /** Represents a BeginLevelBattleArg. */
    class BeginLevelBattleArg implements IBeginLevelBattleArg {

        /**
         * Constructs a new BeginLevelBattleArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBeginLevelBattleArg);

        /** BeginLevelBattleArg Fighter1. */
        public Fighter1?: (pb.IFighterData|null);

        /** BeginLevelBattleArg LevelID. */
        public LevelID: number;

        /**
         * Creates a new BeginLevelBattleArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginLevelBattleArg instance
         */
        public static create(properties?: pb.IBeginLevelBattleArg): pb.BeginLevelBattleArg;

        /**
         * Encodes the specified BeginLevelBattleArg message. Does not implicitly {@link pb.BeginLevelBattleArg.verify|verify} messages.
         * @param message BeginLevelBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBeginLevelBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BeginLevelBattleArg message, length delimited. Does not implicitly {@link pb.BeginLevelBattleArg.verify|verify} messages.
         * @param message BeginLevelBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBeginLevelBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeginLevelBattleArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginLevelBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BeginLevelBattleArg;

        /**
         * Decodes a BeginLevelBattleArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginLevelBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BeginLevelBattleArg;

        /**
         * Verifies a BeginLevelBattleArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LoadBattleArg. */
    interface ILoadBattleArg {

        /** LoadBattleArg Uid */
        Uid?: (number|Long|null);

        /** LoadBattleArg ClientID */
        ClientID?: (number|Long|null);

        /** LoadBattleArg GateID */
        GateID?: (number|null);

        /** LoadBattleArg BattleID */
        BattleID?: (number|Long|null);
    }

    /** Represents a LoadBattleArg. */
    class LoadBattleArg implements ILoadBattleArg {

        /**
         * Constructs a new LoadBattleArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILoadBattleArg);

        /** LoadBattleArg Uid. */
        public Uid: (number|Long);

        /** LoadBattleArg ClientID. */
        public ClientID: (number|Long);

        /** LoadBattleArg GateID. */
        public GateID: number;

        /** LoadBattleArg BattleID. */
        public BattleID: (number|Long);

        /**
         * Creates a new LoadBattleArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoadBattleArg instance
         */
        public static create(properties?: pb.ILoadBattleArg): pb.LoadBattleArg;

        /**
         * Encodes the specified LoadBattleArg message. Does not implicitly {@link pb.LoadBattleArg.verify|verify} messages.
         * @param message LoadBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILoadBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LoadBattleArg message, length delimited. Does not implicitly {@link pb.LoadBattleArg.verify|verify} messages.
         * @param message LoadBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILoadBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LoadBattleArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoadBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LoadBattleArg;

        /**
         * Decodes a LoadBattleArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoadBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LoadBattleArg;

        /**
         * Verifies a LoadBattleArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a C2SLoadFightArg. */
    interface IC2SLoadFightArg {

        /** C2SLoadFightArg IsIgnorePve */
        IsIgnorePve?: (boolean|null);
    }

    /** Represents a C2SLoadFightArg. */
    class C2SLoadFightArg implements IC2SLoadFightArg {

        /**
         * Constructs a new C2SLoadFightArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SLoadFightArg);

        /** C2SLoadFightArg IsIgnorePve. */
        public IsIgnorePve: boolean;

        /**
         * Creates a new C2SLoadFightArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SLoadFightArg instance
         */
        public static create(properties?: pb.IC2SLoadFightArg): pb.C2SLoadFightArg;

        /**
         * Encodes the specified C2SLoadFightArg message. Does not implicitly {@link pb.C2SLoadFightArg.verify|verify} messages.
         * @param message C2SLoadFightArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SLoadFightArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified C2SLoadFightArg message, length delimited. Does not implicitly {@link pb.C2SLoadFightArg.verify|verify} messages.
         * @param message C2SLoadFightArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SLoadFightArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2SLoadFightArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SLoadFightArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.C2SLoadFightArg;

        /**
         * Decodes a C2SLoadFightArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SLoadFightArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.C2SLoadFightArg;

        /**
         * Verifies a C2SLoadFightArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ClientAction. */
    interface IClientAction {

        /** ClientAction ID */
        ID?: (pb.ClientAction.ActionID|null);

        /** ClientAction Data */
        Data?: (Uint8Array|null);
    }

    /** Represents a ClientAction. */
    class ClientAction implements IClientAction {

        /**
         * Constructs a new ClientAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IClientAction);

        /** ClientAction ID. */
        public ID: pb.ClientAction.ActionID;

        /** ClientAction Data. */
        public Data: Uint8Array;

        /**
         * Creates a new ClientAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ClientAction instance
         */
        public static create(properties?: pb.IClientAction): pb.ClientAction;

        /**
         * Encodes the specified ClientAction message. Does not implicitly {@link pb.ClientAction.verify|verify} messages.
         * @param message ClientAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IClientAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ClientAction message, length delimited. Does not implicitly {@link pb.ClientAction.verify|verify} messages.
         * @param message ClientAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IClientAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ClientAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ClientAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ClientAction;

        /**
         * Decodes a ClientAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ClientAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ClientAction;

        /**
         * Verifies a ClientAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace ClientAction {

        /** ActionID enum. */
        enum ActionID {
            Unknow = 0,
            Attack = 1,
            TurnOver = 2,
            Skill = 3,
            SkillStatusMovie = 6,
            ModifyValue = 7,
            TextMovie = 9,
            Movie = 10,
            DrawCard = 11,
            Bonus = 12,
            SwitchPos = 13,
            HandShow = 14,
            AddSkill = 15,
            DelSkill = 16,
            DisCard = 17,
            Destroy = 18,
            Summon = 19,
            Return = 20,
            Guanxing = 21,
            Copy = 22,
            EnterFog = 23,
            LeaveFog = 24,
            GoldGob = 25,
            PlayCard = 1000,
            Move = 1001,
            BattleEnd = 1002
        }
    }

    /** Properties of an AttackAct. */
    interface IAttackAct {

        /** AttackAct Attacker */
        Attacker?: (number|null);

        /** AttackAct WinActs */
        WinActs?: (pb.IAttackWinAct[]|null);

        /** AttackAct MoveActs */
        MoveActs?: (pb.IMoveAct[]|null);

        /** AttackAct AfterMoveActs */
        AfterMoveActs?: (pb.IClientAction[]|null);

        /** AttackAct IsArrow */
        IsArrow?: (boolean|null);
    }

    /** Represents an AttackAct. */
    class AttackAct implements IAttackAct {

        /**
         * Constructs a new AttackAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAttackAct);

        /** AttackAct Attacker. */
        public Attacker: number;

        /** AttackAct WinActs. */
        public WinActs: pb.IAttackWinAct[];

        /** AttackAct MoveActs. */
        public MoveActs: pb.IMoveAct[];

        /** AttackAct AfterMoveActs. */
        public AfterMoveActs: pb.IClientAction[];

        /** AttackAct IsArrow. */
        public IsArrow: boolean;

        /**
         * Creates a new AttackAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AttackAct instance
         */
        public static create(properties?: pb.IAttackAct): pb.AttackAct;

        /**
         * Encodes the specified AttackAct message. Does not implicitly {@link pb.AttackAct.verify|verify} messages.
         * @param message AttackAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAttackAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AttackAct message, length delimited. Does not implicitly {@link pb.AttackAct.verify|verify} messages.
         * @param message AttackAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAttackAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AttackAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AttackAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AttackAct;

        /**
         * Decodes an AttackAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AttackAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AttackAct;

        /**
         * Verifies an AttackAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AttackWinAct. */
    interface IAttackWinAct {

        /** AttackWinAct BeAttacker */
        BeAttacker?: (number|null);

        /** AttackWinAct WinPos */
        WinPos?: (number|null);

        /** AttackWinAct LosePos */
        LosePos?: (number|null);
    }

    /** Represents an AttackWinAct. */
    class AttackWinAct implements IAttackWinAct {

        /**
         * Constructs a new AttackWinAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAttackWinAct);

        /** AttackWinAct BeAttacker. */
        public BeAttacker: number;

        /** AttackWinAct WinPos. */
        public WinPos: number;

        /** AttackWinAct LosePos. */
        public LosePos: number;

        /**
         * Creates a new AttackWinAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AttackWinAct instance
         */
        public static create(properties?: pb.IAttackWinAct): pb.AttackWinAct;

        /**
         * Encodes the specified AttackWinAct message. Does not implicitly {@link pb.AttackWinAct.verify|verify} messages.
         * @param message AttackWinAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAttackWinAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AttackWinAct message, length delimited. Does not implicitly {@link pb.AttackWinAct.verify|verify} messages.
         * @param message AttackWinAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAttackWinAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AttackWinAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AttackWinAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AttackWinAct;

        /**
         * Decodes an AttackWinAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AttackWinAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AttackWinAct;

        /**
         * Verifies an AttackWinAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MoveAct. */
    interface IMoveAct {

        /** MoveAct Target */
        Target?: (number|null);

        /** MoveAct TargetGrid */
        TargetGrid?: (number|null);

        /** MoveAct MovieID */
        MovieID?: (string|null);

        /** MoveAct MovePos */
        MovePos?: (number|null);

        /** MoveAct OwnerObjID */
        OwnerObjID?: (number|null);
    }

    /** Represents a MoveAct. */
    class MoveAct implements IMoveAct {

        /**
         * Constructs a new MoveAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMoveAct);

        /** MoveAct Target. */
        public Target: number;

        /** MoveAct TargetGrid. */
        public TargetGrid: number;

        /** MoveAct MovieID. */
        public MovieID: string;

        /** MoveAct MovePos. */
        public MovePos: number;

        /** MoveAct OwnerObjID. */
        public OwnerObjID: number;

        /**
         * Creates a new MoveAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MoveAct instance
         */
        public static create(properties?: pb.IMoveAct): pb.MoveAct;

        /**
         * Encodes the specified MoveAct message. Does not implicitly {@link pb.MoveAct.verify|verify} messages.
         * @param message MoveAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMoveAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MoveAct message, length delimited. Does not implicitly {@link pb.MoveAct.verify|verify} messages.
         * @param message MoveAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMoveAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MoveAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MoveAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MoveAct;

        /**
         * Decodes a MoveAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MoveAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MoveAct;

        /**
         * Verifies a MoveAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TurnOverAct. */
    interface ITurnOverAct {

        /** TurnOverAct BeTurners */
        BeTurners?: (number[]|null);
    }

    /** Represents a TurnOverAct. */
    class TurnOverAct implements ITurnOverAct {

        /**
         * Constructs a new TurnOverAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITurnOverAct);

        /** TurnOverAct BeTurners. */
        public BeTurners: number[];

        /**
         * Creates a new TurnOverAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TurnOverAct instance
         */
        public static create(properties?: pb.ITurnOverAct): pb.TurnOverAct;

        /**
         * Encodes the specified TurnOverAct message. Does not implicitly {@link pb.TurnOverAct.verify|verify} messages.
         * @param message TurnOverAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITurnOverAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TurnOverAct message, length delimited. Does not implicitly {@link pb.TurnOverAct.verify|verify} messages.
         * @param message TurnOverAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITurnOverAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TurnOverAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TurnOverAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TurnOverAct;

        /**
         * Decodes a TurnOverAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TurnOverAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TurnOverAct;

        /**
         * Verifies a TurnOverAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SkillAct. */
    interface ISkillAct {

        /** SkillAct Owner */
        Owner?: (number|null);

        /** SkillAct SkillID */
        SkillID?: (number|null);

        /** SkillAct Actions */
        Actions?: (pb.IClientAction[]|null);

        /** SkillAct MoveActs */
        MoveActs?: (pb.IMoveAct[]|null);

        /** SkillAct AfterMoveActs */
        AfterMoveActs?: (pb.IClientAction[]|null);

        /** SkillAct IsEquip */
        IsEquip?: (boolean|null);
    }

    /** Represents a SkillAct. */
    class SkillAct implements ISkillAct {

        /**
         * Constructs a new SkillAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISkillAct);

        /** SkillAct Owner. */
        public Owner: number;

        /** SkillAct SkillID. */
        public SkillID: number;

        /** SkillAct Actions. */
        public Actions: pb.IClientAction[];

        /** SkillAct MoveActs. */
        public MoveActs: pb.IMoveAct[];

        /** SkillAct AfterMoveActs. */
        public AfterMoveActs: pb.IClientAction[];

        /** SkillAct IsEquip. */
        public IsEquip: boolean;

        /**
         * Creates a new SkillAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SkillAct instance
         */
        public static create(properties?: pb.ISkillAct): pb.SkillAct;

        /**
         * Encodes the specified SkillAct message. Does not implicitly {@link pb.SkillAct.verify|verify} messages.
         * @param message SkillAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISkillAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SkillAct message, length delimited. Does not implicitly {@link pb.SkillAct.verify|verify} messages.
         * @param message SkillAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISkillAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SkillAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SkillAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SkillAct;

        /**
         * Decodes a SkillAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SkillAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SkillAct;

        /**
         * Verifies a SkillAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ModifyValueAct. */
    interface IModifyValueAct {

        /** ModifyValueAct Value */
        Value?: (number|null);

        /** ModifyValueAct Targets */
        Targets?: (number[]|null);

        /** ModifyValueAct ModifyType */
        ModifyType?: (number|null);
    }

    /** Represents a ModifyValueAct. */
    class ModifyValueAct implements IModifyValueAct {

        /**
         * Constructs a new ModifyValueAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IModifyValueAct);

        /** ModifyValueAct Value. */
        public Value: number;

        /** ModifyValueAct Targets. */
        public Targets: number[];

        /** ModifyValueAct ModifyType. */
        public ModifyType: number;

        /**
         * Creates a new ModifyValueAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ModifyValueAct instance
         */
        public static create(properties?: pb.IModifyValueAct): pb.ModifyValueAct;

        /**
         * Encodes the specified ModifyValueAct message. Does not implicitly {@link pb.ModifyValueAct.verify|verify} messages.
         * @param message ModifyValueAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IModifyValueAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ModifyValueAct message, length delimited. Does not implicitly {@link pb.ModifyValueAct.verify|verify} messages.
         * @param message ModifyValueAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IModifyValueAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ModifyValueAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ModifyValueAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ModifyValueAct;

        /**
         * Decodes a ModifyValueAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ModifyValueAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ModifyValueAct;

        /**
         * Verifies a ModifyValueAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SkillStatusMovieAct. */
    interface ISkillStatusMovieAct {

        /** SkillStatusMovieAct Type */
        Type?: (number|null);

        /** SkillStatusMovieAct MovieId */
        MovieId?: (string|null);

        /** SkillStatusMovieAct Targets */
        Targets?: (number[]|null);

        /** SkillStatusMovieAct PlayType */
        PlayType?: (number|null);
    }

    /** Represents a SkillStatusMovieAct. */
    class SkillStatusMovieAct implements ISkillStatusMovieAct {

        /**
         * Constructs a new SkillStatusMovieAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISkillStatusMovieAct);

        /** SkillStatusMovieAct Type. */
        public Type: number;

        /** SkillStatusMovieAct MovieId. */
        public MovieId: string;

        /** SkillStatusMovieAct Targets. */
        public Targets: number[];

        /** SkillStatusMovieAct PlayType. */
        public PlayType: number;

        /**
         * Creates a new SkillStatusMovieAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SkillStatusMovieAct instance
         */
        public static create(properties?: pb.ISkillStatusMovieAct): pb.SkillStatusMovieAct;

        /**
         * Encodes the specified SkillStatusMovieAct message. Does not implicitly {@link pb.SkillStatusMovieAct.verify|verify} messages.
         * @param message SkillStatusMovieAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISkillStatusMovieAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SkillStatusMovieAct message, length delimited. Does not implicitly {@link pb.SkillStatusMovieAct.verify|verify} messages.
         * @param message SkillStatusMovieAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISkillStatusMovieAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SkillStatusMovieAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SkillStatusMovieAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SkillStatusMovieAct;

        /**
         * Decodes a SkillStatusMovieAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SkillStatusMovieAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SkillStatusMovieAct;

        /**
         * Verifies a SkillStatusMovieAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MovieAct. */
    interface IMovieAct {

        /** MovieAct MovieID */
        MovieID?: (string|null);

        /** MovieAct Targets */
        Targets?: (number[]|null);

        /** MovieAct PlayType */
        PlayType?: (number|null);

        /** MovieAct OwnerObjID */
        OwnerObjID?: (number|null);
    }

    /** Represents a MovieAct. */
    class MovieAct implements IMovieAct {

        /**
         * Constructs a new MovieAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMovieAct);

        /** MovieAct MovieID. */
        public MovieID: string;

        /** MovieAct Targets. */
        public Targets: number[];

        /** MovieAct PlayType. */
        public PlayType: number;

        /** MovieAct OwnerObjID. */
        public OwnerObjID: number;

        /**
         * Creates a new MovieAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MovieAct instance
         */
        public static create(properties?: pb.IMovieAct): pb.MovieAct;

        /**
         * Encodes the specified MovieAct message. Does not implicitly {@link pb.MovieAct.verify|verify} messages.
         * @param message MovieAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMovieAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MovieAct message, length delimited. Does not implicitly {@link pb.MovieAct.verify|verify} messages.
         * @param message MovieAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMovieAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MovieAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MovieAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MovieAct;

        /**
         * Decodes a MovieAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MovieAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MovieAct;

        /**
         * Verifies a MovieAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TextMovieAct. */
    interface ITextMovieAct {

        /** TextMovieAct MovieID */
        MovieID?: (number|null);

        /** TextMovieAct Targets */
        Targets?: (number[]|null);

        /** TextMovieAct PlayType */
        PlayType?: (number|null);

        /** TextMovieAct TargetCount */
        TargetCount?: (number|null);

        /** TextMovieAct Value */
        Value?: (number|null);

        /** TextMovieAct OwnerObjID */
        OwnerObjID?: (number|null);
    }

    /** Represents a TextMovieAct. */
    class TextMovieAct implements ITextMovieAct {

        /**
         * Constructs a new TextMovieAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITextMovieAct);

        /** TextMovieAct MovieID. */
        public MovieID: number;

        /** TextMovieAct Targets. */
        public Targets: number[];

        /** TextMovieAct PlayType. */
        public PlayType: number;

        /** TextMovieAct TargetCount. */
        public TargetCount: number;

        /** TextMovieAct Value. */
        public Value: number;

        /** TextMovieAct OwnerObjID. */
        public OwnerObjID: number;

        /**
         * Creates a new TextMovieAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TextMovieAct instance
         */
        public static create(properties?: pb.ITextMovieAct): pb.TextMovieAct;

        /**
         * Encodes the specified TextMovieAct message. Does not implicitly {@link pb.TextMovieAct.verify|verify} messages.
         * @param message TextMovieAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITextMovieAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TextMovieAct message, length delimited. Does not implicitly {@link pb.TextMovieAct.verify|verify} messages.
         * @param message TextMovieAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITextMovieAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TextMovieAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TextMovieAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TextMovieAct;

        /**
         * Decodes a TextMovieAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TextMovieAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TextMovieAct;

        /**
         * Verifies a TextMovieAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DrawCardAct. */
    interface IDrawCardAct {

        /** DrawCardAct Uid */
        Uid?: (number|Long|null);

        /** DrawCardAct Cards */
        Cards?: (pb.ICard[]|null);

        /** DrawCardAct MovieID */
        MovieID?: (number|null);

        /** DrawCardAct OwnerObjID */
        OwnerObjID?: (number|null);
    }

    /** Represents a DrawCardAct. */
    class DrawCardAct implements IDrawCardAct {

        /**
         * Constructs a new DrawCardAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDrawCardAct);

        /** DrawCardAct Uid. */
        public Uid: (number|Long);

        /** DrawCardAct Cards. */
        public Cards: pb.ICard[];

        /** DrawCardAct MovieID. */
        public MovieID: number;

        /** DrawCardAct OwnerObjID. */
        public OwnerObjID: number;

        /**
         * Creates a new DrawCardAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DrawCardAct instance
         */
        public static create(properties?: pb.IDrawCardAct): pb.DrawCardAct;

        /**
         * Encodes the specified DrawCardAct message. Does not implicitly {@link pb.DrawCardAct.verify|verify} messages.
         * @param message DrawCardAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDrawCardAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DrawCardAct message, length delimited. Does not implicitly {@link pb.DrawCardAct.verify|verify} messages.
         * @param message DrawCardAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDrawCardAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DrawCardAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DrawCardAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DrawCardAct;

        /**
         * Decodes a DrawCardAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DrawCardAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DrawCardAct;

        /**
         * Verifies a DrawCardAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a HandShowAct. */
    interface IHandShowAct {

        /** HandShowAct Uid */
        Uid?: (number|Long|null);
    }

    /** Represents a HandShowAct. */
    class HandShowAct implements IHandShowAct {

        /**
         * Constructs a new HandShowAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IHandShowAct);

        /** HandShowAct Uid. */
        public Uid: (number|Long);

        /**
         * Creates a new HandShowAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HandShowAct instance
         */
        public static create(properties?: pb.IHandShowAct): pb.HandShowAct;

        /**
         * Encodes the specified HandShowAct message. Does not implicitly {@link pb.HandShowAct.verify|verify} messages.
         * @param message HandShowAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IHandShowAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified HandShowAct message, length delimited. Does not implicitly {@link pb.HandShowAct.verify|verify} messages.
         * @param message HandShowAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IHandShowAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HandShowAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HandShowAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.HandShowAct;

        /**
         * Decodes a HandShowAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HandShowAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.HandShowAct;

        /**
         * Verifies a HandShowAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GuanxingAct. */
    interface IGuanxingAct {

        /** GuanxingAct Uids */
        Uids?: ((number|Long)[]|null);

        /** GuanxingAct SitOneDrawCards */
        SitOneDrawCards?: (pb.ICard[]|null);

        /** GuanxingAct SitTwoDrawCards */
        SitTwoDrawCards?: (pb.ICard[]|null);
    }

    /** Represents a GuanxingAct. */
    class GuanxingAct implements IGuanxingAct {

        /**
         * Constructs a new GuanxingAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGuanxingAct);

        /** GuanxingAct Uids. */
        public Uids: (number|Long)[];

        /** GuanxingAct SitOneDrawCards. */
        public SitOneDrawCards: pb.ICard[];

        /** GuanxingAct SitTwoDrawCards. */
        public SitTwoDrawCards: pb.ICard[];

        /**
         * Creates a new GuanxingAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GuanxingAct instance
         */
        public static create(properties?: pb.IGuanxingAct): pb.GuanxingAct;

        /**
         * Encodes the specified GuanxingAct message. Does not implicitly {@link pb.GuanxingAct.verify|verify} messages.
         * @param message GuanxingAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGuanxingAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GuanxingAct message, length delimited. Does not implicitly {@link pb.GuanxingAct.verify|verify} messages.
         * @param message GuanxingAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGuanxingAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuanxingAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuanxingAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GuanxingAct;

        /**
         * Decodes a GuanxingAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GuanxingAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GuanxingAct;

        /**
         * Verifies a GuanxingAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ModifySkillAct. */
    interface IModifySkillAct {

        /** ModifySkillAct CardObjID */
        CardObjID?: (number|null);

        /** ModifySkillAct SkillID */
        SkillID?: (number|null);

        /** ModifySkillAct IsEquip */
        IsEquip?: (boolean|null);
    }

    /** Represents a ModifySkillAct. */
    class ModifySkillAct implements IModifySkillAct {

        /**
         * Constructs a new ModifySkillAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IModifySkillAct);

        /** ModifySkillAct CardObjID. */
        public CardObjID: number;

        /** ModifySkillAct SkillID. */
        public SkillID: number;

        /** ModifySkillAct IsEquip. */
        public IsEquip: boolean;

        /**
         * Creates a new ModifySkillAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ModifySkillAct instance
         */
        public static create(properties?: pb.IModifySkillAct): pb.ModifySkillAct;

        /**
         * Encodes the specified ModifySkillAct message. Does not implicitly {@link pb.ModifySkillAct.verify|verify} messages.
         * @param message ModifySkillAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IModifySkillAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ModifySkillAct message, length delimited. Does not implicitly {@link pb.ModifySkillAct.verify|verify} messages.
         * @param message ModifySkillAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IModifySkillAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ModifySkillAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ModifySkillAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ModifySkillAct;

        /**
         * Decodes a ModifySkillAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ModifySkillAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ModifySkillAct;

        /**
         * Verifies a ModifySkillAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DisCardAct. */
    interface IDisCardAct {

        /** DisCardAct Uid */
        Uid?: (number|Long|null);

        /** DisCardAct CardObjIDs */
        CardObjIDs?: (number[]|null);
    }

    /** Represents a DisCardAct. */
    class DisCardAct implements IDisCardAct {

        /**
         * Constructs a new DisCardAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDisCardAct);

        /** DisCardAct Uid. */
        public Uid: (number|Long);

        /** DisCardAct CardObjIDs. */
        public CardObjIDs: number[];

        /**
         * Creates a new DisCardAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DisCardAct instance
         */
        public static create(properties?: pb.IDisCardAct): pb.DisCardAct;

        /**
         * Encodes the specified DisCardAct message. Does not implicitly {@link pb.DisCardAct.verify|verify} messages.
         * @param message DisCardAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDisCardAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DisCardAct message, length delimited. Does not implicitly {@link pb.DisCardAct.verify|verify} messages.
         * @param message DisCardAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDisCardAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DisCardAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DisCardAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DisCardAct;

        /**
         * Decodes a DisCardAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DisCardAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DisCardAct;

        /**
         * Verifies a DisCardAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DestroyAct. */
    interface IDestroyAct {

        /** DestroyAct Targets */
        Targets?: (number[]|null);
    }

    /** Represents a DestroyAct. */
    class DestroyAct implements IDestroyAct {

        /**
         * Constructs a new DestroyAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDestroyAct);

        /** DestroyAct Targets. */
        public Targets: number[];

        /**
         * Creates a new DestroyAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DestroyAct instance
         */
        public static create(properties?: pb.IDestroyAct): pb.DestroyAct;

        /**
         * Encodes the specified DestroyAct message. Does not implicitly {@link pb.DestroyAct.verify|verify} messages.
         * @param message DestroyAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDestroyAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DestroyAct message, length delimited. Does not implicitly {@link pb.DestroyAct.verify|verify} messages.
         * @param message DestroyAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDestroyAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DestroyAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DestroyAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DestroyAct;

        /**
         * Decodes a DestroyAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DestroyAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DestroyAct;

        /**
         * Verifies a DestroyAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SummonAct. */
    interface ISummonAct {

        /** SummonAct Uid */
        Uid?: (number|Long|null);

        /** SummonAct GridObjID */
        GridObjID?: (number|null);

        /** SummonAct Card */
        Card?: (pb.ICard|null);

        /** SummonAct IsInFog */
        IsInFog?: (boolean|null);

        /** SummonAct IsPublicEnemy */
        IsPublicEnemy?: (boolean|null);
    }

    /** Represents a SummonAct. */
    class SummonAct implements ISummonAct {

        /**
         * Constructs a new SummonAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISummonAct);

        /** SummonAct Uid. */
        public Uid: (number|Long);

        /** SummonAct GridObjID. */
        public GridObjID: number;

        /** SummonAct Card. */
        public Card?: (pb.ICard|null);

        /** SummonAct IsInFog. */
        public IsInFog: boolean;

        /** SummonAct IsPublicEnemy. */
        public IsPublicEnemy: boolean;

        /**
         * Creates a new SummonAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SummonAct instance
         */
        public static create(properties?: pb.ISummonAct): pb.SummonAct;

        /**
         * Encodes the specified SummonAct message. Does not implicitly {@link pb.SummonAct.verify|verify} messages.
         * @param message SummonAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISummonAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SummonAct message, length delimited. Does not implicitly {@link pb.SummonAct.verify|verify} messages.
         * @param message SummonAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISummonAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SummonAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SummonAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SummonAct;

        /**
         * Decodes a SummonAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SummonAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SummonAct;

        /**
         * Verifies a SummonAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ReturnAct. */
    interface IReturnAct {

        /** ReturnAct Uid */
        Uid?: (number|Long|null);

        /** ReturnAct CardObjID */
        CardObjID?: (number|null);

        /** ReturnAct Card */
        Card?: (pb.ICard|null);
    }

    /** Represents a ReturnAct. */
    class ReturnAct implements IReturnAct {

        /**
         * Constructs a new ReturnAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IReturnAct);

        /** ReturnAct Uid. */
        public Uid: (number|Long);

        /** ReturnAct CardObjID. */
        public CardObjID: number;

        /** ReturnAct Card. */
        public Card?: (pb.ICard|null);

        /**
         * Creates a new ReturnAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReturnAct instance
         */
        public static create(properties?: pb.IReturnAct): pb.ReturnAct;

        /**
         * Encodes the specified ReturnAct message. Does not implicitly {@link pb.ReturnAct.verify|verify} messages.
         * @param message ReturnAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IReturnAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReturnAct message, length delimited. Does not implicitly {@link pb.ReturnAct.verify|verify} messages.
         * @param message ReturnAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IReturnAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReturnAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReturnAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ReturnAct;

        /**
         * Decodes a ReturnAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReturnAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ReturnAct;

        /**
         * Verifies a ReturnAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SwitchPosAct. */
    interface ISwitchPosAct {

        /** SwitchPosAct Target */
        Target?: (number|null);

        /** SwitchPosAct SwitchTarget */
        SwitchTarget?: (number|null);
    }

    /** Represents a SwitchPosAct. */
    class SwitchPosAct implements ISwitchPosAct {

        /**
         * Constructs a new SwitchPosAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISwitchPosAct);

        /** SwitchPosAct Target. */
        public Target: number;

        /** SwitchPosAct SwitchTarget. */
        public SwitchTarget: number;

        /**
         * Creates a new SwitchPosAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SwitchPosAct instance
         */
        public static create(properties?: pb.ISwitchPosAct): pb.SwitchPosAct;

        /**
         * Encodes the specified SwitchPosAct message. Does not implicitly {@link pb.SwitchPosAct.verify|verify} messages.
         * @param message SwitchPosAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISwitchPosAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SwitchPosAct message, length delimited. Does not implicitly {@link pb.SwitchPosAct.verify|verify} messages.
         * @param message SwitchPosAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISwitchPosAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SwitchPosAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SwitchPosAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SwitchPosAct;

        /**
         * Decodes a SwitchPosAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SwitchPosAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SwitchPosAct;

        /**
         * Verifies a SwitchPosAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BonusReward. */
    interface IBonusReward {

        /** BonusReward Uid */
        Uid?: (number|Long|null);

        /** BonusReward BonusID */
        BonusID?: (number|null);

        /** BonusReward Res */
        Res?: (pb.IResource[]|null);
    }

    /** Represents a BonusReward. */
    class BonusReward implements IBonusReward {

        /**
         * Constructs a new BonusReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBonusReward);

        /** BonusReward Uid. */
        public Uid: (number|Long);

        /** BonusReward BonusID. */
        public BonusID: number;

        /** BonusReward Res. */
        public Res: pb.IResource[];

        /**
         * Creates a new BonusReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BonusReward instance
         */
        public static create(properties?: pb.IBonusReward): pb.BonusReward;

        /**
         * Encodes the specified BonusReward message. Does not implicitly {@link pb.BonusReward.verify|verify} messages.
         * @param message BonusReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBonusReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BonusReward message, length delimited. Does not implicitly {@link pb.BonusReward.verify|verify} messages.
         * @param message BonusReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBonusReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BonusReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BonusReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BonusReward;

        /**
         * Decodes a BonusReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BonusReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BonusReward;

        /**
         * Verifies a BonusReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BonusAct. */
    interface IBonusAct {

        /** BonusAct Rewards */
        Rewards?: (pb.IBonusReward[]|null);
    }

    /** Represents a BonusAct. */
    class BonusAct implements IBonusAct {

        /**
         * Constructs a new BonusAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBonusAct);

        /** BonusAct Rewards. */
        public Rewards: pb.IBonusReward[];

        /**
         * Creates a new BonusAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BonusAct instance
         */
        public static create(properties?: pb.IBonusAct): pb.BonusAct;

        /**
         * Encodes the specified BonusAct message. Does not implicitly {@link pb.BonusAct.verify|verify} messages.
         * @param message BonusAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBonusAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BonusAct message, length delimited. Does not implicitly {@link pb.BonusAct.verify|verify} messages.
         * @param message BonusAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBonusAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BonusAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BonusAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BonusAct;

        /**
         * Decodes a BonusAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BonusAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BonusAct;

        /**
         * Verifies a BonusAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CopyAct. */
    interface ICopyAct {

        /** CopyAct Target */
        Target?: (number|null);

        /** CopyAct CopyCard */
        CopyCard?: (pb.ICard|null);

        /** CopyAct OwnerUid */
        OwnerUid?: (number|Long|null);
    }

    /** Represents a CopyAct. */
    class CopyAct implements ICopyAct {

        /**
         * Constructs a new CopyAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICopyAct);

        /** CopyAct Target. */
        public Target: number;

        /** CopyAct CopyCard. */
        public CopyCard?: (pb.ICard|null);

        /** CopyAct OwnerUid. */
        public OwnerUid: (number|Long);

        /**
         * Creates a new CopyAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CopyAct instance
         */
        public static create(properties?: pb.ICopyAct): pb.CopyAct;

        /**
         * Encodes the specified CopyAct message. Does not implicitly {@link pb.CopyAct.verify|verify} messages.
         * @param message CopyAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICopyAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CopyAct message, length delimited. Does not implicitly {@link pb.CopyAct.verify|verify} messages.
         * @param message CopyAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICopyAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CopyAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CopyAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CopyAct;

        /**
         * Decodes a CopyAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CopyAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CopyAct;

        /**
         * Verifies a CopyAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an EnterFogAct. */
    interface IEnterFogAct {

        /** EnterFogAct Target */
        Target?: (number|null);

        /** EnterFogAct IsPublicEnemy */
        IsPublicEnemy?: (boolean|null);
    }

    /** Represents an EnterFogAct. */
    class EnterFogAct implements IEnterFogAct {

        /**
         * Constructs a new EnterFogAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEnterFogAct);

        /** EnterFogAct Target. */
        public Target: number;

        /** EnterFogAct IsPublicEnemy. */
        public IsPublicEnemy: boolean;

        /**
         * Creates a new EnterFogAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterFogAct instance
         */
        public static create(properties?: pb.IEnterFogAct): pb.EnterFogAct;

        /**
         * Encodes the specified EnterFogAct message. Does not implicitly {@link pb.EnterFogAct.verify|verify} messages.
         * @param message EnterFogAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEnterFogAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified EnterFogAct message, length delimited. Does not implicitly {@link pb.EnterFogAct.verify|verify} messages.
         * @param message EnterFogAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEnterFogAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EnterFogAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterFogAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.EnterFogAct;

        /**
         * Decodes an EnterFogAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterFogAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.EnterFogAct;

        /**
         * Verifies an EnterFogAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LeaveFogAct. */
    interface ILeaveFogAct {

        /** LeaveFogAct Targets */
        Targets?: (number[]|null);
    }

    /** Represents a LeaveFogAct. */
    class LeaveFogAct implements ILeaveFogAct {

        /**
         * Constructs a new LeaveFogAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILeaveFogAct);

        /** LeaveFogAct Targets. */
        public Targets: number[];

        /**
         * Creates a new LeaveFogAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeaveFogAct instance
         */
        public static create(properties?: pb.ILeaveFogAct): pb.LeaveFogAct;

        /**
         * Encodes the specified LeaveFogAct message. Does not implicitly {@link pb.LeaveFogAct.verify|verify} messages.
         * @param message LeaveFogAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILeaveFogAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LeaveFogAct message, length delimited. Does not implicitly {@link pb.LeaveFogAct.verify|verify} messages.
         * @param message LeaveFogAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILeaveFogAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LeaveFogAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeaveFogAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LeaveFogAct;

        /**
         * Decodes a LeaveFogAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeaveFogAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LeaveFogAct;

        /**
         * Verifies a LeaveFogAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GoldGobAct. */
    interface IGoldGobAct {

        /** GoldGobAct Uid */
        Uid?: (number|Long|null);

        /** GoldGobAct Gold */
        Gold?: (number|null);

        /** GoldGobAct IsLadder */
        IsLadder?: (boolean|null);
    }

    /** Represents a GoldGobAct. */
    class GoldGobAct implements IGoldGobAct {

        /**
         * Constructs a new GoldGobAct.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGoldGobAct);

        /** GoldGobAct Uid. */
        public Uid: (number|Long);

        /** GoldGobAct Gold. */
        public Gold: number;

        /** GoldGobAct IsLadder. */
        public IsLadder: boolean;

        /**
         * Creates a new GoldGobAct instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GoldGobAct instance
         */
        public static create(properties?: pb.IGoldGobAct): pb.GoldGobAct;

        /**
         * Encodes the specified GoldGobAct message. Does not implicitly {@link pb.GoldGobAct.verify|verify} messages.
         * @param message GoldGobAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGoldGobAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GoldGobAct message, length delimited. Does not implicitly {@link pb.GoldGobAct.verify|verify} messages.
         * @param message GoldGobAct message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGoldGobAct, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GoldGobAct message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GoldGobAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GoldGobAct;

        /**
         * Decodes a GoldGobAct message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GoldGobAct
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GoldGobAct;

        /**
         * Verifies a GoldGobAct message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CardPool. */
    interface ICardPool {

        /** CardPool PoolId */
        PoolId?: (number|null);

        /** CardPool Cards */
        Cards?: (number[]|null);

        /** CardPool Camp */
        Camp?: (number|null);

        /** CardPool IsFight */
        IsFight?: (boolean|null);
    }

    /** Represents a CardPool. */
    class CardPool implements ICardPool {

        /**
         * Constructs a new CardPool.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardPool);

        /** CardPool PoolId. */
        public PoolId: number;

        /** CardPool Cards. */
        public Cards: number[];

        /** CardPool Camp. */
        public Camp: number;

        /** CardPool IsFight. */
        public IsFight: boolean;

        /**
         * Creates a new CardPool instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardPool instance
         */
        public static create(properties?: pb.ICardPool): pb.CardPool;

        /**
         * Encodes the specified CardPool message. Does not implicitly {@link pb.CardPool.verify|verify} messages.
         * @param message CardPool message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardPool, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardPool message, length delimited. Does not implicitly {@link pb.CardPool.verify|verify} messages.
         * @param message CardPool message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardPool, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardPool message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardPool
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardPool;

        /**
         * Decodes a CardPool message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardPool
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardPool;

        /**
         * Verifies a CardPool message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** CardState enum. */
    enum CardState {
        NormalCState = 0,
        InCampaignMs = 1,
        InSeasonPvp = 2
    }

    /** Properties of a CardInfo. */
    interface ICardInfo {

        /** CardInfo CardId */
        CardId?: (number|null);

        /** CardInfo Level */
        Level?: (number|null);

        /** CardInfo Amount */
        Amount?: (number|null);

        /** CardInfo Energy */
        Energy?: (number|null);

        /** CardInfo Skin */
        Skin?: (string|null);

        /** CardInfo Equip */
        Equip?: (string|null);

        /** CardInfo State */
        State?: (pb.CardState|null);
    }

    /** Represents a CardInfo. */
    class CardInfo implements ICardInfo {

        /**
         * Constructs a new CardInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardInfo);

        /** CardInfo CardId. */
        public CardId: number;

        /** CardInfo Level. */
        public Level: number;

        /** CardInfo Amount. */
        public Amount: number;

        /** CardInfo Energy. */
        public Energy: number;

        /** CardInfo Skin. */
        public Skin: string;

        /** CardInfo Equip. */
        public Equip: string;

        /** CardInfo State. */
        public State: pb.CardState;

        /**
         * Creates a new CardInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardInfo instance
         */
        public static create(properties?: pb.ICardInfo): pb.CardInfo;

        /**
         * Encodes the specified CardInfo message. Does not implicitly {@link pb.CardInfo.verify|verify} messages.
         * @param message CardInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardInfo message, length delimited. Does not implicitly {@link pb.CardInfo.verify|verify} messages.
         * @param message CardInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardInfo;

        /**
         * Decodes a CardInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardInfo;

        /**
         * Verifies a CardInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CardPools. */
    interface ICardPools {

        /** CardPools Pools */
        Pools?: (pb.ICardPool[]|null);

        /** CardPools FightCamp */
        FightCamp?: (number|null);
    }

    /** Represents a CardPools. */
    class CardPools implements ICardPools {

        /**
         * Constructs a new CardPools.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardPools);

        /** CardPools Pools. */
        public Pools: pb.ICardPool[];

        /** CardPools FightCamp. */
        public FightCamp: number;

        /**
         * Creates a new CardPools instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardPools instance
         */
        public static create(properties?: pb.ICardPools): pb.CardPools;

        /**
         * Encodes the specified CardPools message. Does not implicitly {@link pb.CardPools.verify|verify} messages.
         * @param message CardPools message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardPools, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardPools message, length delimited. Does not implicitly {@link pb.CardPools.verify|verify} messages.
         * @param message CardPools message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardPools, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardPools message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardPools
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardPools;

        /**
         * Decodes a CardPools message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardPools
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardPools;

        /**
         * Verifies a CardPools message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CardDatas. */
    interface ICardDatas {

        /** CardDatas Cards */
        Cards?: (pb.ICardInfo[]|null);

        /** CardDatas DiyCards */
        DiyCards?: (pb.IDiyCardData[]|null);
    }

    /** Represents a CardDatas. */
    class CardDatas implements ICardDatas {

        /**
         * Constructs a new CardDatas.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardDatas);

        /** CardDatas Cards. */
        public Cards: pb.ICardInfo[];

        /** CardDatas DiyCards. */
        public DiyCards: pb.IDiyCardData[];

        /**
         * Creates a new CardDatas instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardDatas instance
         */
        public static create(properties?: pb.ICardDatas): pb.CardDatas;

        /**
         * Encodes the specified CardDatas message. Does not implicitly {@link pb.CardDatas.verify|verify} messages.
         * @param message CardDatas message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardDatas, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardDatas message, length delimited. Does not implicitly {@link pb.CardDatas.verify|verify} messages.
         * @param message CardDatas message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardDatas, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardDatas message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardDatas
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardDatas;

        /**
         * Decodes a CardDatas message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardDatas
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardDatas;

        /**
         * Verifies a CardDatas message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a PoolAddCard. */
    interface IPoolAddCard {

        /** PoolAddCard Card */
        Card?: (number|null);

        /** PoolAddCard Idx */
        Idx?: (number|null);

        /** PoolAddCard PoolId */
        PoolId?: (number|null);
    }

    /** Represents a PoolAddCard. */
    class PoolAddCard implements IPoolAddCard {

        /**
         * Constructs a new PoolAddCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPoolAddCard);

        /** PoolAddCard Card. */
        public Card: number;

        /** PoolAddCard Idx. */
        public Idx: number;

        /** PoolAddCard PoolId. */
        public PoolId: number;

        /**
         * Creates a new PoolAddCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoolAddCard instance
         */
        public static create(properties?: pb.IPoolAddCard): pb.PoolAddCard;

        /**
         * Encodes the specified PoolAddCard message. Does not implicitly {@link pb.PoolAddCard.verify|verify} messages.
         * @param message PoolAddCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPoolAddCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PoolAddCard message, length delimited. Does not implicitly {@link pb.PoolAddCard.verify|verify} messages.
         * @param message PoolAddCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPoolAddCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PoolAddCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoolAddCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.PoolAddCard;

        /**
         * Decodes a PoolAddCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoolAddCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.PoolAddCard;

        /**
         * Verifies a PoolAddCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a PoolUpdateCard. */
    interface IPoolUpdateCard {

        /** PoolUpdateCard PoolId */
        PoolId?: (number|null);

        /** PoolUpdateCard Cards */
        Cards?: (number[]|null);
    }

    /** Represents a PoolUpdateCard. */
    class PoolUpdateCard implements IPoolUpdateCard {

        /**
         * Constructs a new PoolUpdateCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPoolUpdateCard);

        /** PoolUpdateCard PoolId. */
        public PoolId: number;

        /** PoolUpdateCard Cards. */
        public Cards: number[];

        /**
         * Creates a new PoolUpdateCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoolUpdateCard instance
         */
        public static create(properties?: pb.IPoolUpdateCard): pb.PoolUpdateCard;

        /**
         * Encodes the specified PoolUpdateCard message. Does not implicitly {@link pb.PoolUpdateCard.verify|verify} messages.
         * @param message PoolUpdateCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPoolUpdateCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PoolUpdateCard message, length delimited. Does not implicitly {@link pb.PoolUpdateCard.verify|verify} messages.
         * @param message PoolUpdateCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPoolUpdateCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PoolUpdateCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoolUpdateCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.PoolUpdateCard;

        /**
         * Decodes a PoolUpdateCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoolUpdateCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.PoolUpdateCard;

        /**
         * Verifies a PoolUpdateCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FightPool. */
    interface IFightPool {

        /** FightPool PoolId */
        PoolId?: (number|null);

        /** FightPool Camp */
        Camp?: (number|null);
    }

    /** Represents a FightPool. */
    class FightPool implements IFightPool {

        /**
         * Constructs a new FightPool.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFightPool);

        /** FightPool PoolId. */
        public PoolId: number;

        /** FightPool Camp. */
        public Camp: number;

        /**
         * Creates a new FightPool instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FightPool instance
         */
        public static create(properties?: pb.IFightPool): pb.FightPool;

        /**
         * Encodes the specified FightPool message. Does not implicitly {@link pb.FightPool.verify|verify} messages.
         * @param message FightPool message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFightPool, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FightPool message, length delimited. Does not implicitly {@link pb.FightPool.verify|verify} messages.
         * @param message FightPool message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFightPool, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FightPool message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FightPool
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FightPool;

        /**
         * Decodes a FightPool message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FightPool
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FightPool;

        /**
         * Verifies a FightPool message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateCardPools. */
    interface IUpdateCardPools {

        /** UpdateCardPools Pools */
        Pools?: (pb.IFightPool[]|null);

        /** UpdateCardPools FightCamp */
        FightCamp?: (number|null);
    }

    /** Represents an UpdateCardPools. */
    class UpdateCardPools implements IUpdateCardPools {

        /**
         * Constructs a new UpdateCardPools.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateCardPools);

        /** UpdateCardPools Pools. */
        public Pools: pb.IFightPool[];

        /** UpdateCardPools FightCamp. */
        public FightCamp: number;

        /**
         * Creates a new UpdateCardPools instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateCardPools instance
         */
        public static create(properties?: pb.IUpdateCardPools): pb.UpdateCardPools;

        /**
         * Encodes the specified UpdateCardPools message. Does not implicitly {@link pb.UpdateCardPools.verify|verify} messages.
         * @param message UpdateCardPools message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateCardPools, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateCardPools message, length delimited. Does not implicitly {@link pb.UpdateCardPools.verify|verify} messages.
         * @param message UpdateCardPools message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateCardPools, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateCardPools message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateCardPools
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateCardPools;

        /**
         * Decodes an UpdateCardPools message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateCardPools
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateCardPools;

        /**
         * Verifies an UpdateCardPools message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TargetCard. */
    interface ITargetCard {

        /** TargetCard CardId */
        CardId?: (number|null);
    }

    /** Represents a TargetCard. */
    class TargetCard implements ITargetCard {

        /**
         * Constructs a new TargetCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetCard);

        /** TargetCard CardId. */
        public CardId: number;

        /**
         * Creates a new TargetCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetCard instance
         */
        public static create(properties?: pb.ITargetCard): pb.TargetCard;

        /**
         * Encodes the specified TargetCard message. Does not implicitly {@link pb.TargetCard.verify|verify} messages.
         * @param message TargetCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetCard message, length delimited. Does not implicitly {@link pb.TargetCard.verify|verify} messages.
         * @param message TargetCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetCard;

        /**
         * Decodes a TargetCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetCard;

        /**
         * Verifies a TargetCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DiyCardArg. */
    interface IDiyCardArg {

        /** DiyCardArg Name */
        Name?: (string|null);

        /** DiyCardArg DiySkillId1 */
        DiySkillId1?: (number|null);

        /** DiyCardArg DiySkillId2 */
        DiySkillId2?: (number|null);

        /** DiyCardArg Weapon */
        Weapon?: (string|null);

        /** DiyCardArg Img */
        Img?: (string|null);
    }

    /** Represents a DiyCardArg. */
    class DiyCardArg implements IDiyCardArg {

        /**
         * Constructs a new DiyCardArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDiyCardArg);

        /** DiyCardArg Name. */
        public Name: string;

        /** DiyCardArg DiySkillId1. */
        public DiySkillId1: number;

        /** DiyCardArg DiySkillId2. */
        public DiySkillId2: number;

        /** DiyCardArg Weapon. */
        public Weapon: string;

        /** DiyCardArg Img. */
        public Img: string;

        /**
         * Creates a new DiyCardArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DiyCardArg instance
         */
        public static create(properties?: pb.IDiyCardArg): pb.DiyCardArg;

        /**
         * Encodes the specified DiyCardArg message. Does not implicitly {@link pb.DiyCardArg.verify|verify} messages.
         * @param message DiyCardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDiyCardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DiyCardArg message, length delimited. Does not implicitly {@link pb.DiyCardArg.verify|verify} messages.
         * @param message DiyCardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDiyCardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DiyCardArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DiyCardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DiyCardArg;

        /**
         * Decodes a DiyCardArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DiyCardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DiyCardArg;

        /**
         * Verifies a DiyCardArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DiyCardReply. */
    interface IDiyCardReply {

        /** DiyCardReply CardId */
        CardId?: (number|null);

        /** DiyCardReply MinUp */
        MinUp?: (number|null);

        /** DiyCardReply MaxUp */
        MaxUp?: (number|null);

        /** DiyCardReply MinDown */
        MinDown?: (number|null);

        /** DiyCardReply MaxDown */
        MaxDown?: (number|null);

        /** DiyCardReply MinLeft */
        MinLeft?: (number|null);

        /** DiyCardReply MaxLeft */
        MaxLeft?: (number|null);

        /** DiyCardReply MinRight */
        MinRight?: (number|null);

        /** DiyCardReply MaxRight */
        MaxRight?: (number|null);
    }

    /** Represents a DiyCardReply. */
    class DiyCardReply implements IDiyCardReply {

        /**
         * Constructs a new DiyCardReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDiyCardReply);

        /** DiyCardReply CardId. */
        public CardId: number;

        /** DiyCardReply MinUp. */
        public MinUp: number;

        /** DiyCardReply MaxUp. */
        public MaxUp: number;

        /** DiyCardReply MinDown. */
        public MinDown: number;

        /** DiyCardReply MaxDown. */
        public MaxDown: number;

        /** DiyCardReply MinLeft. */
        public MinLeft: number;

        /** DiyCardReply MaxLeft. */
        public MaxLeft: number;

        /** DiyCardReply MinRight. */
        public MinRight: number;

        /** DiyCardReply MaxRight. */
        public MaxRight: number;

        /**
         * Creates a new DiyCardReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DiyCardReply instance
         */
        public static create(properties?: pb.IDiyCardReply): pb.DiyCardReply;

        /**
         * Encodes the specified DiyCardReply message. Does not implicitly {@link pb.DiyCardReply.verify|verify} messages.
         * @param message DiyCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDiyCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DiyCardReply message, length delimited. Does not implicitly {@link pb.DiyCardReply.verify|verify} messages.
         * @param message DiyCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDiyCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DiyCardReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DiyCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DiyCardReply;

        /**
         * Decodes a DiyCardReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DiyCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DiyCardReply;

        /**
         * Verifies a DiyCardReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DiyCardData. */
    interface IDiyCardData {

        /** DiyCardData CardId */
        CardId?: (number|null);

        /** DiyCardData Name */
        Name?: (string|null);

        /** DiyCardData DiySkillId1 */
        DiySkillId1?: (number|null);

        /** DiyCardData DiySkillId2 */
        DiySkillId2?: (number|null);

        /** DiyCardData MinUp */
        MinUp?: (number|null);

        /** DiyCardData MaxUp */
        MaxUp?: (number|null);

        /** DiyCardData MinDown */
        MinDown?: (number|null);

        /** DiyCardData MaxDown */
        MaxDown?: (number|null);

        /** DiyCardData MinLeft */
        MinLeft?: (number|null);

        /** DiyCardData MaxLeft */
        MaxLeft?: (number|null);

        /** DiyCardData MinRight */
        MinRight?: (number|null);

        /** DiyCardData MaxRight */
        MaxRight?: (number|null);

        /** DiyCardData Weapon */
        Weapon?: (string|null);
    }

    /** Represents a DiyCardData. */
    class DiyCardData implements IDiyCardData {

        /**
         * Constructs a new DiyCardData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDiyCardData);

        /** DiyCardData CardId. */
        public CardId: number;

        /** DiyCardData Name. */
        public Name: string;

        /** DiyCardData DiySkillId1. */
        public DiySkillId1: number;

        /** DiyCardData DiySkillId2. */
        public DiySkillId2: number;

        /** DiyCardData MinUp. */
        public MinUp: number;

        /** DiyCardData MaxUp. */
        public MaxUp: number;

        /** DiyCardData MinDown. */
        public MinDown: number;

        /** DiyCardData MaxDown. */
        public MaxDown: number;

        /** DiyCardData MinLeft. */
        public MinLeft: number;

        /** DiyCardData MaxLeft. */
        public MaxLeft: number;

        /** DiyCardData MinRight. */
        public MinRight: number;

        /** DiyCardData MaxRight. */
        public MaxRight: number;

        /** DiyCardData Weapon. */
        public Weapon: string;

        /**
         * Creates a new DiyCardData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DiyCardData instance
         */
        public static create(properties?: pb.IDiyCardData): pb.DiyCardData;

        /**
         * Encodes the specified DiyCardData message. Does not implicitly {@link pb.DiyCardData.verify|verify} messages.
         * @param message DiyCardData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDiyCardData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DiyCardData message, length delimited. Does not implicitly {@link pb.DiyCardData.verify|verify} messages.
         * @param message DiyCardData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDiyCardData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DiyCardData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DiyCardData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DiyCardData;

        /**
         * Decodes a DiyCardData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DiyCardData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DiyCardData;

        /**
         * Verifies a DiyCardData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DiyCardImg. */
    interface IDiyCardImg {

        /** DiyCardImg Img */
        Img?: (string|null);
    }

    /** Represents a DiyCardImg. */
    class DiyCardImg implements IDiyCardImg {

        /**
         * Constructs a new DiyCardImg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDiyCardImg);

        /** DiyCardImg Img. */
        public Img: string;

        /**
         * Creates a new DiyCardImg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DiyCardImg instance
         */
        public static create(properties?: pb.IDiyCardImg): pb.DiyCardImg;

        /**
         * Encodes the specified DiyCardImg message. Does not implicitly {@link pb.DiyCardImg.verify|verify} messages.
         * @param message DiyCardImg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDiyCardImg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DiyCardImg message, length delimited. Does not implicitly {@link pb.DiyCardImg.verify|verify} messages.
         * @param message DiyCardImg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDiyCardImg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DiyCardImg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DiyCardImg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DiyCardImg;

        /**
         * Decodes a DiyCardImg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DiyCardImg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DiyCardImg;

        /**
         * Verifies a DiyCardImg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AddCardSkinArg. */
    interface IAddCardSkinArg {

        /** AddCardSkinArg Skin */
        Skin?: (string|null);
    }

    /** Represents an AddCardSkinArg. */
    class AddCardSkinArg implements IAddCardSkinArg {

        /**
         * Constructs a new AddCardSkinArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAddCardSkinArg);

        /** AddCardSkinArg Skin. */
        public Skin: string;

        /**
         * Creates a new AddCardSkinArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddCardSkinArg instance
         */
        public static create(properties?: pb.IAddCardSkinArg): pb.AddCardSkinArg;

        /**
         * Encodes the specified AddCardSkinArg message. Does not implicitly {@link pb.AddCardSkinArg.verify|verify} messages.
         * @param message AddCardSkinArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAddCardSkinArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AddCardSkinArg message, length delimited. Does not implicitly {@link pb.AddCardSkinArg.verify|verify} messages.
         * @param message AddCardSkinArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAddCardSkinArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AddCardSkinArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddCardSkinArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AddCardSkinArg;

        /**
         * Decodes an AddCardSkinArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddCardSkinArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AddCardSkinArg;

        /**
         * Verifies an AddCardSkinArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SkinGCard. */
    interface ISkinGCard {

        /** SkinGCard GCardID */
        GCardID?: (number|null);

        /** SkinGCard Skin */
        Skin?: (string|null);

        /** SkinGCard Equip */
        Equip?: (string|null);
    }

    /** Represents a SkinGCard. */
    class SkinGCard implements ISkinGCard {

        /**
         * Constructs a new SkinGCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISkinGCard);

        /** SkinGCard GCardID. */
        public GCardID: number;

        /** SkinGCard Skin. */
        public Skin: string;

        /** SkinGCard Equip. */
        public Equip: string;

        /**
         * Creates a new SkinGCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SkinGCard instance
         */
        public static create(properties?: pb.ISkinGCard): pb.SkinGCard;

        /**
         * Encodes the specified SkinGCard message. Does not implicitly {@link pb.SkinGCard.verify|verify} messages.
         * @param message SkinGCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISkinGCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SkinGCard message, length delimited. Does not implicitly {@link pb.SkinGCard.verify|verify} messages.
         * @param message SkinGCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISkinGCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SkinGCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SkinGCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SkinGCard;

        /**
         * Decodes a SkinGCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SkinGCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SkinGCard;

        /**
         * Verifies a SkinGCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SkinCard. */
    interface ISkinCard {

        /** SkinCard CardID */
        CardID?: (number|null);

        /** SkinCard Skin */
        Skin?: (string|null);

        /** SkinCard Equip */
        Equip?: (string|null);
    }

    /** Represents a SkinCard. */
    class SkinCard implements ISkinCard {

        /**
         * Constructs a new SkinCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISkinCard);

        /** SkinCard CardID. */
        public CardID: number;

        /** SkinCard Skin. */
        public Skin: string;

        /** SkinCard Equip. */
        public Equip: string;

        /**
         * Creates a new SkinCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SkinCard instance
         */
        public static create(properties?: pb.ISkinCard): pb.SkinCard;

        /**
         * Encodes the specified SkinCard message. Does not implicitly {@link pb.SkinCard.verify|verify} messages.
         * @param message SkinCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISkinCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SkinCard message, length delimited. Does not implicitly {@link pb.SkinCard.verify|verify} messages.
         * @param message SkinCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISkinCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SkinCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SkinCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SkinCard;

        /**
         * Decodes a SkinCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SkinCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SkinCard;

        /**
         * Verifies a SkinCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpLevelCardArg. */
    interface IUpLevelCardArg {

        /** UpLevelCardArg CardId */
        CardId?: (number|null);

        /** UpLevelCardArg IsConsumeJade */
        IsConsumeJade?: (boolean|null);
    }

    /** Represents an UpLevelCardArg. */
    class UpLevelCardArg implements IUpLevelCardArg {

        /**
         * Constructs a new UpLevelCardArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpLevelCardArg);

        /** UpLevelCardArg CardId. */
        public CardId: number;

        /** UpLevelCardArg IsConsumeJade. */
        public IsConsumeJade: boolean;

        /**
         * Creates a new UpLevelCardArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpLevelCardArg instance
         */
        public static create(properties?: pb.IUpLevelCardArg): pb.UpLevelCardArg;

        /**
         * Encodes the specified UpLevelCardArg message. Does not implicitly {@link pb.UpLevelCardArg.verify|verify} messages.
         * @param message UpLevelCardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpLevelCardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpLevelCardArg message, length delimited. Does not implicitly {@link pb.UpLevelCardArg.verify|verify} messages.
         * @param message UpLevelCardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpLevelCardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpLevelCardArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpLevelCardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpLevelCardArg;

        /**
         * Decodes an UpLevelCardArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpLevelCardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpLevelCardArg;

        /**
         * Verifies an UpLevelCardArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a Resource. */
    interface IResource {

        /** Resource Type */
        Type?: (number|null);

        /** Resource Amount */
        Amount?: (number|null);
    }

    /** Represents a Resource. */
    class Resource implements IResource {

        /**
         * Constructs a new Resource.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IResource);

        /** Resource Type. */
        public Type: number;

        /** Resource Amount. */
        public Amount: number;

        /**
         * Creates a new Resource instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Resource instance
         */
        public static create(properties?: pb.IResource): pb.Resource;

        /**
         * Encodes the specified Resource message. Does not implicitly {@link pb.Resource.verify|verify} messages.
         * @param message Resource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IResource, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Resource message, length delimited. Does not implicitly {@link pb.Resource.verify|verify} messages.
         * @param message Resource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IResource, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Resource message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Resource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Resource;

        /**
         * Decodes a Resource message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Resource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Resource;

        /**
         * Verifies a Resource message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a Treasure. */
    interface ITreasure {

        /** Treasure ID */
        ID?: (number|null);

        /** Treasure ModelID */
        ModelID?: (string|null);

        /** Treasure OpenTimeout */
        OpenTimeout?: (number|null);

        /** Treasure OpenStarCount */
        OpenStarCount?: (number|null);

        /** Treasure Pos */
        Pos?: (number|null);
    }

    /** Represents a Treasure. */
    class Treasure implements ITreasure {

        /**
         * Constructs a new Treasure.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITreasure);

        /** Treasure ID. */
        public ID: number;

        /** Treasure ModelID. */
        public ModelID: string;

        /** Treasure OpenTimeout. */
        public OpenTimeout: number;

        /** Treasure OpenStarCount. */
        public OpenStarCount: number;

        /** Treasure Pos. */
        public Pos: number;

        /**
         * Creates a new Treasure instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Treasure instance
         */
        public static create(properties?: pb.ITreasure): pb.Treasure;

        /**
         * Encodes the specified Treasure message. Does not implicitly {@link pb.Treasure.verify|verify} messages.
         * @param message Treasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Treasure message, length delimited. Does not implicitly {@link pb.Treasure.verify|verify} messages.
         * @param message Treasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Treasure message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Treasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Treasure;

        /**
         * Decodes a Treasure message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Treasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Treasure;

        /**
         * Verifies a Treasure message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DailyTreasure. */
    interface IDailyTreasure {

        /** DailyTreasure ID */
        ID?: (number|null);

        /** DailyTreasure ModelID */
        ModelID?: (string|null);

        /** DailyTreasure OpenStarCount */
        OpenStarCount?: (number|null);

        /** DailyTreasure IsOpen */
        IsOpen?: (boolean|null);

        /** DailyTreasure NextTime */
        NextTime?: (number|null);

        /** DailyTreasure IsDouble */
        IsDouble?: (boolean|null);
    }

    /** Represents a DailyTreasure. */
    class DailyTreasure implements IDailyTreasure {

        /**
         * Constructs a new DailyTreasure.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDailyTreasure);

        /** DailyTreasure ID. */
        public ID: number;

        /** DailyTreasure ModelID. */
        public ModelID: string;

        /** DailyTreasure OpenStarCount. */
        public OpenStarCount: number;

        /** DailyTreasure IsOpen. */
        public IsOpen: boolean;

        /** DailyTreasure NextTime. */
        public NextTime: number;

        /** DailyTreasure IsDouble. */
        public IsDouble: boolean;

        /**
         * Creates a new DailyTreasure instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DailyTreasure instance
         */
        public static create(properties?: pb.IDailyTreasure): pb.DailyTreasure;

        /**
         * Encodes the specified DailyTreasure message. Does not implicitly {@link pb.DailyTreasure.verify|verify} messages.
         * @param message DailyTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDailyTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DailyTreasure message, length delimited. Does not implicitly {@link pb.DailyTreasure.verify|verify} messages.
         * @param message DailyTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDailyTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DailyTreasure message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DailyTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DailyTreasure;

        /**
         * Decodes a DailyTreasure message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DailyTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DailyTreasure;

        /**
         * Verifies a DailyTreasure message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetTreasuresArg. */
    interface IGetTreasuresArg {

        /** GetTreasuresArg TreasureType1 */
        TreasureType1?: (pb.GetTreasuresArg.TreasureType|null);
    }

    /** Represents a GetTreasuresArg. */
    class GetTreasuresArg implements IGetTreasuresArg {

        /**
         * Constructs a new GetTreasuresArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetTreasuresArg);

        /** GetTreasuresArg TreasureType1. */
        public TreasureType1: pb.GetTreasuresArg.TreasureType;

        /**
         * Creates a new GetTreasuresArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTreasuresArg instance
         */
        public static create(properties?: pb.IGetTreasuresArg): pb.GetTreasuresArg;

        /**
         * Encodes the specified GetTreasuresArg message. Does not implicitly {@link pb.GetTreasuresArg.verify|verify} messages.
         * @param message GetTreasuresArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetTreasuresArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetTreasuresArg message, length delimited. Does not implicitly {@link pb.GetTreasuresArg.verify|verify} messages.
         * @param message GetTreasuresArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetTreasuresArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetTreasuresArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTreasuresArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetTreasuresArg;

        /**
         * Decodes a GetTreasuresArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTreasuresArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetTreasuresArg;

        /**
         * Verifies a GetTreasuresArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace GetTreasuresArg {

        /** TreasureType enum. */
        enum TreasureType {
            Reward = 0,
            Daily = 1
        }
    }

    /** Properties of a GetTreasuresReply. */
    interface IGetTreasuresReply {

        /** GetTreasuresReply Treasures */
        Treasures?: (pb.ITreasure[]|null);

        /** GetTreasuresReply DailyTreasure1 */
        DailyTreasure1?: (pb.IDailyTreasure|null);
    }

    /** Represents a GetTreasuresReply. */
    class GetTreasuresReply implements IGetTreasuresReply {

        /**
         * Constructs a new GetTreasuresReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetTreasuresReply);

        /** GetTreasuresReply Treasures. */
        public Treasures: pb.ITreasure[];

        /** GetTreasuresReply DailyTreasure1. */
        public DailyTreasure1?: (pb.IDailyTreasure|null);

        /**
         * Creates a new GetTreasuresReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTreasuresReply instance
         */
        public static create(properties?: pb.IGetTreasuresReply): pb.GetTreasuresReply;

        /**
         * Encodes the specified GetTreasuresReply message. Does not implicitly {@link pb.GetTreasuresReply.verify|verify} messages.
         * @param message GetTreasuresReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetTreasuresReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetTreasuresReply message, length delimited. Does not implicitly {@link pb.GetTreasuresReply.verify|verify} messages.
         * @param message GetTreasuresReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetTreasuresReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetTreasuresReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTreasuresReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetTreasuresReply;

        /**
         * Decodes a GetTreasuresReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTreasuresReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetTreasuresReply;

        /**
         * Verifies a GetTreasuresReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an OpenTreasureArg. */
    interface IOpenTreasureArg {

        /** OpenTreasureArg TreasureID */
        TreasureID?: (number|null);
    }

    /** Represents an OpenTreasureArg. */
    class OpenTreasureArg implements IOpenTreasureArg {

        /**
         * Constructs a new OpenTreasureArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IOpenTreasureArg);

        /** OpenTreasureArg TreasureID. */
        public TreasureID: number;

        /**
         * Creates a new OpenTreasureArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OpenTreasureArg instance
         */
        public static create(properties?: pb.IOpenTreasureArg): pb.OpenTreasureArg;

        /**
         * Encodes the specified OpenTreasureArg message. Does not implicitly {@link pb.OpenTreasureArg.verify|verify} messages.
         * @param message OpenTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IOpenTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified OpenTreasureArg message, length delimited. Does not implicitly {@link pb.OpenTreasureArg.verify|verify} messages.
         * @param message OpenTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IOpenTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OpenTreasureArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OpenTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.OpenTreasureArg;

        /**
         * Decodes an OpenTreasureArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OpenTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.OpenTreasureArg;

        /**
         * Verifies an OpenTreasureArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an OpenTreasureReply. */
    interface IOpenTreasureReply {

        /** OpenTreasureReply OK */
        OK?: (boolean|null);

        /** OpenTreasureReply CardIDs */
        CardIDs?: (number[]|null);

        /** OpenTreasureReply ShareHid */
        ShareHid?: (number|null);

        /** OpenTreasureReply CanWatchAddCardAds */
        CanWatchAddCardAds?: (boolean|null);

        /** OpenTreasureReply CardSkins */
        CardSkins?: (string[]|null);

        /** OpenTreasureReply EmojiTeams */
        EmojiTeams?: (number[]|null);

        /** OpenTreasureReply Headframes */
        Headframes?: (string[]|null);

        /** OpenTreasureReply Resources */
        Resources?: (pb.IResource[]|null);
    }

    /** Represents an OpenTreasureReply. */
    class OpenTreasureReply implements IOpenTreasureReply {

        /**
         * Constructs a new OpenTreasureReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IOpenTreasureReply);

        /** OpenTreasureReply OK. */
        public OK: boolean;

        /** OpenTreasureReply CardIDs. */
        public CardIDs: number[];

        /** OpenTreasureReply ShareHid. */
        public ShareHid: number;

        /** OpenTreasureReply CanWatchAddCardAds. */
        public CanWatchAddCardAds: boolean;

        /** OpenTreasureReply CardSkins. */
        public CardSkins: string[];

        /** OpenTreasureReply EmojiTeams. */
        public EmojiTeams: number[];

        /** OpenTreasureReply Headframes. */
        public Headframes: string[];

        /** OpenTreasureReply Resources. */
        public Resources: pb.IResource[];

        /**
         * Creates a new OpenTreasureReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OpenTreasureReply instance
         */
        public static create(properties?: pb.IOpenTreasureReply): pb.OpenTreasureReply;

        /**
         * Encodes the specified OpenTreasureReply message. Does not implicitly {@link pb.OpenTreasureReply.verify|verify} messages.
         * @param message OpenTreasureReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IOpenTreasureReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified OpenTreasureReply message, length delimited. Does not implicitly {@link pb.OpenTreasureReply.verify|verify} messages.
         * @param message OpenTreasureReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IOpenTreasureReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OpenTreasureReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OpenTreasureReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.OpenTreasureReply;

        /**
         * Decodes an OpenTreasureReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OpenTreasureReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.OpenTreasureReply;

        /**
         * Verifies an OpenTreasureReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GainTreasure. */
    interface IGainTreasure {

        /** GainTreasure Treasure */
        Treasure?: (pb.ITreasure|null);
    }

    /** Represents a GainTreasure. */
    class GainTreasure implements IGainTreasure {

        /**
         * Constructs a new GainTreasure.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGainTreasure);

        /** GainTreasure Treasure. */
        public Treasure?: (pb.ITreasure|null);

        /**
         * Creates a new GainTreasure instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GainTreasure instance
         */
        public static create(properties?: pb.IGainTreasure): pb.GainTreasure;

        /**
         * Encodes the specified GainTreasure message. Does not implicitly {@link pb.GainTreasure.verify|verify} messages.
         * @param message GainTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGainTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GainTreasure message, length delimited. Does not implicitly {@link pb.GainTreasure.verify|verify} messages.
         * @param message GainTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGainTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GainTreasure message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GainTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GainTreasure;

        /**
         * Decodes a GainTreasure message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GainTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GainTreasure;

        /**
         * Verifies a GainTreasure message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an ActivateRewardTreasureArg. */
    interface IActivateRewardTreasureArg {

        /** ActivateRewardTreasureArg TreasureID */
        TreasureID?: (number|null);
    }

    /** Represents an ActivateRewardTreasureArg. */
    class ActivateRewardTreasureArg implements IActivateRewardTreasureArg {

        /**
         * Constructs a new ActivateRewardTreasureArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IActivateRewardTreasureArg);

        /** ActivateRewardTreasureArg TreasureID. */
        public TreasureID: number;

        /**
         * Creates a new ActivateRewardTreasureArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivateRewardTreasureArg instance
         */
        public static create(properties?: pb.IActivateRewardTreasureArg): pb.ActivateRewardTreasureArg;

        /**
         * Encodes the specified ActivateRewardTreasureArg message. Does not implicitly {@link pb.ActivateRewardTreasureArg.verify|verify} messages.
         * @param message ActivateRewardTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IActivateRewardTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActivateRewardTreasureArg message, length delimited. Does not implicitly {@link pb.ActivateRewardTreasureArg.verify|verify} messages.
         * @param message ActivateRewardTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IActivateRewardTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActivateRewardTreasureArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivateRewardTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ActivateRewardTreasureArg;

        /**
         * Decodes an ActivateRewardTreasureArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivateRewardTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ActivateRewardTreasureArg;

        /**
         * Verifies an ActivateRewardTreasureArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an ActivateRewardTreasureReply. */
    interface IActivateRewardTreasureReply {

        /** ActivateRewardTreasureReply OK */
        OK?: (boolean|null);

        /** ActivateRewardTreasureReply OpenTimeout */
        OpenTimeout?: (number|null);
    }

    /** Represents an ActivateRewardTreasureReply. */
    class ActivateRewardTreasureReply implements IActivateRewardTreasureReply {

        /**
         * Constructs a new ActivateRewardTreasureReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IActivateRewardTreasureReply);

        /** ActivateRewardTreasureReply OK. */
        public OK: boolean;

        /** ActivateRewardTreasureReply OpenTimeout. */
        public OpenTimeout: number;

        /**
         * Creates a new ActivateRewardTreasureReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivateRewardTreasureReply instance
         */
        public static create(properties?: pb.IActivateRewardTreasureReply): pb.ActivateRewardTreasureReply;

        /**
         * Encodes the specified ActivateRewardTreasureReply message. Does not implicitly {@link pb.ActivateRewardTreasureReply.verify|verify} messages.
         * @param message ActivateRewardTreasureReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IActivateRewardTreasureReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ActivateRewardTreasureReply message, length delimited. Does not implicitly {@link pb.ActivateRewardTreasureReply.verify|verify} messages.
         * @param message ActivateRewardTreasureReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IActivateRewardTreasureReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActivateRewardTreasureReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivateRewardTreasureReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ActivateRewardTreasureReply;

        /**
         * Decodes an ActivateRewardTreasureReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivateRewardTreasureReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ActivateRewardTreasureReply;

        /**
         * Verifies an ActivateRewardTreasureReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TargetTreasure. */
    interface ITargetTreasure {

        /** TargetTreasure TreasureID */
        TreasureID?: (number|null);
    }

    /** Represents a TargetTreasure. */
    class TargetTreasure implements ITargetTreasure {

        /**
         * Constructs a new TargetTreasure.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetTreasure);

        /** TargetTreasure TreasureID. */
        public TreasureID: number;

        /**
         * Creates a new TargetTreasure instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetTreasure instance
         */
        public static create(properties?: pb.ITargetTreasure): pb.TargetTreasure;

        /**
         * Encodes the specified TargetTreasure message. Does not implicitly {@link pb.TargetTreasure.verify|verify} messages.
         * @param message TargetTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetTreasure message, length delimited. Does not implicitly {@link pb.TargetTreasure.verify|verify} messages.
         * @param message TargetTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetTreasure message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetTreasure;

        /**
         * Decodes a TargetTreasure message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetTreasure;

        /**
         * Verifies a TargetTreasure message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** NoTreasureReasonEnum enum. */
    enum NoTreasureReasonEnum {
        Unknow = 0,
        NoPos = 1,
        AmountLimit = 2
    }

    /** Properties of a CampaignState. */
    interface ICampaignState {

        /** CampaignState State */
        State?: (pb.CampaignState.StateEnum|null);

        /** CampaignState Arg */
        Arg?: (Uint8Array|null);
    }

    /** Represents a CampaignState. */
    class CampaignState implements ICampaignState {

        /**
         * Constructs a new CampaignState.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignState);

        /** CampaignState State. */
        public State: pb.CampaignState.StateEnum;

        /** CampaignState Arg. */
        public Arg: Uint8Array;

        /**
         * Creates a new CampaignState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignState instance
         */
        public static create(properties?: pb.ICampaignState): pb.CampaignState;

        /**
         * Encodes the specified CampaignState message. Does not implicitly {@link pb.CampaignState.verify|verify} messages.
         * @param message CampaignState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignState message, length delimited. Does not implicitly {@link pb.CampaignState.verify|verify} messages.
         * @param message CampaignState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignState;

        /**
         * Decodes a CampaignState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignState;

        /**
         * Verifies a CampaignState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace CampaignState {

        /** StateEnum enum. */
        enum StateEnum {
            Normal = 0,
            ReadyWar = 1,
            InWar = 2,
            WarEnd = 3,
            Unified = 4
        }
    }

    /** Properties of a CaStateWarArg. */
    interface ICaStateWarArg {

        /** CaStateWarArg RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents a CaStateWarArg. */
    class CaStateWarArg implements ICaStateWarArg {

        /**
         * Constructs a new CaStateWarArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICaStateWarArg);

        /** CaStateWarArg RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new CaStateWarArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CaStateWarArg instance
         */
        public static create(properties?: pb.ICaStateWarArg): pb.CaStateWarArg;

        /**
         * Encodes the specified CaStateWarArg message. Does not implicitly {@link pb.CaStateWarArg.verify|verify} messages.
         * @param message CaStateWarArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICaStateWarArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CaStateWarArg message, length delimited. Does not implicitly {@link pb.CaStateWarArg.verify|verify} messages.
         * @param message CaStateWarArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICaStateWarArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CaStateWarArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CaStateWarArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CaStateWarArg;

        /**
         * Decodes a CaStateWarArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CaStateWarArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CaStateWarArg;

        /**
         * Verifies a CaStateWarArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CaStateUnifiedArg. */
    interface ICaStateUnifiedArg {

        /** CaStateUnifiedArg CountryID */
        CountryID?: (number|null);

        /** CaStateUnifiedArg YourMajestyName */
        YourMajestyName?: (string|null);

        /** CaStateUnifiedArg CountryPlayerAmount */
        CountryPlayerAmount?: (number|null);
    }

    /** Represents a CaStateUnifiedArg. */
    class CaStateUnifiedArg implements ICaStateUnifiedArg {

        /**
         * Constructs a new CaStateUnifiedArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICaStateUnifiedArg);

        /** CaStateUnifiedArg CountryID. */
        public CountryID: number;

        /** CaStateUnifiedArg YourMajestyName. */
        public YourMajestyName: string;

        /** CaStateUnifiedArg CountryPlayerAmount. */
        public CountryPlayerAmount: number;

        /**
         * Creates a new CaStateUnifiedArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CaStateUnifiedArg instance
         */
        public static create(properties?: pb.ICaStateUnifiedArg): pb.CaStateUnifiedArg;

        /**
         * Encodes the specified CaStateUnifiedArg message. Does not implicitly {@link pb.CaStateUnifiedArg.verify|verify} messages.
         * @param message CaStateUnifiedArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICaStateUnifiedArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CaStateUnifiedArg message, length delimited. Does not implicitly {@link pb.CaStateUnifiedArg.verify|verify} messages.
         * @param message CaStateUnifiedArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICaStateUnifiedArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CaStateUnifiedArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CaStateUnifiedArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CaStateUnifiedArg;

        /**
         * Decodes a CaStateUnifiedArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CaStateUnifiedArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CaStateUnifiedArg;

        /**
         * Verifies a CaStateUnifiedArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CaStateWarEndArg. */
    interface ICaStateWarEndArg {

        /** CaStateWarEndArg Contribution */
        Contribution?: (number|null);

        /** CaStateWarEndArg LostCitys */
        LostCitys?: (number[]|null);

        /** CaStateWarEndArg OccupyCitys */
        OccupyCitys?: (number[]|null);

        /** CaStateWarEndArg NextWarRemainTime */
        NextWarRemainTime?: (number|null);
    }

    /** Represents a CaStateWarEndArg. */
    class CaStateWarEndArg implements ICaStateWarEndArg {

        /**
         * Constructs a new CaStateWarEndArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICaStateWarEndArg);

        /** CaStateWarEndArg Contribution. */
        public Contribution: number;

        /** CaStateWarEndArg LostCitys. */
        public LostCitys: number[];

        /** CaStateWarEndArg OccupyCitys. */
        public OccupyCitys: number[];

        /** CaStateWarEndArg NextWarRemainTime. */
        public NextWarRemainTime: number;

        /**
         * Creates a new CaStateWarEndArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CaStateWarEndArg instance
         */
        public static create(properties?: pb.ICaStateWarEndArg): pb.CaStateWarEndArg;

        /**
         * Encodes the specified CaStateWarEndArg message. Does not implicitly {@link pb.CaStateWarEndArg.verify|verify} messages.
         * @param message CaStateWarEndArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICaStateWarEndArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CaStateWarEndArg message, length delimited. Does not implicitly {@link pb.CaStateWarEndArg.verify|verify} messages.
         * @param message CaStateWarEndArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICaStateWarEndArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CaStateWarEndArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CaStateWarEndArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CaStateWarEndArg;

        /**
         * Decodes a CaStateWarEndArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CaStateWarEndArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CaStateWarEndArg;

        /**
         * Verifies a CaStateWarEndArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** CityState enum. */
    enum CityState {
        NormalCS = 0,
        BeAttackCS = 1,
        BeOccupyCS = 2
    }

    /** Properties of an UpdateCityStateArg. */
    interface IUpdateCityStateArg {

        /** UpdateCityStateArg State */
        State?: (pb.CityState|null);

        /** UpdateCityStateArg CityID */
        CityID?: (number|null);

        /** UpdateCityStateArg OccupyCountryID */
        OccupyCountryID?: (number|null);
    }

    /** Represents an UpdateCityStateArg. */
    class UpdateCityStateArg implements IUpdateCityStateArg {

        /**
         * Constructs a new UpdateCityStateArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateCityStateArg);

        /** UpdateCityStateArg State. */
        public State: pb.CityState;

        /** UpdateCityStateArg CityID. */
        public CityID: number;

        /** UpdateCityStateArg OccupyCountryID. */
        public OccupyCountryID: number;

        /**
         * Creates a new UpdateCityStateArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateCityStateArg instance
         */
        public static create(properties?: pb.IUpdateCityStateArg): pb.UpdateCityStateArg;

        /**
         * Encodes the specified UpdateCityStateArg message. Does not implicitly {@link pb.UpdateCityStateArg.verify|verify} messages.
         * @param message UpdateCityStateArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateCityStateArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateCityStateArg message, length delimited. Does not implicitly {@link pb.UpdateCityStateArg.verify|verify} messages.
         * @param message UpdateCityStateArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateCityStateArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateCityStateArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateCityStateArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateCityStateArg;

        /**
         * Decodes an UpdateCityStateArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateCityStateArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateCityStateArg;

        /**
         * Verifies an UpdateCityStateArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignPlayerState. */
    interface ICampaignPlayerState {

        /** CampaignPlayerState State */
        State?: (pb.CampaignPlayerState.StateEnum|null);

        /** CampaignPlayerState Arg */
        Arg?: (Uint8Array|null);
    }

    /** Represents a CampaignPlayerState. */
    class CampaignPlayerState implements ICampaignPlayerState {

        /**
         * Constructs a new CampaignPlayerState.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignPlayerState);

        /** CampaignPlayerState State. */
        public State: pb.CampaignPlayerState.StateEnum;

        /** CampaignPlayerState Arg. */
        public Arg: Uint8Array;

        /**
         * Creates a new CampaignPlayerState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignPlayerState instance
         */
        public static create(properties?: pb.ICampaignPlayerState): pb.CampaignPlayerState;

        /**
         * Encodes the specified CampaignPlayerState message. Does not implicitly {@link pb.CampaignPlayerState.verify|verify} messages.
         * @param message CampaignPlayerState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignPlayerState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignPlayerState message, length delimited. Does not implicitly {@link pb.CampaignPlayerState.verify|verify} messages.
         * @param message CampaignPlayerState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignPlayerState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignPlayerState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignPlayerState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignPlayerState;

        /**
         * Decodes a CampaignPlayerState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignPlayerState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignPlayerState;

        /**
         * Verifies a CampaignPlayerState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace CampaignPlayerState {

        /** StateEnum enum. */
        enum StateEnum {
            Normal = 0,
            BeCaptive = 1,
            KickOut = 2,
            Support = 3,
            Expedition = 4,
            DefCity = 5,
            Rectify = 6,
            Rest = 7
        }
    }

    /** Properties of a CpStateKickOutArg. */
    interface ICpStateKickOutArg {

        /** CpStateKickOutArg RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents a CpStateKickOutArg. */
    class CpStateKickOutArg implements ICpStateKickOutArg {

        /**
         * Constructs a new CpStateKickOutArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICpStateKickOutArg);

        /** CpStateKickOutArg RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new CpStateKickOutArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CpStateKickOutArg instance
         */
        public static create(properties?: pb.ICpStateKickOutArg): pb.CpStateKickOutArg;

        /**
         * Encodes the specified CpStateKickOutArg message. Does not implicitly {@link pb.CpStateKickOutArg.verify|verify} messages.
         * @param message CpStateKickOutArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICpStateKickOutArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CpStateKickOutArg message, length delimited. Does not implicitly {@link pb.CpStateKickOutArg.verify|verify} messages.
         * @param message CpStateKickOutArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICpStateKickOutArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CpStateKickOutArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CpStateKickOutArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CpStateKickOutArg;

        /**
         * Decodes a CpStateKickOutArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CpStateKickOutArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CpStateKickOutArg;

        /**
         * Verifies a CpStateKickOutArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CpStateLoadingArg. */
    interface ICpStateLoadingArg {

        /** CpStateLoadingArg MaxTime */
        MaxTime?: (number|null);

        /** CpStateLoadingArg RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents a CpStateLoadingArg. */
    class CpStateLoadingArg implements ICpStateLoadingArg {

        /**
         * Constructs a new CpStateLoadingArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICpStateLoadingArg);

        /** CpStateLoadingArg MaxTime. */
        public MaxTime: number;

        /** CpStateLoadingArg RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new CpStateLoadingArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CpStateLoadingArg instance
         */
        public static create(properties?: pb.ICpStateLoadingArg): pb.CpStateLoadingArg;

        /**
         * Encodes the specified CpStateLoadingArg message. Does not implicitly {@link pb.CpStateLoadingArg.verify|verify} messages.
         * @param message CpStateLoadingArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICpStateLoadingArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CpStateLoadingArg message, length delimited. Does not implicitly {@link pb.CpStateLoadingArg.verify|verify} messages.
         * @param message CpStateLoadingArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICpStateLoadingArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CpStateLoadingArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CpStateLoadingArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CpStateLoadingArg;

        /**
         * Decodes a CpStateLoadingArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CpStateLoadingArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CpStateLoadingArg;

        /**
         * Verifies a CpStateLoadingArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CpStateBeCaptiveArg. */
    interface ICpStateBeCaptiveArg {

        /** CpStateBeCaptiveArg RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents a CpStateBeCaptiveArg. */
    class CpStateBeCaptiveArg implements ICpStateBeCaptiveArg {

        /**
         * Constructs a new CpStateBeCaptiveArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICpStateBeCaptiveArg);

        /** CpStateBeCaptiveArg RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new CpStateBeCaptiveArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CpStateBeCaptiveArg instance
         */
        public static create(properties?: pb.ICpStateBeCaptiveArg): pb.CpStateBeCaptiveArg;

        /**
         * Encodes the specified CpStateBeCaptiveArg message. Does not implicitly {@link pb.CpStateBeCaptiveArg.verify|verify} messages.
         * @param message CpStateBeCaptiveArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICpStateBeCaptiveArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CpStateBeCaptiveArg message, length delimited. Does not implicitly {@link pb.CpStateBeCaptiveArg.verify|verify} messages.
         * @param message CpStateBeCaptiveArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICpStateBeCaptiveArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CpStateBeCaptiveArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CpStateBeCaptiveArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CpStateBeCaptiveArg;

        /**
         * Decodes a CpStateBeCaptiveArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CpStateBeCaptiveArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CpStateBeCaptiveArg;

        /**
         * Verifies a CpStateBeCaptiveArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CitySimpleData. */
    interface ICitySimpleData {

        /** CitySimpleData CityID */
        CityID?: (number|null);

        /** CitySimpleData CountryID */
        CountryID?: (number|null);

        /** CitySimpleData State */
        State?: (pb.CityState|null);

        /** CitySimpleData Defense */
        Defense?: (number|null);
    }

    /** Represents a CitySimpleData. */
    class CitySimpleData implements ICitySimpleData {

        /**
         * Constructs a new CitySimpleData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICitySimpleData);

        /** CitySimpleData CityID. */
        public CityID: number;

        /** CitySimpleData CountryID. */
        public CountryID: number;

        /** CitySimpleData State. */
        public State: pb.CityState;

        /** CitySimpleData Defense. */
        public Defense: number;

        /**
         * Creates a new CitySimpleData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CitySimpleData instance
         */
        public static create(properties?: pb.ICitySimpleData): pb.CitySimpleData;

        /**
         * Encodes the specified CitySimpleData message. Does not implicitly {@link pb.CitySimpleData.verify|verify} messages.
         * @param message CitySimpleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICitySimpleData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CitySimpleData message, length delimited. Does not implicitly {@link pb.CitySimpleData.verify|verify} messages.
         * @param message CitySimpleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICitySimpleData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CitySimpleData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CitySimpleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CitySimpleData;

        /**
         * Decodes a CitySimpleData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CitySimpleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CitySimpleData;

        /**
         * Verifies a CitySimpleData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** TeamState enum. */
    enum TeamState {
        NormalTS = 0,
        FieldBattleTS = 1,
        CanAttackCityTS = 2,
        AttackingCityTS = 3,
        DisappearTS = 4,
        FieldBattleEndTS = 5,
        AtkCityBattleTS = 6,
        DefCityBattleTS = 7,
        DefCityBattleEndTS = 8
    }

    /** Properties of a TeamData. */
    interface ITeamData {

        /** TeamData ID */
        ID?: (number|null);

        /** TeamData CountryID */
        CountryID?: (number|null);

        /** TeamData CityPath */
        CityPath?: (number[]|null);

        /** TeamData Trip */
        Trip?: (number|null);

        /** TeamData State */
        State?: (pb.TeamState|null);

        /** TeamData TeamAmount */
        TeamAmount?: (number|null);
    }

    /** Represents a TeamData. */
    class TeamData implements ITeamData {

        /**
         * Constructs a new TeamData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITeamData);

        /** TeamData ID. */
        public ID: number;

        /** TeamData CountryID. */
        public CountryID: number;

        /** TeamData CityPath. */
        public CityPath: number[];

        /** TeamData Trip. */
        public Trip: number;

        /** TeamData State. */
        public State: pb.TeamState;

        /** TeamData TeamAmount. */
        public TeamAmount: number;

        /**
         * Creates a new TeamData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamData instance
         */
        public static create(properties?: pb.ITeamData): pb.TeamData;

        /**
         * Encodes the specified TeamData message. Does not implicitly {@link pb.TeamData.verify|verify} messages.
         * @param message TeamData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITeamData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TeamData message, length delimited. Does not implicitly {@link pb.TeamData.verify|verify} messages.
         * @param message TeamData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITeamData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TeamData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TeamData;

        /**
         * Decodes a TeamData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TeamData;

        /**
         * Verifies a TeamData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateMyTeamStateArg. */
    interface IUpdateMyTeamStateArg {

        /** UpdateMyTeamStateArg State */
        State?: (pb.TeamState|null);

        /** UpdateMyTeamStateArg Arg */
        Arg?: (Uint8Array|null);
    }

    /** Represents an UpdateMyTeamStateArg. */
    class UpdateMyTeamStateArg implements IUpdateMyTeamStateArg {

        /**
         * Constructs a new UpdateMyTeamStateArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateMyTeamStateArg);

        /** UpdateMyTeamStateArg State. */
        public State: pb.TeamState;

        /** UpdateMyTeamStateArg Arg. */
        public Arg: Uint8Array;

        /**
         * Creates a new UpdateMyTeamStateArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateMyTeamStateArg instance
         */
        public static create(properties?: pb.IUpdateMyTeamStateArg): pb.UpdateMyTeamStateArg;

        /**
         * Encodes the specified UpdateMyTeamStateArg message. Does not implicitly {@link pb.UpdateMyTeamStateArg.verify|verify} messages.
         * @param message UpdateMyTeamStateArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateMyTeamStateArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateMyTeamStateArg message, length delimited. Does not implicitly {@link pb.UpdateMyTeamStateArg.verify|verify} messages.
         * @param message UpdateMyTeamStateArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateMyTeamStateArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateMyTeamStateArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateMyTeamStateArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateMyTeamStateArg;

        /**
         * Decodes an UpdateMyTeamStateArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateMyTeamStateArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateMyTeamStateArg;

        /**
         * Verifies an UpdateMyTeamStateArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MyTeamDisappear. */
    interface IMyTeamDisappear {

        /** MyTeamDisappear Reason */
        Reason?: (pb.MyTeamDisappear.ReasonEnum|null);

        /** MyTeamDisappear Arg */
        Arg?: (Uint8Array|null);
    }

    /** Represents a MyTeamDisappear. */
    class MyTeamDisappear implements IMyTeamDisappear {

        /**
         * Constructs a new MyTeamDisappear.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMyTeamDisappear);

        /** MyTeamDisappear Reason. */
        public Reason: pb.MyTeamDisappear.ReasonEnum;

        /** MyTeamDisappear Arg. */
        public Arg: Uint8Array;

        /**
         * Creates a new MyTeamDisappear instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MyTeamDisappear instance
         */
        public static create(properties?: pb.IMyTeamDisappear): pb.MyTeamDisappear;

        /**
         * Encodes the specified MyTeamDisappear message. Does not implicitly {@link pb.MyTeamDisappear.verify|verify} messages.
         * @param message MyTeamDisappear message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMyTeamDisappear, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MyTeamDisappear message, length delimited. Does not implicitly {@link pb.MyTeamDisappear.verify|verify} messages.
         * @param message MyTeamDisappear message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMyTeamDisappear, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MyTeamDisappear message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MyTeamDisappear
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MyTeamDisappear;

        /**
         * Decodes a MyTeamDisappear message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MyTeamDisappear
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MyTeamDisappear;

        /**
         * Verifies a MyTeamDisappear message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace MyTeamDisappear {

        /** ReasonEnum enum. */
        enum ReasonEnum {
            Retreat = 0,
            CityBeOccupy = 1,
            OccupyCity = 2,
            EnterCity = 3,
            NoForage = 4,
            CountryDestory = 5
        }
    }

    /** Properties of a TeamRetreat. */
    interface ITeamRetreat {

        /** TeamRetreat OldCity */
        OldCity?: (number|null);

        /** TeamRetreat NewCity */
        NewCity?: (number|null);
    }

    /** Represents a TeamRetreat. */
    class TeamRetreat implements ITeamRetreat {

        /**
         * Constructs a new TeamRetreat.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITeamRetreat);

        /** TeamRetreat OldCity. */
        public OldCity: number;

        /** TeamRetreat NewCity. */
        public NewCity: number;

        /**
         * Creates a new TeamRetreat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamRetreat instance
         */
        public static create(properties?: pb.ITeamRetreat): pb.TeamRetreat;

        /**
         * Encodes the specified TeamRetreat message. Does not implicitly {@link pb.TeamRetreat.verify|verify} messages.
         * @param message TeamRetreat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITeamRetreat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TeamRetreat message, length delimited. Does not implicitly {@link pb.TeamRetreat.verify|verify} messages.
         * @param message TeamRetreat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITeamRetreat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TeamRetreat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamRetreat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TeamRetreat;

        /**
         * Decodes a TeamRetreat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamRetreat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TeamRetreat;

        /**
         * Verifies a TeamRetreat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** MilitaryOrderType enum. */
    enum MilitaryOrderType {
        SupportMT = 0,
        ExpeditionMT = 1,
        DefCityMT = 2
    }

    /** Properties of a MilitaryOrder. */
    interface IMilitaryOrder {

        /** MilitaryOrder Type */
        Type?: (pb.MilitaryOrderType|null);

        /** MilitaryOrder Forage */
        Forage?: (number|null);

        /** MilitaryOrder Amount */
        Amount?: (number|null);

        /** MilitaryOrder MaxAmount */
        MaxAmount?: (number|null);

        /** MilitaryOrder TargetCity */
        TargetCity?: (number|null);
    }

    /** Represents a MilitaryOrder. */
    class MilitaryOrder implements IMilitaryOrder {

        /**
         * Constructs a new MilitaryOrder.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMilitaryOrder);

        /** MilitaryOrder Type. */
        public Type: pb.MilitaryOrderType;

        /** MilitaryOrder Forage. */
        public Forage: number;

        /** MilitaryOrder Amount. */
        public Amount: number;

        /** MilitaryOrder MaxAmount. */
        public MaxAmount: number;

        /** MilitaryOrder TargetCity. */
        public TargetCity: number;

        /**
         * Creates a new MilitaryOrder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MilitaryOrder instance
         */
        public static create(properties?: pb.IMilitaryOrder): pb.MilitaryOrder;

        /**
         * Encodes the specified MilitaryOrder message. Does not implicitly {@link pb.MilitaryOrder.verify|verify} messages.
         * @param message MilitaryOrder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMilitaryOrder, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MilitaryOrder message, length delimited. Does not implicitly {@link pb.MilitaryOrder.verify|verify} messages.
         * @param message MilitaryOrder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMilitaryOrder, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MilitaryOrder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MilitaryOrder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MilitaryOrder;

        /**
         * Decodes a MilitaryOrder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MilitaryOrder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MilitaryOrder;

        /**
         * Verifies a MilitaryOrder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a PublishMilitaryOrderArg. */
    interface IPublishMilitaryOrderArg {

        /** PublishMilitaryOrderArg Type */
        Type?: (pb.MilitaryOrderType|null);

        /** PublishMilitaryOrderArg Forage */
        Forage?: (number|null);

        /** PublishMilitaryOrderArg Amount */
        Amount?: (number|null);

        /** PublishMilitaryOrderArg CityPath */
        CityPath?: (number[]|null);
    }

    /** Represents a PublishMilitaryOrderArg. */
    class PublishMilitaryOrderArg implements IPublishMilitaryOrderArg {

        /**
         * Constructs a new PublishMilitaryOrderArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPublishMilitaryOrderArg);

        /** PublishMilitaryOrderArg Type. */
        public Type: pb.MilitaryOrderType;

        /** PublishMilitaryOrderArg Forage. */
        public Forage: number;

        /** PublishMilitaryOrderArg Amount. */
        public Amount: number;

        /** PublishMilitaryOrderArg CityPath. */
        public CityPath: number[];

        /**
         * Creates a new PublishMilitaryOrderArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PublishMilitaryOrderArg instance
         */
        public static create(properties?: pb.IPublishMilitaryOrderArg): pb.PublishMilitaryOrderArg;

        /**
         * Encodes the specified PublishMilitaryOrderArg message. Does not implicitly {@link pb.PublishMilitaryOrderArg.verify|verify} messages.
         * @param message PublishMilitaryOrderArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPublishMilitaryOrderArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PublishMilitaryOrderArg message, length delimited. Does not implicitly {@link pb.PublishMilitaryOrderArg.verify|verify} messages.
         * @param message PublishMilitaryOrderArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPublishMilitaryOrderArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PublishMilitaryOrderArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PublishMilitaryOrderArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.PublishMilitaryOrderArg;

        /**
         * Decodes a PublishMilitaryOrderArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PublishMilitaryOrderArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.PublishMilitaryOrderArg;

        /**
         * Verifies a PublishMilitaryOrderArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a PublishMilitaryOrderReply. */
    interface IPublishMilitaryOrderReply {

        /** PublishMilitaryOrderReply Orders */
        Orders?: (pb.IMilitaryOrder[]|null);

        /** PublishMilitaryOrderReply Forage */
        Forage?: (number|null);
    }

    /** Represents a PublishMilitaryOrderReply. */
    class PublishMilitaryOrderReply implements IPublishMilitaryOrderReply {

        /**
         * Constructs a new PublishMilitaryOrderReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPublishMilitaryOrderReply);

        /** PublishMilitaryOrderReply Orders. */
        public Orders: pb.IMilitaryOrder[];

        /** PublishMilitaryOrderReply Forage. */
        public Forage: number;

        /**
         * Creates a new PublishMilitaryOrderReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PublishMilitaryOrderReply instance
         */
        public static create(properties?: pb.IPublishMilitaryOrderReply): pb.PublishMilitaryOrderReply;

        /**
         * Encodes the specified PublishMilitaryOrderReply message. Does not implicitly {@link pb.PublishMilitaryOrderReply.verify|verify} messages.
         * @param message PublishMilitaryOrderReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPublishMilitaryOrderReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PublishMilitaryOrderReply message, length delimited. Does not implicitly {@link pb.PublishMilitaryOrderReply.verify|verify} messages.
         * @param message PublishMilitaryOrderReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPublishMilitaryOrderReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PublishMilitaryOrderReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PublishMilitaryOrderReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.PublishMilitaryOrderReply;

        /**
         * Decodes a PublishMilitaryOrderReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PublishMilitaryOrderReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.PublishMilitaryOrderReply;

        /**
         * Verifies a PublishMilitaryOrderReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CancelMilitaryOrderReply. */
    interface ICancelMilitaryOrderReply {

        /** CancelMilitaryOrderReply Forage */
        Forage?: (number|null);
    }

    /** Represents a CancelMilitaryOrderReply. */
    class CancelMilitaryOrderReply implements ICancelMilitaryOrderReply {

        /**
         * Constructs a new CancelMilitaryOrderReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICancelMilitaryOrderReply);

        /** CancelMilitaryOrderReply Forage. */
        public Forage: number;

        /**
         * Creates a new CancelMilitaryOrderReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CancelMilitaryOrderReply instance
         */
        public static create(properties?: pb.ICancelMilitaryOrderReply): pb.CancelMilitaryOrderReply;

        /**
         * Encodes the specified CancelMilitaryOrderReply message. Does not implicitly {@link pb.CancelMilitaryOrderReply.verify|verify} messages.
         * @param message CancelMilitaryOrderReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICancelMilitaryOrderReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CancelMilitaryOrderReply message, length delimited. Does not implicitly {@link pb.CancelMilitaryOrderReply.verify|verify} messages.
         * @param message CancelMilitaryOrderReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICancelMilitaryOrderReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CancelMilitaryOrderReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CancelMilitaryOrderReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CancelMilitaryOrderReply;

        /**
         * Decodes a CancelMilitaryOrderReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CancelMilitaryOrderReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CancelMilitaryOrderReply;

        /**
         * Verifies a CancelMilitaryOrderReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MilitaryOrderInfo. */
    interface IMilitaryOrderInfo {

        /** MilitaryOrderInfo Orders */
        Orders?: (pb.IMilitaryOrder[]|null);
    }

    /** Represents a MilitaryOrderInfo. */
    class MilitaryOrderInfo implements IMilitaryOrderInfo {

        /**
         * Constructs a new MilitaryOrderInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMilitaryOrderInfo);

        /** MilitaryOrderInfo Orders. */
        public Orders: pb.IMilitaryOrder[];

        /**
         * Creates a new MilitaryOrderInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MilitaryOrderInfo instance
         */
        public static create(properties?: pb.IMilitaryOrderInfo): pb.MilitaryOrderInfo;

        /**
         * Encodes the specified MilitaryOrderInfo message. Does not implicitly {@link pb.MilitaryOrderInfo.verify|verify} messages.
         * @param message MilitaryOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMilitaryOrderInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MilitaryOrderInfo message, length delimited. Does not implicitly {@link pb.MilitaryOrderInfo.verify|verify} messages.
         * @param message MilitaryOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMilitaryOrderInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MilitaryOrderInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MilitaryOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MilitaryOrderInfo;

        /**
         * Decodes a MilitaryOrderInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MilitaryOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MilitaryOrderInfo;

        /**
         * Verifies a MilitaryOrderInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TargetMilitaryOrder. */
    interface ITargetMilitaryOrder {

        /** TargetMilitaryOrder Type */
        Type?: (pb.MilitaryOrderType|null);

        /** TargetMilitaryOrder TargetCity */
        TargetCity?: (number|null);
    }

    /** Represents a TargetMilitaryOrder. */
    class TargetMilitaryOrder implements ITargetMilitaryOrder {

        /**
         * Constructs a new TargetMilitaryOrder.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetMilitaryOrder);

        /** TargetMilitaryOrder Type. */
        public Type: pb.MilitaryOrderType;

        /** TargetMilitaryOrder TargetCity. */
        public TargetCity: number;

        /**
         * Creates a new TargetMilitaryOrder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetMilitaryOrder instance
         */
        public static create(properties?: pb.ITargetMilitaryOrder): pb.TargetMilitaryOrder;

        /**
         * Encodes the specified TargetMilitaryOrder message. Does not implicitly {@link pb.TargetMilitaryOrder.verify|verify} messages.
         * @param message TargetMilitaryOrder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetMilitaryOrder, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetMilitaryOrder message, length delimited. Does not implicitly {@link pb.TargetMilitaryOrder.verify|verify} messages.
         * @param message TargetMilitaryOrder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetMilitaryOrder, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetMilitaryOrder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetMilitaryOrder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetMilitaryOrder;

        /**
         * Decodes a TargetMilitaryOrder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetMilitaryOrder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetMilitaryOrder;

        /**
         * Verifies a TargetMilitaryOrder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AcceptMilitaryOrderArg. */
    interface IAcceptMilitaryOrderArg {

        /** AcceptMilitaryOrderArg Type */
        Type?: (pb.MilitaryOrderType|null);

        /** AcceptMilitaryOrderArg TargetCity */
        TargetCity?: (number|null);

        /** AcceptMilitaryOrderArg CardIDs */
        CardIDs?: (number[]|null);
    }

    /** Represents an AcceptMilitaryOrderArg. */
    class AcceptMilitaryOrderArg implements IAcceptMilitaryOrderArg {

        /**
         * Constructs a new AcceptMilitaryOrderArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAcceptMilitaryOrderArg);

        /** AcceptMilitaryOrderArg Type. */
        public Type: pb.MilitaryOrderType;

        /** AcceptMilitaryOrderArg TargetCity. */
        public TargetCity: number;

        /** AcceptMilitaryOrderArg CardIDs. */
        public CardIDs: number[];

        /**
         * Creates a new AcceptMilitaryOrderArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AcceptMilitaryOrderArg instance
         */
        public static create(properties?: pb.IAcceptMilitaryOrderArg): pb.AcceptMilitaryOrderArg;

        /**
         * Encodes the specified AcceptMilitaryOrderArg message. Does not implicitly {@link pb.AcceptMilitaryOrderArg.verify|verify} messages.
         * @param message AcceptMilitaryOrderArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAcceptMilitaryOrderArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AcceptMilitaryOrderArg message, length delimited. Does not implicitly {@link pb.AcceptMilitaryOrderArg.verify|verify} messages.
         * @param message AcceptMilitaryOrderArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAcceptMilitaryOrderArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AcceptMilitaryOrderArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AcceptMilitaryOrderArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AcceptMilitaryOrderArg;

        /**
         * Decodes an AcceptMilitaryOrderArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AcceptMilitaryOrderArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AcceptMilitaryOrderArg;

        /**
         * Verifies an AcceptMilitaryOrderArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AcceptMilitaryOrderReply. */
    interface IAcceptMilitaryOrderReply {

        /** AcceptMilitaryOrderReply State */
        State?: (pb.ICampaignPlayerState|null);

        /** AcceptMilitaryOrderReply Team */
        Team?: (pb.ITeamData|null);
    }

    /** Represents an AcceptMilitaryOrderReply. */
    class AcceptMilitaryOrderReply implements IAcceptMilitaryOrderReply {

        /**
         * Constructs a new AcceptMilitaryOrderReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAcceptMilitaryOrderReply);

        /** AcceptMilitaryOrderReply State. */
        public State?: (pb.ICampaignPlayerState|null);

        /** AcceptMilitaryOrderReply Team. */
        public Team?: (pb.ITeamData|null);

        /**
         * Creates a new AcceptMilitaryOrderReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AcceptMilitaryOrderReply instance
         */
        public static create(properties?: pb.IAcceptMilitaryOrderReply): pb.AcceptMilitaryOrderReply;

        /**
         * Encodes the specified AcceptMilitaryOrderReply message. Does not implicitly {@link pb.AcceptMilitaryOrderReply.verify|verify} messages.
         * @param message AcceptMilitaryOrderReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAcceptMilitaryOrderReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AcceptMilitaryOrderReply message, length delimited. Does not implicitly {@link pb.AcceptMilitaryOrderReply.verify|verify} messages.
         * @param message AcceptMilitaryOrderReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAcceptMilitaryOrderReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AcceptMilitaryOrderReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AcceptMilitaryOrderReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AcceptMilitaryOrderReply;

        /**
         * Decodes an AcceptMilitaryOrderReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AcceptMilitaryOrderReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AcceptMilitaryOrderReply;

        /**
         * Verifies an AcceptMilitaryOrderReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CountrySimpleData. */
    interface ICountrySimpleData {

        /** CountrySimpleData CountryID */
        CountryID?: (number|null);

        /** CountrySimpleData Name */
        Name?: (string|null);

        /** CountrySimpleData Flag */
        Flag?: (string|null);
    }

    /** Represents a CountrySimpleData. */
    class CountrySimpleData implements ICountrySimpleData {

        /**
         * Constructs a new CountrySimpleData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICountrySimpleData);

        /** CountrySimpleData CountryID. */
        public CountryID: number;

        /** CountrySimpleData Name. */
        public Name: string;

        /** CountrySimpleData Flag. */
        public Flag: string;

        /**
         * Creates a new CountrySimpleData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CountrySimpleData instance
         */
        public static create(properties?: pb.ICountrySimpleData): pb.CountrySimpleData;

        /**
         * Encodes the specified CountrySimpleData message. Does not implicitly {@link pb.CountrySimpleData.verify|verify} messages.
         * @param message CountrySimpleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICountrySimpleData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CountrySimpleData message, length delimited. Does not implicitly {@link pb.CountrySimpleData.verify|verify} messages.
         * @param message CountrySimpleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICountrySimpleData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountrySimpleData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountrySimpleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CountrySimpleData;

        /**
         * Decodes a CountrySimpleData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CountrySimpleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CountrySimpleData;

        /**
         * Verifies a CountrySimpleData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignInfo. */
    interface ICampaignInfo {

        /** CampaignInfo Citys */
        Citys?: (pb.ICitySimpleData[]|null);

        /** CampaignInfo Countrys */
        Countrys?: (pb.ICountrySimpleData[]|null);

        /** CampaignInfo MyCityID */
        MyCityID?: (number|null);

        /** CampaignInfo MyLocationCityID */
        MyLocationCityID?: (number|null);

        /** CampaignInfo MyCityJob */
        MyCityJob?: (pb.CampaignJob|null);

        /** CampaignInfo MyCountryJob */
        MyCountryJob?: (pb.CampaignJob|null);

        /** CampaignInfo MyTeam */
        MyTeam?: (pb.ITeamData|null);

        /** CampaignInfo Teams */
        Teams?: (pb.ITeamData[]|null);

        /** CampaignInfo Forage */
        Forage?: (number|null);

        /** CampaignInfo HasCompleteMission */
        HasCompleteMission?: (boolean|null);

        /** CampaignInfo HasNewNotice */
        HasNewNotice?: (boolean|null);

        /** CampaignInfo State */
        State?: (pb.ICampaignState|null);

        /** CampaignInfo MyState */
        MyState?: (pb.ICampaignPlayerState|null);

        /** CampaignInfo MyCountryID */
        MyCountryID?: (number|null);

        /** CampaignInfo Contribution */
        Contribution?: (number|null);

        /** CampaignInfo LastCountryID */
        LastCountryID?: (number|null);

        /** CampaignInfo TeamDisappear */
        TeamDisappear?: (pb.IMyTeamDisappear|null);

        /** CampaignInfo SupportCards */
        SupportCards?: (number[]|null);

        /** CampaignInfo MaxContribution */
        MaxContribution?: (number|null);

        /** CampaignInfo DefPlayerAmounts */
        DefPlayerAmounts?: (pb.ICitysDefPlayerAmount|null);
    }

    /** Represents a CampaignInfo. */
    class CampaignInfo implements ICampaignInfo {

        /**
         * Constructs a new CampaignInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignInfo);

        /** CampaignInfo Citys. */
        public Citys: pb.ICitySimpleData[];

        /** CampaignInfo Countrys. */
        public Countrys: pb.ICountrySimpleData[];

        /** CampaignInfo MyCityID. */
        public MyCityID: number;

        /** CampaignInfo MyLocationCityID. */
        public MyLocationCityID: number;

        /** CampaignInfo MyCityJob. */
        public MyCityJob: pb.CampaignJob;

        /** CampaignInfo MyCountryJob. */
        public MyCountryJob: pb.CampaignJob;

        /** CampaignInfo MyTeam. */
        public MyTeam?: (pb.ITeamData|null);

        /** CampaignInfo Teams. */
        public Teams: pb.ITeamData[];

        /** CampaignInfo Forage. */
        public Forage: number;

        /** CampaignInfo HasCompleteMission. */
        public HasCompleteMission: boolean;

        /** CampaignInfo HasNewNotice. */
        public HasNewNotice: boolean;

        /** CampaignInfo State. */
        public State?: (pb.ICampaignState|null);

        /** CampaignInfo MyState. */
        public MyState?: (pb.ICampaignPlayerState|null);

        /** CampaignInfo MyCountryID. */
        public MyCountryID: number;

        /** CampaignInfo Contribution. */
        public Contribution: number;

        /** CampaignInfo LastCountryID. */
        public LastCountryID: number;

        /** CampaignInfo TeamDisappear. */
        public TeamDisappear?: (pb.IMyTeamDisappear|null);

        /** CampaignInfo SupportCards. */
        public SupportCards: number[];

        /** CampaignInfo MaxContribution. */
        public MaxContribution: number;

        /** CampaignInfo DefPlayerAmounts. */
        public DefPlayerAmounts?: (pb.ICitysDefPlayerAmount|null);

        /**
         * Creates a new CampaignInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignInfo instance
         */
        public static create(properties?: pb.ICampaignInfo): pb.CampaignInfo;

        /**
         * Encodes the specified CampaignInfo message. Does not implicitly {@link pb.CampaignInfo.verify|verify} messages.
         * @param message CampaignInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignInfo message, length delimited. Does not implicitly {@link pb.CampaignInfo.verify|verify} messages.
         * @param message CampaignInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignInfo;

        /**
         * Decodes a CampaignInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignInfo;

        /**
         * Verifies a CampaignInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CreateCountryArg. */
    interface ICreateCountryArg {

        /** CreateCountryArg Gold */
        Gold?: (number|null);
    }

    /** Represents a CreateCountryArg. */
    class CreateCountryArg implements ICreateCountryArg {

        /**
         * Constructs a new CreateCountryArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICreateCountryArg);

        /** CreateCountryArg Gold. */
        public Gold: number;

        /**
         * Creates a new CreateCountryArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateCountryArg instance
         */
        public static create(properties?: pb.ICreateCountryArg): pb.CreateCountryArg;

        /**
         * Encodes the specified CreateCountryArg message. Does not implicitly {@link pb.CreateCountryArg.verify|verify} messages.
         * @param message CreateCountryArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICreateCountryArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CreateCountryArg message, length delimited. Does not implicitly {@link pb.CreateCountryArg.verify|verify} messages.
         * @param message CreateCountryArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICreateCountryArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CreateCountryArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateCountryArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CreateCountryArg;

        /**
         * Decodes a CreateCountryArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateCountryArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CreateCountryArg;

        /**
         * Verifies a CreateCountryArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TargetCity. */
    interface ITargetCity {

        /** TargetCity CityID */
        CityID?: (number|null);
    }

    /** Represents a TargetCity. */
    class TargetCity implements ITargetCity {

        /**
         * Constructs a new TargetCity.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetCity);

        /** TargetCity CityID. */
        public CityID: number;

        /**
         * Creates a new TargetCity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetCity instance
         */
        public static create(properties?: pb.ITargetCity): pb.TargetCity;

        /**
         * Encodes the specified TargetCity message. Does not implicitly {@link pb.TargetCity.verify|verify} messages.
         * @param message TargetCity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetCity, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetCity message, length delimited. Does not implicitly {@link pb.TargetCity.verify|verify} messages.
         * @param message TargetCity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetCity, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetCity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetCity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetCity;

        /**
         * Decodes a TargetCity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetCity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetCity;

        /**
         * Verifies a TargetCity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CountryCreatedArg. */
    interface ICountryCreatedArg {

        /** CountryCreatedArg CountryID */
        CountryID?: (number|null);

        /** CountryCreatedArg Name */
        Name?: (string|null);

        /** CountryCreatedArg Flag */
        Flag?: (string|null);

        /** CountryCreatedArg CityID */
        CityID?: (number|null);

        /** CountryCreatedArg YourMajesty */
        YourMajesty?: (pb.ICampaignSimplePlayer|null);
    }

    /** Represents a CountryCreatedArg. */
    class CountryCreatedArg implements ICountryCreatedArg {

        /**
         * Constructs a new CountryCreatedArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICountryCreatedArg);

        /** CountryCreatedArg CountryID. */
        public CountryID: number;

        /** CountryCreatedArg Name. */
        public Name: string;

        /** CountryCreatedArg Flag. */
        public Flag: string;

        /** CountryCreatedArg CityID. */
        public CityID: number;

        /** CountryCreatedArg YourMajesty. */
        public YourMajesty?: (pb.ICampaignSimplePlayer|null);

        /**
         * Creates a new CountryCreatedArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CountryCreatedArg instance
         */
        public static create(properties?: pb.ICountryCreatedArg): pb.CountryCreatedArg;

        /**
         * Encodes the specified CountryCreatedArg message. Does not implicitly {@link pb.CountryCreatedArg.verify|verify} messages.
         * @param message CountryCreatedArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICountryCreatedArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CountryCreatedArg message, length delimited. Does not implicitly {@link pb.CountryCreatedArg.verify|verify} messages.
         * @param message CountryCreatedArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICountryCreatedArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryCreatedArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryCreatedArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CountryCreatedArg;

        /**
         * Decodes a CountryCreatedArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CountryCreatedArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CountryCreatedArg;

        /**
         * Verifies a CountryCreatedArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** CampaignJob enum. */
    enum CampaignJob {
        UnknowJob = 0,
        YourMajesty = 1,
        Counsellor = 2,
        General = 3,
        Prefect = 4,
        DuWei = 5,
        FieldOfficer = 6
    }

    /** Properties of a CampaignPlayer. */
    interface ICampaignPlayer {

        /** CampaignPlayer Uid */
        Uid?: (number|Long|null);

        /** CampaignPlayer Name */
        Name?: (string|null);

        /** CampaignPlayer HeadImg */
        HeadImg?: (string|null);

        /** CampaignPlayer HeadFrame */
        HeadFrame?: (string|null);

        /** CampaignPlayer CityJob */
        CityJob?: (pb.CampaignJob|null);

        /** CampaignPlayer CountryJob */
        CountryJob?: (pb.CampaignJob|null);

        /** CampaignPlayer PvpScore */
        PvpScore?: (number|null);

        /** CampaignPlayer Contribution */
        Contribution?: (number|null);

        /** CampaignPlayer State */
        State?: (pb.ICampaignPlayerState|null);
    }

    /** Represents a CampaignPlayer. */
    class CampaignPlayer implements ICampaignPlayer {

        /**
         * Constructs a new CampaignPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignPlayer);

        /** CampaignPlayer Uid. */
        public Uid: (number|Long);

        /** CampaignPlayer Name. */
        public Name: string;

        /** CampaignPlayer HeadImg. */
        public HeadImg: string;

        /** CampaignPlayer HeadFrame. */
        public HeadFrame: string;

        /** CampaignPlayer CityJob. */
        public CityJob: pb.CampaignJob;

        /** CampaignPlayer CountryJob. */
        public CountryJob: pb.CampaignJob;

        /** CampaignPlayer PvpScore. */
        public PvpScore: number;

        /** CampaignPlayer Contribution. */
        public Contribution: number;

        /** CampaignPlayer State. */
        public State?: (pb.ICampaignPlayerState|null);

        /**
         * Creates a new CampaignPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignPlayer instance
         */
        public static create(properties?: pb.ICampaignPlayer): pb.CampaignPlayer;

        /**
         * Encodes the specified CampaignPlayer message. Does not implicitly {@link pb.CampaignPlayer.verify|verify} messages.
         * @param message CampaignPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignPlayer message, length delimited. Does not implicitly {@link pb.CampaignPlayer.verify|verify} messages.
         * @param message CampaignPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignPlayer;

        /**
         * Decodes a CampaignPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignPlayer;

        /**
         * Verifies a CampaignPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignPlayerList. */
    interface ICampaignPlayerList {

        /** CampaignPlayerList Players */
        Players?: (pb.ICampaignPlayer[]|null);
    }

    /** Represents a CampaignPlayerList. */
    class CampaignPlayerList implements ICampaignPlayerList {

        /**
         * Constructs a new CampaignPlayerList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignPlayerList);

        /** CampaignPlayerList Players. */
        public Players: pb.ICampaignPlayer[];

        /**
         * Creates a new CampaignPlayerList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignPlayerList instance
         */
        public static create(properties?: pb.ICampaignPlayerList): pb.CampaignPlayerList;

        /**
         * Encodes the specified CampaignPlayerList message. Does not implicitly {@link pb.CampaignPlayerList.verify|verify} messages.
         * @param message CampaignPlayerList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignPlayerList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignPlayerList message, length delimited. Does not implicitly {@link pb.CampaignPlayerList.verify|verify} messages.
         * @param message CampaignPlayerList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignPlayerList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignPlayerList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignPlayerList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignPlayerList;

        /**
         * Decodes a CampaignPlayerList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignPlayerList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignPlayerList;

        /**
         * Verifies a CampaignPlayerList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CityData. */
    interface ICityData {

        /** CityData CountryID */
        CountryID?: (number|null);

        /** CityData PlayerAmount */
        PlayerAmount?: (number|null);

        /** CityData Agriculture */
        Agriculture?: (number|null);

        /** CityData Business */
        Business?: (number|null);

        /** CityData Defense */
        Defense?: (number|null);

        /** CityData Forage */
        Forage?: (number|null);

        /** CityData Gold */
        Gold?: (number|null);

        /** CityData Glory */
        Glory?: (number|null);

        /** CityData Players */
        Players?: (pb.ICampaignPlayer[]|null);

        /** CityData ApplyCreateCountry */
        ApplyCreateCountry?: (pb.IApplyCreateCountryData|null);

        /** CityData YourMajesty */
        YourMajesty?: (pb.ICampaignSimplePlayer|null);

        /** CityData InCityPlayerAmount */
        InCityPlayerAmount?: (number|null);
    }

    /** Represents a CityData. */
    class CityData implements ICityData {

        /**
         * Constructs a new CityData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICityData);

        /** CityData CountryID. */
        public CountryID: number;

        /** CityData PlayerAmount. */
        public PlayerAmount: number;

        /** CityData Agriculture. */
        public Agriculture: number;

        /** CityData Business. */
        public Business: number;

        /** CityData Defense. */
        public Defense: number;

        /** CityData Forage. */
        public Forage: number;

        /** CityData Gold. */
        public Gold: number;

        /** CityData Glory. */
        public Glory: number;

        /** CityData Players. */
        public Players: pb.ICampaignPlayer[];

        /** CityData ApplyCreateCountry. */
        public ApplyCreateCountry?: (pb.IApplyCreateCountryData|null);

        /** CityData YourMajesty. */
        public YourMajesty?: (pb.ICampaignSimplePlayer|null);

        /** CityData InCityPlayerAmount. */
        public InCityPlayerAmount: number;

        /**
         * Creates a new CityData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CityData instance
         */
        public static create(properties?: pb.ICityData): pb.CityData;

        /**
         * Encodes the specified CityData message. Does not implicitly {@link pb.CityData.verify|verify} messages.
         * @param message CityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICityData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CityData message, length delimited. Does not implicitly {@link pb.CityData.verify|verify} messages.
         * @param message CityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICityData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CityData;

        /**
         * Decodes a CityData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CityData;

        /**
         * Verifies a CityData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchApplyCreateCountryPlayersArg. */
    interface IFetchApplyCreateCountryPlayersArg {

        /** FetchApplyCreateCountryPlayersArg CityID */
        CityID?: (number|null);

        /** FetchApplyCreateCountryPlayersArg Page */
        Page?: (number|null);
    }

    /** Represents a FetchApplyCreateCountryPlayersArg. */
    class FetchApplyCreateCountryPlayersArg implements IFetchApplyCreateCountryPlayersArg {

        /**
         * Constructs a new FetchApplyCreateCountryPlayersArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchApplyCreateCountryPlayersArg);

        /** FetchApplyCreateCountryPlayersArg CityID. */
        public CityID: number;

        /** FetchApplyCreateCountryPlayersArg Page. */
        public Page: number;

        /**
         * Creates a new FetchApplyCreateCountryPlayersArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchApplyCreateCountryPlayersArg instance
         */
        public static create(properties?: pb.IFetchApplyCreateCountryPlayersArg): pb.FetchApplyCreateCountryPlayersArg;

        /**
         * Encodes the specified FetchApplyCreateCountryPlayersArg message. Does not implicitly {@link pb.FetchApplyCreateCountryPlayersArg.verify|verify} messages.
         * @param message FetchApplyCreateCountryPlayersArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchApplyCreateCountryPlayersArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchApplyCreateCountryPlayersArg message, length delimited. Does not implicitly {@link pb.FetchApplyCreateCountryPlayersArg.verify|verify} messages.
         * @param message FetchApplyCreateCountryPlayersArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchApplyCreateCountryPlayersArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchApplyCreateCountryPlayersArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchApplyCreateCountryPlayersArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchApplyCreateCountryPlayersArg;

        /**
         * Decodes a FetchApplyCreateCountryPlayersArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchApplyCreateCountryPlayersArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchApplyCreateCountryPlayersArg;

        /**
         * Verifies a FetchApplyCreateCountryPlayersArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an ApplyCreateCountryPlayer. */
    interface IApplyCreateCountryPlayer {

        /** ApplyCreateCountryPlayer Player */
        Player?: (pb.ICampaignPlayer|null);

        /** ApplyCreateCountryPlayer Gold */
        Gold?: (number|null);
    }

    /** Represents an ApplyCreateCountryPlayer. */
    class ApplyCreateCountryPlayer implements IApplyCreateCountryPlayer {

        /**
         * Constructs a new ApplyCreateCountryPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IApplyCreateCountryPlayer);

        /** ApplyCreateCountryPlayer Player. */
        public Player?: (pb.ICampaignPlayer|null);

        /** ApplyCreateCountryPlayer Gold. */
        public Gold: number;

        /**
         * Creates a new ApplyCreateCountryPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApplyCreateCountryPlayer instance
         */
        public static create(properties?: pb.IApplyCreateCountryPlayer): pb.ApplyCreateCountryPlayer;

        /**
         * Encodes the specified ApplyCreateCountryPlayer message. Does not implicitly {@link pb.ApplyCreateCountryPlayer.verify|verify} messages.
         * @param message ApplyCreateCountryPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IApplyCreateCountryPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ApplyCreateCountryPlayer message, length delimited. Does not implicitly {@link pb.ApplyCreateCountryPlayer.verify|verify} messages.
         * @param message ApplyCreateCountryPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IApplyCreateCountryPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ApplyCreateCountryPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplyCreateCountryPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ApplyCreateCountryPlayer;

        /**
         * Decodes an ApplyCreateCountryPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApplyCreateCountryPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ApplyCreateCountryPlayer;

        /**
         * Verifies an ApplyCreateCountryPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an ApplyCreateCountryPlayers. */
    interface IApplyCreateCountryPlayers {

        /** ApplyCreateCountryPlayers Players */
        Players?: (pb.IApplyCreateCountryPlayer[]|null);
    }

    /** Represents an ApplyCreateCountryPlayers. */
    class ApplyCreateCountryPlayers implements IApplyCreateCountryPlayers {

        /**
         * Constructs a new ApplyCreateCountryPlayers.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IApplyCreateCountryPlayers);

        /** ApplyCreateCountryPlayers Players. */
        public Players: pb.IApplyCreateCountryPlayer[];

        /**
         * Creates a new ApplyCreateCountryPlayers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApplyCreateCountryPlayers instance
         */
        public static create(properties?: pb.IApplyCreateCountryPlayers): pb.ApplyCreateCountryPlayers;

        /**
         * Encodes the specified ApplyCreateCountryPlayers message. Does not implicitly {@link pb.ApplyCreateCountryPlayers.verify|verify} messages.
         * @param message ApplyCreateCountryPlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IApplyCreateCountryPlayers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ApplyCreateCountryPlayers message, length delimited. Does not implicitly {@link pb.ApplyCreateCountryPlayers.verify|verify} messages.
         * @param message ApplyCreateCountryPlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IApplyCreateCountryPlayers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ApplyCreateCountryPlayers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplyCreateCountryPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ApplyCreateCountryPlayers;

        /**
         * Decodes an ApplyCreateCountryPlayers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApplyCreateCountryPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ApplyCreateCountryPlayers;

        /**
         * Verifies an ApplyCreateCountryPlayers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an ApplyCreateCountryData. */
    interface IApplyCreateCountryData {

        /** ApplyCreateCountryData RemainTime */
        RemainTime?: (number|null);

        /** ApplyCreateCountryData Players */
        Players?: (pb.IApplyCreateCountryPlayer[]|null);

        /** ApplyCreateCountryData MyApplyMoney */
        MyApplyMoney?: (number|null);

        /** ApplyCreateCountryData MyCountryName */
        MyCountryName?: (number|null);
    }

    /** Represents an ApplyCreateCountryData. */
    class ApplyCreateCountryData implements IApplyCreateCountryData {

        /**
         * Constructs a new ApplyCreateCountryData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IApplyCreateCountryData);

        /** ApplyCreateCountryData RemainTime. */
        public RemainTime: number;

        /** ApplyCreateCountryData Players. */
        public Players: pb.IApplyCreateCountryPlayer[];

        /** ApplyCreateCountryData MyApplyMoney. */
        public MyApplyMoney: number;

        /** ApplyCreateCountryData MyCountryName. */
        public MyCountryName: number;

        /**
         * Creates a new ApplyCreateCountryData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApplyCreateCountryData instance
         */
        public static create(properties?: pb.IApplyCreateCountryData): pb.ApplyCreateCountryData;

        /**
         * Encodes the specified ApplyCreateCountryData message. Does not implicitly {@link pb.ApplyCreateCountryData.verify|verify} messages.
         * @param message ApplyCreateCountryData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IApplyCreateCountryData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ApplyCreateCountryData message, length delimited. Does not implicitly {@link pb.ApplyCreateCountryData.verify|verify} messages.
         * @param message ApplyCreateCountryData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IApplyCreateCountryData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ApplyCreateCountryData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplyCreateCountryData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ApplyCreateCountryData;

        /**
         * Decodes an ApplyCreateCountryData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApplyCreateCountryData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ApplyCreateCountryData;

        /**
         * Verifies an ApplyCreateCountryData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateForageArg. */
    interface IUpdateForageArg {

        /** UpdateForageArg ForageAmount */
        ForageAmount?: (number|null);
    }

    /** Represents an UpdateForageArg. */
    class UpdateForageArg implements IUpdateForageArg {

        /**
         * Constructs a new UpdateForageArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateForageArg);

        /** UpdateForageArg ForageAmount. */
        public ForageAmount: number;

        /**
         * Creates a new UpdateForageArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateForageArg instance
         */
        public static create(properties?: pb.IUpdateForageArg): pb.UpdateForageArg;

        /**
         * Encodes the specified UpdateForageArg message. Does not implicitly {@link pb.UpdateForageArg.verify|verify} messages.
         * @param message UpdateForageArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateForageArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateForageArg message, length delimited. Does not implicitly {@link pb.UpdateForageArg.verify|verify} messages.
         * @param message UpdateForageArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateForageArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateForageArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateForageArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateForageArg;

        /**
         * Decodes an UpdateForageArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateForageArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateForageArg;

        /**
         * Verifies an UpdateForageArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** CampaignMsType enum. */
    enum CampaignMsType {
        UnknowMsType = 0,
        Irrigation = 1,
        Trade = 2,
        Build = 3,
        Transport = 4,
        Dispatch = 5
    }

    /** TransportTypeEnum enum. */
    enum TransportTypeEnum {
        GoldTT = 0,
        ForageTT = 1
    }

    /** Properties of a CampaignMission. */
    interface ICampaignMission {

        /** CampaignMission Type */
        Type?: (pb.CampaignMsType|null);

        /** CampaignMission GoldReward */
        GoldReward?: (number|null);

        /** CampaignMission Amount */
        Amount?: (number|null);

        /** CampaignMission TransportType */
        TransportType?: (pb.TransportTypeEnum|null);

        /** CampaignMission TransportTargetCity */
        TransportTargetCity?: (number|null);

        /** CampaignMission TransportMaxTime */
        TransportMaxTime?: (number|null);

        /** CampaignMission MaxAmount */
        MaxAmount?: (number|null);

        /** CampaignMission Contribution */
        Contribution?: (number|null);
    }

    /** Represents a CampaignMission. */
    class CampaignMission implements ICampaignMission {

        /**
         * Constructs a new CampaignMission.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignMission);

        /** CampaignMission Type. */
        public Type: pb.CampaignMsType;

        /** CampaignMission GoldReward. */
        public GoldReward: number;

        /** CampaignMission Amount. */
        public Amount: number;

        /** CampaignMission TransportType. */
        public TransportType: pb.TransportTypeEnum;

        /** CampaignMission TransportTargetCity. */
        public TransportTargetCity: number;

        /** CampaignMission TransportMaxTime. */
        public TransportMaxTime: number;

        /** CampaignMission MaxAmount. */
        public MaxAmount: number;

        /** CampaignMission Contribution. */
        public Contribution: number;

        /**
         * Creates a new CampaignMission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignMission instance
         */
        public static create(properties?: pb.ICampaignMission): pb.CampaignMission;

        /**
         * Encodes the specified CampaignMission message. Does not implicitly {@link pb.CampaignMission.verify|verify} messages.
         * @param message CampaignMission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignMission message, length delimited. Does not implicitly {@link pb.CampaignMission.verify|verify} messages.
         * @param message CampaignMission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignMission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignMission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignMission;

        /**
         * Decodes a CampaignMission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignMission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignMission;

        /**
         * Verifies a CampaignMission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an ExecutingCampaignMission. */
    interface IExecutingCampaignMission {

        /** ExecutingCampaignMission Type */
        Type?: (pb.CampaignMsType|null);

        /** ExecutingCampaignMission GoldReward */
        GoldReward?: (number|null);

        /** ExecutingCampaignMission RemainTime */
        RemainTime?: (number|null);

        /** ExecutingCampaignMission Cards */
        Cards?: (number[]|null);

        /** ExecutingCampaignMission MaxTime */
        MaxTime?: (number|null);

        /** ExecutingCampaignMission Contribution */
        Contribution?: (number|null);
    }

    /** Represents an ExecutingCampaignMission. */
    class ExecutingCampaignMission implements IExecutingCampaignMission {

        /**
         * Constructs a new ExecutingCampaignMission.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IExecutingCampaignMission);

        /** ExecutingCampaignMission Type. */
        public Type: pb.CampaignMsType;

        /** ExecutingCampaignMission GoldReward. */
        public GoldReward: number;

        /** ExecutingCampaignMission RemainTime. */
        public RemainTime: number;

        /** ExecutingCampaignMission Cards. */
        public Cards: number[];

        /** ExecutingCampaignMission MaxTime. */
        public MaxTime: number;

        /** ExecutingCampaignMission Contribution. */
        public Contribution: number;

        /**
         * Creates a new ExecutingCampaignMission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecutingCampaignMission instance
         */
        public static create(properties?: pb.IExecutingCampaignMission): pb.ExecutingCampaignMission;

        /**
         * Encodes the specified ExecutingCampaignMission message. Does not implicitly {@link pb.ExecutingCampaignMission.verify|verify} messages.
         * @param message ExecutingCampaignMission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IExecutingCampaignMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ExecutingCampaignMission message, length delimited. Does not implicitly {@link pb.ExecutingCampaignMission.verify|verify} messages.
         * @param message ExecutingCampaignMission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IExecutingCampaignMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ExecutingCampaignMission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecutingCampaignMission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ExecutingCampaignMission;

        /**
         * Decodes an ExecutingCampaignMission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecutingCampaignMission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ExecutingCampaignMission;

        /**
         * Verifies an ExecutingCampaignMission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignMissionInfo. */
    interface ICampaignMissionInfo {

        /** CampaignMissionInfo Missions */
        Missions?: (pb.ICampaignMission[]|null);

        /** CampaignMissionInfo ExecutingMission */
        ExecutingMission?: (pb.IExecutingCampaignMission|null);
    }

    /** Represents a CampaignMissionInfo. */
    class CampaignMissionInfo implements ICampaignMissionInfo {

        /**
         * Constructs a new CampaignMissionInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignMissionInfo);

        /** CampaignMissionInfo Missions. */
        public Missions: pb.ICampaignMission[];

        /** CampaignMissionInfo ExecutingMission. */
        public ExecutingMission?: (pb.IExecutingCampaignMission|null);

        /**
         * Creates a new CampaignMissionInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignMissionInfo instance
         */
        public static create(properties?: pb.ICampaignMissionInfo): pb.CampaignMissionInfo;

        /**
         * Encodes the specified CampaignMissionInfo message. Does not implicitly {@link pb.CampaignMissionInfo.verify|verify} messages.
         * @param message CampaignMissionInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignMissionInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignMissionInfo message, length delimited. Does not implicitly {@link pb.CampaignMissionInfo.verify|verify} messages.
         * @param message CampaignMissionInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignMissionInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignMissionInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignMissionInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignMissionInfo;

        /**
         * Decodes a CampaignMissionInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignMissionInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignMissionInfo;

        /**
         * Verifies a CampaignMissionInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignPublishMissionArg. */
    interface ICampaignPublishMissionArg {

        /** CampaignPublishMissionArg Type */
        Type?: (pb.CampaignMsType|null);

        /** CampaignPublishMissionArg GoldReward */
        GoldReward?: (number|null);

        /** CampaignPublishMissionArg Amount */
        Amount?: (number|null);

        /** CampaignPublishMissionArg TransportType */
        TransportType?: (pb.TransportTypeEnum|null);

        /** CampaignPublishMissionArg TransportCityPath */
        TransportCityPath?: (number[]|null);
    }

    /** Represents a CampaignPublishMissionArg. */
    class CampaignPublishMissionArg implements ICampaignPublishMissionArg {

        /**
         * Constructs a new CampaignPublishMissionArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignPublishMissionArg);

        /** CampaignPublishMissionArg Type. */
        public Type: pb.CampaignMsType;

        /** CampaignPublishMissionArg GoldReward. */
        public GoldReward: number;

        /** CampaignPublishMissionArg Amount. */
        public Amount: number;

        /** CampaignPublishMissionArg TransportType. */
        public TransportType: pb.TransportTypeEnum;

        /** CampaignPublishMissionArg TransportCityPath. */
        public TransportCityPath: number[];

        /**
         * Creates a new CampaignPublishMissionArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignPublishMissionArg instance
         */
        public static create(properties?: pb.ICampaignPublishMissionArg): pb.CampaignPublishMissionArg;

        /**
         * Encodes the specified CampaignPublishMissionArg message. Does not implicitly {@link pb.CampaignPublishMissionArg.verify|verify} messages.
         * @param message CampaignPublishMissionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignPublishMissionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignPublishMissionArg message, length delimited. Does not implicitly {@link pb.CampaignPublishMissionArg.verify|verify} messages.
         * @param message CampaignPublishMissionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignPublishMissionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignPublishMissionArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignPublishMissionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignPublishMissionArg;

        /**
         * Decodes a CampaignPublishMissionArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignPublishMissionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignPublishMissionArg;

        /**
         * Verifies a CampaignPublishMissionArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignPublishMissionReply. */
    interface ICampaignPublishMissionReply {

        /** CampaignPublishMissionReply MissionInfo */
        MissionInfo?: (pb.ICampaignMissionInfo|null);

        /** CampaignPublishMissionReply Gold */
        Gold?: (number|null);

        /** CampaignPublishMissionReply Forage */
        Forage?: (number|null);
    }

    /** Represents a CampaignPublishMissionReply. */
    class CampaignPublishMissionReply implements ICampaignPublishMissionReply {

        /**
         * Constructs a new CampaignPublishMissionReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignPublishMissionReply);

        /** CampaignPublishMissionReply MissionInfo. */
        public MissionInfo?: (pb.ICampaignMissionInfo|null);

        /** CampaignPublishMissionReply Gold. */
        public Gold: number;

        /** CampaignPublishMissionReply Forage. */
        public Forage: number;

        /**
         * Creates a new CampaignPublishMissionReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignPublishMissionReply instance
         */
        public static create(properties?: pb.ICampaignPublishMissionReply): pb.CampaignPublishMissionReply;

        /**
         * Encodes the specified CampaignPublishMissionReply message. Does not implicitly {@link pb.CampaignPublishMissionReply.verify|verify} messages.
         * @param message CampaignPublishMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignPublishMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignPublishMissionReply message, length delimited. Does not implicitly {@link pb.CampaignPublishMissionReply.verify|verify} messages.
         * @param message CampaignPublishMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignPublishMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignPublishMissionReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignPublishMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignPublishMissionReply;

        /**
         * Decodes a CampaignPublishMissionReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignPublishMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignPublishMissionReply;

        /**
         * Verifies a CampaignPublishMissionReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AcceptCampaignMissionArg. */
    interface IAcceptCampaignMissionArg {

        /** AcceptCampaignMissionArg Type */
        Type?: (pb.CampaignMsType|null);

        /** AcceptCampaignMissionArg Cards */
        Cards?: (number[]|null);

        /** AcceptCampaignMissionArg TransportTargetCity */
        TransportTargetCity?: (number|null);
    }

    /** Represents an AcceptCampaignMissionArg. */
    class AcceptCampaignMissionArg implements IAcceptCampaignMissionArg {

        /**
         * Constructs a new AcceptCampaignMissionArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAcceptCampaignMissionArg);

        /** AcceptCampaignMissionArg Type. */
        public Type: pb.CampaignMsType;

        /** AcceptCampaignMissionArg Cards. */
        public Cards: number[];

        /** AcceptCampaignMissionArg TransportTargetCity. */
        public TransportTargetCity: number;

        /**
         * Creates a new AcceptCampaignMissionArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AcceptCampaignMissionArg instance
         */
        public static create(properties?: pb.IAcceptCampaignMissionArg): pb.AcceptCampaignMissionArg;

        /**
         * Encodes the specified AcceptCampaignMissionArg message. Does not implicitly {@link pb.AcceptCampaignMissionArg.verify|verify} messages.
         * @param message AcceptCampaignMissionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAcceptCampaignMissionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AcceptCampaignMissionArg message, length delimited. Does not implicitly {@link pb.AcceptCampaignMissionArg.verify|verify} messages.
         * @param message AcceptCampaignMissionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAcceptCampaignMissionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AcceptCampaignMissionArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AcceptCampaignMissionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AcceptCampaignMissionArg;

        /**
         * Decodes an AcceptCampaignMissionArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AcceptCampaignMissionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AcceptCampaignMissionArg;

        /**
         * Verifies an AcceptCampaignMissionArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AcceptCampaignMissionReply. */
    interface IAcceptCampaignMissionReply {

        /** AcceptCampaignMissionReply RemainTime */
        RemainTime?: (number|null);

        /** AcceptCampaignMissionReply Missions */
        Missions?: (pb.ICampaignMission[]|null);
    }

    /** Represents an AcceptCampaignMissionReply. */
    class AcceptCampaignMissionReply implements IAcceptCampaignMissionReply {

        /**
         * Constructs a new AcceptCampaignMissionReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAcceptCampaignMissionReply);

        /** AcceptCampaignMissionReply RemainTime. */
        public RemainTime: number;

        /** AcceptCampaignMissionReply Missions. */
        public Missions: pb.ICampaignMission[];

        /**
         * Creates a new AcceptCampaignMissionReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AcceptCampaignMissionReply instance
         */
        public static create(properties?: pb.IAcceptCampaignMissionReply): pb.AcceptCampaignMissionReply;

        /**
         * Encodes the specified AcceptCampaignMissionReply message. Does not implicitly {@link pb.AcceptCampaignMissionReply.verify|verify} messages.
         * @param message AcceptCampaignMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAcceptCampaignMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AcceptCampaignMissionReply message, length delimited. Does not implicitly {@link pb.AcceptCampaignMissionReply.verify|verify} messages.
         * @param message AcceptCampaignMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAcceptCampaignMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AcceptCampaignMissionReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AcceptCampaignMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AcceptCampaignMissionReply;

        /**
         * Decodes an AcceptCampaignMissionReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AcceptCampaignMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AcceptCampaignMissionReply;

        /**
         * Verifies an AcceptCampaignMissionReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchCityPlayersArg. */
    interface IFetchCityPlayersArg {

        /** FetchCityPlayersArg CityID */
        CityID?: (number|null);

        /** FetchCityPlayersArg Page */
        Page?: (number|null);
    }

    /** Represents a FetchCityPlayersArg. */
    class FetchCityPlayersArg implements IFetchCityPlayersArg {

        /**
         * Constructs a new FetchCityPlayersArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchCityPlayersArg);

        /** FetchCityPlayersArg CityID. */
        public CityID: number;

        /** FetchCityPlayersArg Page. */
        public Page: number;

        /**
         * Creates a new FetchCityPlayersArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchCityPlayersArg instance
         */
        public static create(properties?: pb.IFetchCityPlayersArg): pb.FetchCityPlayersArg;

        /**
         * Encodes the specified FetchCityPlayersArg message. Does not implicitly {@link pb.FetchCityPlayersArg.verify|verify} messages.
         * @param message FetchCityPlayersArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchCityPlayersArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchCityPlayersArg message, length delimited. Does not implicitly {@link pb.FetchCityPlayersArg.verify|verify} messages.
         * @param message FetchCityPlayersArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchCityPlayersArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchCityPlayersArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchCityPlayersArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchCityPlayersArg;

        /**
         * Decodes a FetchCityPlayersArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchCityPlayersArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchCityPlayersArg;

        /**
         * Verifies a FetchCityPlayersArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SetForagePriceArg. */
    interface ISetForagePriceArg {

        /** SetForagePriceArg Price */
        Price?: (number|null);
    }

    /** Represents a SetForagePriceArg. */
    class SetForagePriceArg implements ISetForagePriceArg {

        /**
         * Constructs a new SetForagePriceArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISetForagePriceArg);

        /** SetForagePriceArg Price. */
        public Price: number;

        /**
         * Creates a new SetForagePriceArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetForagePriceArg instance
         */
        public static create(properties?: pb.ISetForagePriceArg): pb.SetForagePriceArg;

        /**
         * Encodes the specified SetForagePriceArg message. Does not implicitly {@link pb.SetForagePriceArg.verify|verify} messages.
         * @param message SetForagePriceArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISetForagePriceArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SetForagePriceArg message, length delimited. Does not implicitly {@link pb.SetForagePriceArg.verify|verify} messages.
         * @param message SetForagePriceArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISetForagePriceArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SetForagePriceArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetForagePriceArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SetForagePriceArg;

        /**
         * Decodes a SetForagePriceArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetForagePriceArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SetForagePriceArg;

        /**
         * Verifies a SetForagePriceArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchForagePriceReply. */
    interface IFetchForagePriceReply {

        /** FetchForagePriceReply ForageAmount */
        ForageAmount?: (number|null);

        /** FetchForagePriceReply Price */
        Price?: (number|null);
    }

    /** Represents a FetchForagePriceReply. */
    class FetchForagePriceReply implements IFetchForagePriceReply {

        /**
         * Constructs a new FetchForagePriceReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchForagePriceReply);

        /** FetchForagePriceReply ForageAmount. */
        public ForageAmount: number;

        /** FetchForagePriceReply Price. */
        public Price: number;

        /**
         * Creates a new FetchForagePriceReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchForagePriceReply instance
         */
        public static create(properties?: pb.IFetchForagePriceReply): pb.FetchForagePriceReply;

        /**
         * Encodes the specified FetchForagePriceReply message. Does not implicitly {@link pb.FetchForagePriceReply.verify|verify} messages.
         * @param message FetchForagePriceReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchForagePriceReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchForagePriceReply message, length delimited. Does not implicitly {@link pb.FetchForagePriceReply.verify|verify} messages.
         * @param message FetchForagePriceReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchForagePriceReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchForagePriceReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchForagePriceReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchForagePriceReply;

        /**
         * Decodes a FetchForagePriceReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchForagePriceReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchForagePriceReply;

        /**
         * Verifies a FetchForagePriceReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** CampaignNoticeType enum. */
    enum CampaignNoticeType {
        CustomNt = 0,
        NewCountryNt = 1,
        AppointJobNt = 2,
        RecallJobNt = 3,
        AutocephalyNt = 4,
        KickOutNt = 5,
        YourMajestyChangeNt = 6,
        ResignNt = 7,
        ClearMissionNt = 8,
        BeOccupyNt = 9,
        DestoryCountryNt = 10,
        UnifiedWordNt = 11,
        AutocephalyVoteNt = 12,
        CapitalInjectionNt = 13,
        ProductionNt = 14,
        SalaryNt = 15,
        TransportNt = 16,
        OccupyNt = 17,
        SurrenderNt = 18,
        BetrayNt = 19,
        EscapedNt = 20,
        EscapedReturnNt = 21,
        AutoDefOrderNt = 22,
        SurrenderCity1Nt = 23,
        SurrenderCity2Nt = 24,
        SurrenderCity3Nt = 25,
        SurrenderCountry1Nt = 26,
        SurrenderCountry2Nt = 27,
        AutocephalyNt2 = 28,
        AutocephalyNt3 = 29
    }

    /** Properties of a NewCountryNtArg. */
    interface INewCountryNtArg {

        /** NewCountryNtArg PlayerName */
        PlayerName?: (string|null);

        /** NewCountryNtArg CountryName */
        CountryName?: (string|null);

        /** NewCountryNtArg CityID */
        CityID?: (number|null);
    }

    /** Represents a NewCountryNtArg. */
    class NewCountryNtArg implements INewCountryNtArg {

        /**
         * Constructs a new NewCountryNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.INewCountryNtArg);

        /** NewCountryNtArg PlayerName. */
        public PlayerName: string;

        /** NewCountryNtArg CountryName. */
        public CountryName: string;

        /** NewCountryNtArg CityID. */
        public CityID: number;

        /**
         * Creates a new NewCountryNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewCountryNtArg instance
         */
        public static create(properties?: pb.INewCountryNtArg): pb.NewCountryNtArg;

        /**
         * Encodes the specified NewCountryNtArg message. Does not implicitly {@link pb.NewCountryNtArg.verify|verify} messages.
         * @param message NewCountryNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.INewCountryNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified NewCountryNtArg message, length delimited. Does not implicitly {@link pb.NewCountryNtArg.verify|verify} messages.
         * @param message NewCountryNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.INewCountryNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NewCountryNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewCountryNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.NewCountryNtArg;

        /**
         * Decodes a NewCountryNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewCountryNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.NewCountryNtArg;

        /**
         * Verifies a NewCountryNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AppointJobNtArg. */
    interface IAppointJobNtArg {

        /** AppointJobNtArg PlayerName */
        PlayerName?: (string|null);

        /** AppointJobNtArg TargetPlayerName */
        TargetPlayerName?: (string|null);

        /** AppointJobNtArg Job */
        Job?: (pb.CampaignJob|null);

        /** AppointJobNtArg CityID */
        CityID?: (number|null);
    }

    /** Represents an AppointJobNtArg. */
    class AppointJobNtArg implements IAppointJobNtArg {

        /**
         * Constructs a new AppointJobNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAppointJobNtArg);

        /** AppointJobNtArg PlayerName. */
        public PlayerName: string;

        /** AppointJobNtArg TargetPlayerName. */
        public TargetPlayerName: string;

        /** AppointJobNtArg Job. */
        public Job: pb.CampaignJob;

        /** AppointJobNtArg CityID. */
        public CityID: number;

        /**
         * Creates a new AppointJobNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AppointJobNtArg instance
         */
        public static create(properties?: pb.IAppointJobNtArg): pb.AppointJobNtArg;

        /**
         * Encodes the specified AppointJobNtArg message. Does not implicitly {@link pb.AppointJobNtArg.verify|verify} messages.
         * @param message AppointJobNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAppointJobNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AppointJobNtArg message, length delimited. Does not implicitly {@link pb.AppointJobNtArg.verify|verify} messages.
         * @param message AppointJobNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAppointJobNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AppointJobNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AppointJobNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AppointJobNtArg;

        /**
         * Decodes an AppointJobNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AppointJobNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AppointJobNtArg;

        /**
         * Verifies an AppointJobNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RecallJobNtArg. */
    interface IRecallJobNtArg {

        /** RecallJobNtArg Job */
        Job?: (pb.CampaignJob|null);

        /** RecallJobNtArg CityID */
        CityID?: (number|null);
    }

    /** Represents a RecallJobNtArg. */
    class RecallJobNtArg implements IRecallJobNtArg {

        /**
         * Constructs a new RecallJobNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRecallJobNtArg);

        /** RecallJobNtArg Job. */
        public Job: pb.CampaignJob;

        /** RecallJobNtArg CityID. */
        public CityID: number;

        /**
         * Creates a new RecallJobNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecallJobNtArg instance
         */
        public static create(properties?: pb.IRecallJobNtArg): pb.RecallJobNtArg;

        /**
         * Encodes the specified RecallJobNtArg message. Does not implicitly {@link pb.RecallJobNtArg.verify|verify} messages.
         * @param message RecallJobNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRecallJobNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RecallJobNtArg message, length delimited. Does not implicitly {@link pb.RecallJobNtArg.verify|verify} messages.
         * @param message RecallJobNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRecallJobNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RecallJobNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecallJobNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RecallJobNtArg;

        /**
         * Decodes a RecallJobNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecallJobNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RecallJobNtArg;

        /**
         * Verifies a RecallJobNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AutocephalyNtArg. */
    interface IAutocephalyNtArg {

        /** AutocephalyNtArg Job */
        Job?: (pb.CampaignJob|null);

        /** AutocephalyNtArg PlayerName */
        PlayerName?: (string|null);

        /** AutocephalyNtArg CountryName */
        CountryName?: (string|null);

        /** AutocephalyNtArg NewCountryName */
        NewCountryName?: (string|null);
    }

    /** Represents an AutocephalyNtArg. */
    class AutocephalyNtArg implements IAutocephalyNtArg {

        /**
         * Constructs a new AutocephalyNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAutocephalyNtArg);

        /** AutocephalyNtArg Job. */
        public Job: pb.CampaignJob;

        /** AutocephalyNtArg PlayerName. */
        public PlayerName: string;

        /** AutocephalyNtArg CountryName. */
        public CountryName: string;

        /** AutocephalyNtArg NewCountryName. */
        public NewCountryName: string;

        /**
         * Creates a new AutocephalyNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutocephalyNtArg instance
         */
        public static create(properties?: pb.IAutocephalyNtArg): pb.AutocephalyNtArg;

        /**
         * Encodes the specified AutocephalyNtArg message. Does not implicitly {@link pb.AutocephalyNtArg.verify|verify} messages.
         * @param message AutocephalyNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAutocephalyNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AutocephalyNtArg message, length delimited. Does not implicitly {@link pb.AutocephalyNtArg.verify|verify} messages.
         * @param message AutocephalyNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAutocephalyNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AutocephalyNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutocephalyNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AutocephalyNtArg;

        /**
         * Decodes an AutocephalyNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutocephalyNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AutocephalyNtArg;

        /**
         * Verifies an AutocephalyNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a KickOutNtArg. */
    interface IKickOutNtArg {

        /** KickOutNtArg Job */
        Job?: (pb.CampaignJob|null);

        /** KickOutNtArg PlayerName */
        PlayerName?: (string|null);

        /** KickOutNtArg CityID */
        CityID?: (number|null);
    }

    /** Represents a KickOutNtArg. */
    class KickOutNtArg implements IKickOutNtArg {

        /**
         * Constructs a new KickOutNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IKickOutNtArg);

        /** KickOutNtArg Job. */
        public Job: pb.CampaignJob;

        /** KickOutNtArg PlayerName. */
        public PlayerName: string;

        /** KickOutNtArg CityID. */
        public CityID: number;

        /**
         * Creates a new KickOutNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KickOutNtArg instance
         */
        public static create(properties?: pb.IKickOutNtArg): pb.KickOutNtArg;

        /**
         * Encodes the specified KickOutNtArg message. Does not implicitly {@link pb.KickOutNtArg.verify|verify} messages.
         * @param message KickOutNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IKickOutNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified KickOutNtArg message, length delimited. Does not implicitly {@link pb.KickOutNtArg.verify|verify} messages.
         * @param message KickOutNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IKickOutNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a KickOutNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KickOutNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.KickOutNtArg;

        /**
         * Decodes a KickOutNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KickOutNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.KickOutNtArg;

        /**
         * Verifies a KickOutNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a YourMajestyChangeNtArg. */
    interface IYourMajestyChangeNtArg {

        /** YourMajestyChangeNtArg YourMajestyName */
        YourMajestyName?: (string|null);

        /** YourMajestyChangeNtArg NewYourMajestyName */
        NewYourMajestyName?: (string|null);
    }

    /** Represents a YourMajestyChangeNtArg. */
    class YourMajestyChangeNtArg implements IYourMajestyChangeNtArg {

        /**
         * Constructs a new YourMajestyChangeNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IYourMajestyChangeNtArg);

        /** YourMajestyChangeNtArg YourMajestyName. */
        public YourMajestyName: string;

        /** YourMajestyChangeNtArg NewYourMajestyName. */
        public NewYourMajestyName: string;

        /**
         * Creates a new YourMajestyChangeNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns YourMajestyChangeNtArg instance
         */
        public static create(properties?: pb.IYourMajestyChangeNtArg): pb.YourMajestyChangeNtArg;

        /**
         * Encodes the specified YourMajestyChangeNtArg message. Does not implicitly {@link pb.YourMajestyChangeNtArg.verify|verify} messages.
         * @param message YourMajestyChangeNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IYourMajestyChangeNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified YourMajestyChangeNtArg message, length delimited. Does not implicitly {@link pb.YourMajestyChangeNtArg.verify|verify} messages.
         * @param message YourMajestyChangeNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IYourMajestyChangeNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a YourMajestyChangeNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns YourMajestyChangeNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.YourMajestyChangeNtArg;

        /**
         * Decodes a YourMajestyChangeNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns YourMajestyChangeNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.YourMajestyChangeNtArg;

        /**
         * Verifies a YourMajestyChangeNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ResignNtArg. */
    interface IResignNtArg {

        /** ResignNtArg Job */
        Job?: (pb.CampaignJob|null);

        /** ResignNtArg PlayerName */
        PlayerName?: (string|null);

        /** ResignNtArg CityID */
        CityID?: (number|null);
    }

    /** Represents a ResignNtArg. */
    class ResignNtArg implements IResignNtArg {

        /**
         * Constructs a new ResignNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IResignNtArg);

        /** ResignNtArg Job. */
        public Job: pb.CampaignJob;

        /** ResignNtArg PlayerName. */
        public PlayerName: string;

        /** ResignNtArg CityID. */
        public CityID: number;

        /**
         * Creates a new ResignNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ResignNtArg instance
         */
        public static create(properties?: pb.IResignNtArg): pb.ResignNtArg;

        /**
         * Encodes the specified ResignNtArg message. Does not implicitly {@link pb.ResignNtArg.verify|verify} messages.
         * @param message ResignNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IResignNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ResignNtArg message, length delimited. Does not implicitly {@link pb.ResignNtArg.verify|verify} messages.
         * @param message ResignNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IResignNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ResignNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ResignNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ResignNtArg;

        /**
         * Decodes a ResignNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ResignNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ResignNtArg;

        /**
         * Verifies a ResignNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BeOccupyNtArg. */
    interface IBeOccupyNtArg {

        /** BeOccupyNtArg CountryName */
        CountryName?: (string|null);

        /** BeOccupyNtArg BeOccupyCityID */
        BeOccupyCityID?: (number|null);

        /** BeOccupyNtArg CaptiveAmount */
        CaptiveAmount?: (number|null);
    }

    /** Represents a BeOccupyNtArg. */
    class BeOccupyNtArg implements IBeOccupyNtArg {

        /**
         * Constructs a new BeOccupyNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBeOccupyNtArg);

        /** BeOccupyNtArg CountryName. */
        public CountryName: string;

        /** BeOccupyNtArg BeOccupyCityID. */
        public BeOccupyCityID: number;

        /** BeOccupyNtArg CaptiveAmount. */
        public CaptiveAmount: number;

        /**
         * Creates a new BeOccupyNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeOccupyNtArg instance
         */
        public static create(properties?: pb.IBeOccupyNtArg): pb.BeOccupyNtArg;

        /**
         * Encodes the specified BeOccupyNtArg message. Does not implicitly {@link pb.BeOccupyNtArg.verify|verify} messages.
         * @param message BeOccupyNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBeOccupyNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BeOccupyNtArg message, length delimited. Does not implicitly {@link pb.BeOccupyNtArg.verify|verify} messages.
         * @param message BeOccupyNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBeOccupyNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeOccupyNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeOccupyNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BeOccupyNtArg;

        /**
         * Decodes a BeOccupyNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeOccupyNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BeOccupyNtArg;

        /**
         * Verifies a BeOccupyNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DestoryCountryNtArg. */
    interface IDestoryCountryNtArg {

        /** DestoryCountryNtArg CountryName */
        CountryName?: (string|null);

        /** DestoryCountryNtArg BeDestoryCountryName */
        BeDestoryCountryName?: (string|null);
    }

    /** Represents a DestoryCountryNtArg. */
    class DestoryCountryNtArg implements IDestoryCountryNtArg {

        /**
         * Constructs a new DestoryCountryNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDestoryCountryNtArg);

        /** DestoryCountryNtArg CountryName. */
        public CountryName: string;

        /** DestoryCountryNtArg BeDestoryCountryName. */
        public BeDestoryCountryName: string;

        /**
         * Creates a new DestoryCountryNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DestoryCountryNtArg instance
         */
        public static create(properties?: pb.IDestoryCountryNtArg): pb.DestoryCountryNtArg;

        /**
         * Encodes the specified DestoryCountryNtArg message. Does not implicitly {@link pb.DestoryCountryNtArg.verify|verify} messages.
         * @param message DestoryCountryNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDestoryCountryNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DestoryCountryNtArg message, length delimited. Does not implicitly {@link pb.DestoryCountryNtArg.verify|verify} messages.
         * @param message DestoryCountryNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDestoryCountryNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DestoryCountryNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DestoryCountryNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DestoryCountryNtArg;

        /**
         * Decodes a DestoryCountryNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DestoryCountryNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DestoryCountryNtArg;

        /**
         * Verifies a DestoryCountryNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UnifiedWordNtArg. */
    interface IUnifiedWordNtArg {

        /** UnifiedWordNtArg CountryName */
        CountryName?: (string|null);

        /** UnifiedWordNtArg YourMajestyName */
        YourMajestyName?: (string|null);
    }

    /** Represents an UnifiedWordNtArg. */
    class UnifiedWordNtArg implements IUnifiedWordNtArg {

        /**
         * Constructs a new UnifiedWordNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUnifiedWordNtArg);

        /** UnifiedWordNtArg CountryName. */
        public CountryName: string;

        /** UnifiedWordNtArg YourMajestyName. */
        public YourMajestyName: string;

        /**
         * Creates a new UnifiedWordNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnifiedWordNtArg instance
         */
        public static create(properties?: pb.IUnifiedWordNtArg): pb.UnifiedWordNtArg;

        /**
         * Encodes the specified UnifiedWordNtArg message. Does not implicitly {@link pb.UnifiedWordNtArg.verify|verify} messages.
         * @param message UnifiedWordNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUnifiedWordNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnifiedWordNtArg message, length delimited. Does not implicitly {@link pb.UnifiedWordNtArg.verify|verify} messages.
         * @param message UnifiedWordNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUnifiedWordNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnifiedWordNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnifiedWordNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UnifiedWordNtArg;

        /**
         * Decodes an UnifiedWordNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnifiedWordNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UnifiedWordNtArg;

        /**
         * Verifies an UnifiedWordNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AutocephalyVoteNtArg. */
    interface IAutocephalyVoteNtArg {

        /** AutocephalyVoteNtArg Job */
        Job?: (pb.CampaignJob|null);

        /** AutocephalyVoteNtArg PlayerName */
        PlayerName?: (string|null);

        /** AutocephalyVoteNtArg CityID */
        CityID?: (number|null);

        /** AutocephalyVoteNtArg CountryName */
        CountryName?: (string|null);
    }

    /** Represents an AutocephalyVoteNtArg. */
    class AutocephalyVoteNtArg implements IAutocephalyVoteNtArg {

        /**
         * Constructs a new AutocephalyVoteNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAutocephalyVoteNtArg);

        /** AutocephalyVoteNtArg Job. */
        public Job: pb.CampaignJob;

        /** AutocephalyVoteNtArg PlayerName. */
        public PlayerName: string;

        /** AutocephalyVoteNtArg CityID. */
        public CityID: number;

        /** AutocephalyVoteNtArg CountryName. */
        public CountryName: string;

        /**
         * Creates a new AutocephalyVoteNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutocephalyVoteNtArg instance
         */
        public static create(properties?: pb.IAutocephalyVoteNtArg): pb.AutocephalyVoteNtArg;

        /**
         * Encodes the specified AutocephalyVoteNtArg message. Does not implicitly {@link pb.AutocephalyVoteNtArg.verify|verify} messages.
         * @param message AutocephalyVoteNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAutocephalyVoteNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AutocephalyVoteNtArg message, length delimited. Does not implicitly {@link pb.AutocephalyVoteNtArg.verify|verify} messages.
         * @param message AutocephalyVoteNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAutocephalyVoteNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AutocephalyVoteNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutocephalyVoteNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AutocephalyVoteNtArg;

        /**
         * Decodes an AutocephalyVoteNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutocephalyVoteNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AutocephalyVoteNtArg;

        /**
         * Verifies an AutocephalyVoteNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CapitalInjectionNtArg. */
    interface ICapitalInjectionNtArg {

        /** CapitalInjectionNtArg Job */
        Job?: (pb.CampaignJob|null);

        /** CapitalInjectionNtArg PlayerName */
        PlayerName?: (string|null);

        /** CapitalInjectionNtArg Gold */
        Gold?: (number|null);
    }

    /** Represents a CapitalInjectionNtArg. */
    class CapitalInjectionNtArg implements ICapitalInjectionNtArg {

        /**
         * Constructs a new CapitalInjectionNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICapitalInjectionNtArg);

        /** CapitalInjectionNtArg Job. */
        public Job: pb.CampaignJob;

        /** CapitalInjectionNtArg PlayerName. */
        public PlayerName: string;

        /** CapitalInjectionNtArg Gold. */
        public Gold: number;

        /**
         * Creates a new CapitalInjectionNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CapitalInjectionNtArg instance
         */
        public static create(properties?: pb.ICapitalInjectionNtArg): pb.CapitalInjectionNtArg;

        /**
         * Encodes the specified CapitalInjectionNtArg message. Does not implicitly {@link pb.CapitalInjectionNtArg.verify|verify} messages.
         * @param message CapitalInjectionNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICapitalInjectionNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CapitalInjectionNtArg message, length delimited. Does not implicitly {@link pb.CapitalInjectionNtArg.verify|verify} messages.
         * @param message CapitalInjectionNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICapitalInjectionNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CapitalInjectionNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CapitalInjectionNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CapitalInjectionNtArg;

        /**
         * Decodes a CapitalInjectionNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CapitalInjectionNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CapitalInjectionNtArg;

        /**
         * Verifies a CapitalInjectionNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ProductionNtArg. */
    interface IProductionNtArg {

        /** ProductionNtArg Gold */
        Gold?: (number|null);

        /** ProductionNtArg Forage */
        Forage?: (number|null);
    }

    /** Represents a ProductionNtArg. */
    class ProductionNtArg implements IProductionNtArg {

        /**
         * Constructs a new ProductionNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IProductionNtArg);

        /** ProductionNtArg Gold. */
        public Gold: number;

        /** ProductionNtArg Forage. */
        public Forage: number;

        /**
         * Creates a new ProductionNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProductionNtArg instance
         */
        public static create(properties?: pb.IProductionNtArg): pb.ProductionNtArg;

        /**
         * Encodes the specified ProductionNtArg message. Does not implicitly {@link pb.ProductionNtArg.verify|verify} messages.
         * @param message ProductionNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IProductionNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ProductionNtArg message, length delimited. Does not implicitly {@link pb.ProductionNtArg.verify|verify} messages.
         * @param message ProductionNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IProductionNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ProductionNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProductionNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ProductionNtArg;

        /**
         * Decodes a ProductionNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProductionNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ProductionNtArg;

        /**
         * Verifies a ProductionNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SalaryNtArg. */
    interface ISalaryNtArg {

        /** SalaryNtArg Gold */
        Gold?: (number|null);
    }

    /** Represents a SalaryNtArg. */
    class SalaryNtArg implements ISalaryNtArg {

        /**
         * Constructs a new SalaryNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISalaryNtArg);

        /** SalaryNtArg Gold. */
        public Gold: number;

        /**
         * Creates a new SalaryNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SalaryNtArg instance
         */
        public static create(properties?: pb.ISalaryNtArg): pb.SalaryNtArg;

        /**
         * Encodes the specified SalaryNtArg message. Does not implicitly {@link pb.SalaryNtArg.verify|verify} messages.
         * @param message SalaryNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISalaryNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SalaryNtArg message, length delimited. Does not implicitly {@link pb.SalaryNtArg.verify|verify} messages.
         * @param message SalaryNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISalaryNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SalaryNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SalaryNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SalaryNtArg;

        /**
         * Decodes a SalaryNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SalaryNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SalaryNtArg;

        /**
         * Verifies a SalaryNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TransportNtArg. */
    interface ITransportNtArg {

        /** TransportNtArg FromCity */
        FromCity?: (number|null);

        /** TransportNtArg TargetCity */
        TargetCity?: (number|null);

        /** TransportNtArg TransportType */
        TransportType?: (pb.TransportTypeEnum|null);

        /** TransportNtArg Amount */
        Amount?: (number|null);
    }

    /** Represents a TransportNtArg. */
    class TransportNtArg implements ITransportNtArg {

        /**
         * Constructs a new TransportNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITransportNtArg);

        /** TransportNtArg FromCity. */
        public FromCity: number;

        /** TransportNtArg TargetCity. */
        public TargetCity: number;

        /** TransportNtArg TransportType. */
        public TransportType: pb.TransportTypeEnum;

        /** TransportNtArg Amount. */
        public Amount: number;

        /**
         * Creates a new TransportNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TransportNtArg instance
         */
        public static create(properties?: pb.ITransportNtArg): pb.TransportNtArg;

        /**
         * Encodes the specified TransportNtArg message. Does not implicitly {@link pb.TransportNtArg.verify|verify} messages.
         * @param message TransportNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITransportNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TransportNtArg message, length delimited. Does not implicitly {@link pb.TransportNtArg.verify|verify} messages.
         * @param message TransportNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITransportNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TransportNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TransportNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TransportNtArg;

        /**
         * Decodes a TransportNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TransportNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TransportNtArg;

        /**
         * Verifies a TransportNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an OccupyNtArg. */
    interface IOccupyNtArg {

        /** OccupyNtArg OccupyCityID */
        OccupyCityID?: (number|null);

        /** OccupyNtArg CaptiveAmount */
        CaptiveAmount?: (number|null);
    }

    /** Represents an OccupyNtArg. */
    class OccupyNtArg implements IOccupyNtArg {

        /**
         * Constructs a new OccupyNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IOccupyNtArg);

        /** OccupyNtArg OccupyCityID. */
        public OccupyCityID: number;

        /** OccupyNtArg CaptiveAmount. */
        public CaptiveAmount: number;

        /**
         * Creates a new OccupyNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OccupyNtArg instance
         */
        public static create(properties?: pb.IOccupyNtArg): pb.OccupyNtArg;

        /**
         * Encodes the specified OccupyNtArg message. Does not implicitly {@link pb.OccupyNtArg.verify|verify} messages.
         * @param message OccupyNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IOccupyNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified OccupyNtArg message, length delimited. Does not implicitly {@link pb.OccupyNtArg.verify|verify} messages.
         * @param message OccupyNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IOccupyNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OccupyNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OccupyNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.OccupyNtArg;

        /**
         * Decodes an OccupyNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OccupyNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.OccupyNtArg;

        /**
         * Verifies an OccupyNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SurrenderNtArg. */
    interface ISurrenderNtArg {

        /** SurrenderNtArg PlayerName */
        PlayerName?: (string|null);
    }

    /** Represents a SurrenderNtArg. */
    class SurrenderNtArg implements ISurrenderNtArg {

        /**
         * Constructs a new SurrenderNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISurrenderNtArg);

        /** SurrenderNtArg PlayerName. */
        public PlayerName: string;

        /**
         * Creates a new SurrenderNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SurrenderNtArg instance
         */
        public static create(properties?: pb.ISurrenderNtArg): pb.SurrenderNtArg;

        /**
         * Encodes the specified SurrenderNtArg message. Does not implicitly {@link pb.SurrenderNtArg.verify|verify} messages.
         * @param message SurrenderNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISurrenderNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SurrenderNtArg message, length delimited. Does not implicitly {@link pb.SurrenderNtArg.verify|verify} messages.
         * @param message SurrenderNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISurrenderNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SurrenderNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SurrenderNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SurrenderNtArg;

        /**
         * Decodes a SurrenderNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SurrenderNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SurrenderNtArg;

        /**
         * Verifies a SurrenderNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BetrayNtArg. */
    interface IBetrayNtArg {

        /** BetrayNtArg PlayerName */
        PlayerName?: (string|null);
    }

    /** Represents a BetrayNtArg. */
    class BetrayNtArg implements IBetrayNtArg {

        /**
         * Constructs a new BetrayNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBetrayNtArg);

        /** BetrayNtArg PlayerName. */
        public PlayerName: string;

        /**
         * Creates a new BetrayNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BetrayNtArg instance
         */
        public static create(properties?: pb.IBetrayNtArg): pb.BetrayNtArg;

        /**
         * Encodes the specified BetrayNtArg message. Does not implicitly {@link pb.BetrayNtArg.verify|verify} messages.
         * @param message BetrayNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBetrayNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BetrayNtArg message, length delimited. Does not implicitly {@link pb.BetrayNtArg.verify|verify} messages.
         * @param message BetrayNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBetrayNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BetrayNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BetrayNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BetrayNtArg;

        /**
         * Decodes a BetrayNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BetrayNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BetrayNtArg;

        /**
         * Verifies a BetrayNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an EscapedNtArg. */
    interface IEscapedNtArg {

        /** EscapedNtArg PlayerName */
        PlayerName?: (string|null);
    }

    /** Represents an EscapedNtArg. */
    class EscapedNtArg implements IEscapedNtArg {

        /**
         * Constructs a new EscapedNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEscapedNtArg);

        /** EscapedNtArg PlayerName. */
        public PlayerName: string;

        /**
         * Creates a new EscapedNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EscapedNtArg instance
         */
        public static create(properties?: pb.IEscapedNtArg): pb.EscapedNtArg;

        /**
         * Encodes the specified EscapedNtArg message. Does not implicitly {@link pb.EscapedNtArg.verify|verify} messages.
         * @param message EscapedNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEscapedNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified EscapedNtArg message, length delimited. Does not implicitly {@link pb.EscapedNtArg.verify|verify} messages.
         * @param message EscapedNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEscapedNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EscapedNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EscapedNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.EscapedNtArg;

        /**
         * Decodes an EscapedNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EscapedNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.EscapedNtArg;

        /**
         * Verifies an EscapedNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an EscapedReturnNtArg. */
    interface IEscapedReturnNtArg {

        /** EscapedReturnNtArg PlayerName */
        PlayerName?: (string|null);
    }

    /** Represents an EscapedReturnNtArg. */
    class EscapedReturnNtArg implements IEscapedReturnNtArg {

        /**
         * Constructs a new EscapedReturnNtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEscapedReturnNtArg);

        /** EscapedReturnNtArg PlayerName. */
        public PlayerName: string;

        /**
         * Creates a new EscapedReturnNtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EscapedReturnNtArg instance
         */
        public static create(properties?: pb.IEscapedReturnNtArg): pb.EscapedReturnNtArg;

        /**
         * Encodes the specified EscapedReturnNtArg message. Does not implicitly {@link pb.EscapedReturnNtArg.verify|verify} messages.
         * @param message EscapedReturnNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEscapedReturnNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified EscapedReturnNtArg message, length delimited. Does not implicitly {@link pb.EscapedReturnNtArg.verify|verify} messages.
         * @param message EscapedReturnNtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEscapedReturnNtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EscapedReturnNtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EscapedReturnNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.EscapedReturnNtArg;

        /**
         * Decodes an EscapedReturnNtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EscapedReturnNtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.EscapedReturnNtArg;

        /**
         * Verifies an EscapedReturnNtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SurrenderCity1NtArg. */
    interface ISurrenderCity1NtArg {

        /** SurrenderCity1NtArg PlayerName */
        PlayerName?: (string|null);

        /** SurrenderCity1NtArg CityID */
        CityID?: (number|null);

        /** SurrenderCity1NtArg TargetCountryName */
        TargetCountryName?: (string|null);
    }

    /** Represents a SurrenderCity1NtArg. */
    class SurrenderCity1NtArg implements ISurrenderCity1NtArg {

        /**
         * Constructs a new SurrenderCity1NtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISurrenderCity1NtArg);

        /** SurrenderCity1NtArg PlayerName. */
        public PlayerName: string;

        /** SurrenderCity1NtArg CityID. */
        public CityID: number;

        /** SurrenderCity1NtArg TargetCountryName. */
        public TargetCountryName: string;

        /**
         * Creates a new SurrenderCity1NtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SurrenderCity1NtArg instance
         */
        public static create(properties?: pb.ISurrenderCity1NtArg): pb.SurrenderCity1NtArg;

        /**
         * Encodes the specified SurrenderCity1NtArg message. Does not implicitly {@link pb.SurrenderCity1NtArg.verify|verify} messages.
         * @param message SurrenderCity1NtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISurrenderCity1NtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SurrenderCity1NtArg message, length delimited. Does not implicitly {@link pb.SurrenderCity1NtArg.verify|verify} messages.
         * @param message SurrenderCity1NtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISurrenderCity1NtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SurrenderCity1NtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SurrenderCity1NtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SurrenderCity1NtArg;

        /**
         * Decodes a SurrenderCity1NtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SurrenderCity1NtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SurrenderCity1NtArg;

        /**
         * Verifies a SurrenderCity1NtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SurrenderCity2NtArg. */
    interface ISurrenderCity2NtArg {

        /** SurrenderCity2NtArg PlayerName */
        PlayerName?: (string|null);

        /** SurrenderCity2NtArg CityID */
        CityID?: (number|null);
    }

    /** Represents a SurrenderCity2NtArg. */
    class SurrenderCity2NtArg implements ISurrenderCity2NtArg {

        /**
         * Constructs a new SurrenderCity2NtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISurrenderCity2NtArg);

        /** SurrenderCity2NtArg PlayerName. */
        public PlayerName: string;

        /** SurrenderCity2NtArg CityID. */
        public CityID: number;

        /**
         * Creates a new SurrenderCity2NtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SurrenderCity2NtArg instance
         */
        public static create(properties?: pb.ISurrenderCity2NtArg): pb.SurrenderCity2NtArg;

        /**
         * Encodes the specified SurrenderCity2NtArg message. Does not implicitly {@link pb.SurrenderCity2NtArg.verify|verify} messages.
         * @param message SurrenderCity2NtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISurrenderCity2NtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SurrenderCity2NtArg message, length delimited. Does not implicitly {@link pb.SurrenderCity2NtArg.verify|verify} messages.
         * @param message SurrenderCity2NtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISurrenderCity2NtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SurrenderCity2NtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SurrenderCity2NtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SurrenderCity2NtArg;

        /**
         * Decodes a SurrenderCity2NtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SurrenderCity2NtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SurrenderCity2NtArg;

        /**
         * Verifies a SurrenderCity2NtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SurrenderCountry1NtArg. */
    interface ISurrenderCountry1NtArg {

        /** SurrenderCountry1NtArg PlayerName */
        PlayerName?: (string|null);

        /** SurrenderCountry1NtArg TargetCountryName */
        TargetCountryName?: (string|null);
    }

    /** Represents a SurrenderCountry1NtArg. */
    class SurrenderCountry1NtArg implements ISurrenderCountry1NtArg {

        /**
         * Constructs a new SurrenderCountry1NtArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISurrenderCountry1NtArg);

        /** SurrenderCountry1NtArg PlayerName. */
        public PlayerName: string;

        /** SurrenderCountry1NtArg TargetCountryName. */
        public TargetCountryName: string;

        /**
         * Creates a new SurrenderCountry1NtArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SurrenderCountry1NtArg instance
         */
        public static create(properties?: pb.ISurrenderCountry1NtArg): pb.SurrenderCountry1NtArg;

        /**
         * Encodes the specified SurrenderCountry1NtArg message. Does not implicitly {@link pb.SurrenderCountry1NtArg.verify|verify} messages.
         * @param message SurrenderCountry1NtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISurrenderCountry1NtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SurrenderCountry1NtArg message, length delimited. Does not implicitly {@link pb.SurrenderCountry1NtArg.verify|verify} messages.
         * @param message SurrenderCountry1NtArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISurrenderCountry1NtArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SurrenderCountry1NtArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SurrenderCountry1NtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SurrenderCountry1NtArg;

        /**
         * Decodes a SurrenderCountry1NtArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SurrenderCountry1NtArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SurrenderCountry1NtArg;

        /**
         * Verifies a SurrenderCountry1NtArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AutocephalyNt2Arg. */
    interface IAutocephalyNt2Arg {

        /** AutocephalyNt2Arg CityID */
        CityID?: (number|null);

        /** AutocephalyNt2Arg Job */
        Job?: (pb.CampaignJob|null);

        /** AutocephalyNt2Arg PlayerName */
        PlayerName?: (string|null);

        /** AutocephalyNt2Arg OldCountryName */
        OldCountryName?: (string|null);

        /** AutocephalyNt2Arg NewCountryName */
        NewCountryName?: (string|null);
    }

    /** Represents an AutocephalyNt2Arg. */
    class AutocephalyNt2Arg implements IAutocephalyNt2Arg {

        /**
         * Constructs a new AutocephalyNt2Arg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAutocephalyNt2Arg);

        /** AutocephalyNt2Arg CityID. */
        public CityID: number;

        /** AutocephalyNt2Arg Job. */
        public Job: pb.CampaignJob;

        /** AutocephalyNt2Arg PlayerName. */
        public PlayerName: string;

        /** AutocephalyNt2Arg OldCountryName. */
        public OldCountryName: string;

        /** AutocephalyNt2Arg NewCountryName. */
        public NewCountryName: string;

        /**
         * Creates a new AutocephalyNt2Arg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutocephalyNt2Arg instance
         */
        public static create(properties?: pb.IAutocephalyNt2Arg): pb.AutocephalyNt2Arg;

        /**
         * Encodes the specified AutocephalyNt2Arg message. Does not implicitly {@link pb.AutocephalyNt2Arg.verify|verify} messages.
         * @param message AutocephalyNt2Arg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAutocephalyNt2Arg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AutocephalyNt2Arg message, length delimited. Does not implicitly {@link pb.AutocephalyNt2Arg.verify|verify} messages.
         * @param message AutocephalyNt2Arg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAutocephalyNt2Arg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AutocephalyNt2Arg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutocephalyNt2Arg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AutocephalyNt2Arg;

        /**
         * Decodes an AutocephalyNt2Arg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutocephalyNt2Arg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AutocephalyNt2Arg;

        /**
         * Verifies an AutocephalyNt2Arg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AutocephalyNt3Arg. */
    interface IAutocephalyNt3Arg {

        /** AutocephalyNt3Arg PlayerName */
        PlayerName?: (string|null);

        /** AutocephalyNt3Arg CityID */
        CityID?: (number|null);

        /** AutocephalyNt3Arg NewCountryName */
        NewCountryName?: (string|null);
    }

    /** Represents an AutocephalyNt3Arg. */
    class AutocephalyNt3Arg implements IAutocephalyNt3Arg {

        /**
         * Constructs a new AutocephalyNt3Arg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAutocephalyNt3Arg);

        /** AutocephalyNt3Arg PlayerName. */
        public PlayerName: string;

        /** AutocephalyNt3Arg CityID. */
        public CityID: number;

        /** AutocephalyNt3Arg NewCountryName. */
        public NewCountryName: string;

        /**
         * Creates a new AutocephalyNt3Arg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutocephalyNt3Arg instance
         */
        public static create(properties?: pb.IAutocephalyNt3Arg): pb.AutocephalyNt3Arg;

        /**
         * Encodes the specified AutocephalyNt3Arg message. Does not implicitly {@link pb.AutocephalyNt3Arg.verify|verify} messages.
         * @param message AutocephalyNt3Arg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAutocephalyNt3Arg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AutocephalyNt3Arg message, length delimited. Does not implicitly {@link pb.AutocephalyNt3Arg.verify|verify} messages.
         * @param message AutocephalyNt3Arg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAutocephalyNt3Arg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AutocephalyNt3Arg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutocephalyNt3Arg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AutocephalyNt3Arg;

        /**
         * Decodes an AutocephalyNt3Arg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutocephalyNt3Arg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AutocephalyNt3Arg;

        /**
         * Verifies an AutocephalyNt3Arg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignNotice. */
    interface ICampaignNotice {

        /** CampaignNotice ID */
        ID?: (number|null);

        /** CampaignNotice Type */
        Type?: (pb.CampaignNoticeType|null);

        /** CampaignNotice Time */
        Time?: (number|null);

        /** CampaignNotice Args */
        Args?: (Uint8Array|null);
    }

    /** Represents a CampaignNotice. */
    class CampaignNotice implements ICampaignNotice {

        /**
         * Constructs a new CampaignNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignNotice);

        /** CampaignNotice ID. */
        public ID: number;

        /** CampaignNotice Type. */
        public Type: pb.CampaignNoticeType;

        /** CampaignNotice Time. */
        public Time: number;

        /** CampaignNotice Args. */
        public Args: Uint8Array;

        /**
         * Creates a new CampaignNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignNotice instance
         */
        public static create(properties?: pb.ICampaignNotice): pb.CampaignNotice;

        /**
         * Encodes the specified CampaignNotice message. Does not implicitly {@link pb.CampaignNotice.verify|verify} messages.
         * @param message CampaignNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignNotice, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignNotice message, length delimited. Does not implicitly {@link pb.CampaignNotice.verify|verify} messages.
         * @param message CampaignNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignNotice, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignNotice;

        /**
         * Decodes a CampaignNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignNotice;

        /**
         * Verifies a CampaignNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignNoticeInfo. */
    interface ICampaignNoticeInfo {

        /** CampaignNoticeInfo Notices */
        Notices?: (pb.ICampaignNotice[]|null);
    }

    /** Represents a CampaignNoticeInfo. */
    class CampaignNoticeInfo implements ICampaignNoticeInfo {

        /**
         * Constructs a new CampaignNoticeInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignNoticeInfo);

        /** CampaignNoticeInfo Notices. */
        public Notices: pb.ICampaignNotice[];

        /**
         * Creates a new CampaignNoticeInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignNoticeInfo instance
         */
        public static create(properties?: pb.ICampaignNoticeInfo): pb.CampaignNoticeInfo;

        /**
         * Encodes the specified CampaignNoticeInfo message. Does not implicitly {@link pb.CampaignNoticeInfo.verify|verify} messages.
         * @param message CampaignNoticeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignNoticeInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignNoticeInfo message, length delimited. Does not implicitly {@link pb.CampaignNoticeInfo.verify|verify} messages.
         * @param message CampaignNoticeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignNoticeInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignNoticeInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignNoticeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignNoticeInfo;

        /**
         * Decodes a CampaignNoticeInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignNoticeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignNoticeInfo;

        /**
         * Verifies a CampaignNoticeInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CityPlayerAmount. */
    interface ICityPlayerAmount {

        /** CityPlayerAmount CityID */
        CityID?: (number|null);

        /** CityPlayerAmount PlayerAmount */
        PlayerAmount?: (number|null);

        /** CityPlayerAmount Glory */
        Glory?: (number|null);

        /** CityPlayerAmount MaxApplyCountryGold */
        MaxApplyCountryGold?: (number|null);

        /** CityPlayerAmount AvgMissionReward */
        AvgMissionReward?: (number|null);
    }

    /** Represents a CityPlayerAmount. */
    class CityPlayerAmount implements ICityPlayerAmount {

        /**
         * Constructs a new CityPlayerAmount.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICityPlayerAmount);

        /** CityPlayerAmount CityID. */
        public CityID: number;

        /** CityPlayerAmount PlayerAmount. */
        public PlayerAmount: number;

        /** CityPlayerAmount Glory. */
        public Glory: number;

        /** CityPlayerAmount MaxApplyCountryGold. */
        public MaxApplyCountryGold: number;

        /** CityPlayerAmount AvgMissionReward. */
        public AvgMissionReward: number;

        /**
         * Creates a new CityPlayerAmount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CityPlayerAmount instance
         */
        public static create(properties?: pb.ICityPlayerAmount): pb.CityPlayerAmount;

        /**
         * Encodes the specified CityPlayerAmount message. Does not implicitly {@link pb.CityPlayerAmount.verify|verify} messages.
         * @param message CityPlayerAmount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICityPlayerAmount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CityPlayerAmount message, length delimited. Does not implicitly {@link pb.CityPlayerAmount.verify|verify} messages.
         * @param message CityPlayerAmount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICityPlayerAmount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityPlayerAmount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityPlayerAmount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CityPlayerAmount;

        /**
         * Decodes a CityPlayerAmount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CityPlayerAmount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CityPlayerAmount;

        /**
         * Verifies a CityPlayerAmount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AllCityPlayerAmount. */
    interface IAllCityPlayerAmount {

        /** AllCityPlayerAmount PlayerAmounts */
        PlayerAmounts?: (pb.ICityPlayerAmount[]|null);
    }

    /** Represents an AllCityPlayerAmount. */
    class AllCityPlayerAmount implements IAllCityPlayerAmount {

        /**
         * Constructs a new AllCityPlayerAmount.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAllCityPlayerAmount);

        /** AllCityPlayerAmount PlayerAmounts. */
        public PlayerAmounts: pb.ICityPlayerAmount[];

        /**
         * Creates a new AllCityPlayerAmount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AllCityPlayerAmount instance
         */
        public static create(properties?: pb.IAllCityPlayerAmount): pb.AllCityPlayerAmount;

        /**
         * Encodes the specified AllCityPlayerAmount message. Does not implicitly {@link pb.AllCityPlayerAmount.verify|verify} messages.
         * @param message AllCityPlayerAmount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAllCityPlayerAmount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AllCityPlayerAmount message, length delimited. Does not implicitly {@link pb.AllCityPlayerAmount.verify|verify} messages.
         * @param message AllCityPlayerAmount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAllCityPlayerAmount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AllCityPlayerAmount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AllCityPlayerAmount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AllCityPlayerAmount;

        /**
         * Decodes an AllCityPlayerAmount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AllCityPlayerAmount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AllCityPlayerAmount;

        /**
         * Verifies an AllCityPlayerAmount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchCountryPlayersArg. */
    interface IFetchCountryPlayersArg {

        /** FetchCountryPlayersArg CountryID */
        CountryID?: (number|null);

        /** FetchCountryPlayersArg Page */
        Page?: (number|null);
    }

    /** Represents a FetchCountryPlayersArg. */
    class FetchCountryPlayersArg implements IFetchCountryPlayersArg {

        /**
         * Constructs a new FetchCountryPlayersArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchCountryPlayersArg);

        /** FetchCountryPlayersArg CountryID. */
        public CountryID: number;

        /** FetchCountryPlayersArg Page. */
        public Page: number;

        /**
         * Creates a new FetchCountryPlayersArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchCountryPlayersArg instance
         */
        public static create(properties?: pb.IFetchCountryPlayersArg): pb.FetchCountryPlayersArg;

        /**
         * Encodes the specified FetchCountryPlayersArg message. Does not implicitly {@link pb.FetchCountryPlayersArg.verify|verify} messages.
         * @param message FetchCountryPlayersArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchCountryPlayersArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchCountryPlayersArg message, length delimited. Does not implicitly {@link pb.FetchCountryPlayersArg.verify|verify} messages.
         * @param message FetchCountryPlayersArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchCountryPlayersArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchCountryPlayersArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchCountryPlayersArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchCountryPlayersArg;

        /**
         * Decodes a FetchCountryPlayersArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchCountryPlayersArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchCountryPlayersArg;

        /**
         * Verifies a FetchCountryPlayersArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignNotifyRedDotArg. */
    interface ICampaignNotifyRedDotArg {

        /** CampaignNotifyRedDotArg Type */
        Type?: (pb.CampaignNotifyRedDotArg.RedDotType|null);
    }

    /** Represents a CampaignNotifyRedDotArg. */
    class CampaignNotifyRedDotArg implements ICampaignNotifyRedDotArg {

        /**
         * Constructs a new CampaignNotifyRedDotArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignNotifyRedDotArg);

        /** CampaignNotifyRedDotArg Type. */
        public Type: pb.CampaignNotifyRedDotArg.RedDotType;

        /**
         * Creates a new CampaignNotifyRedDotArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignNotifyRedDotArg instance
         */
        public static create(properties?: pb.ICampaignNotifyRedDotArg): pb.CampaignNotifyRedDotArg;

        /**
         * Encodes the specified CampaignNotifyRedDotArg message. Does not implicitly {@link pb.CampaignNotifyRedDotArg.verify|verify} messages.
         * @param message CampaignNotifyRedDotArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignNotifyRedDotArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignNotifyRedDotArg message, length delimited. Does not implicitly {@link pb.CampaignNotifyRedDotArg.verify|verify} messages.
         * @param message CampaignNotifyRedDotArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignNotifyRedDotArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignNotifyRedDotArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignNotifyRedDotArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignNotifyRedDotArg;

        /**
         * Decodes a CampaignNotifyRedDotArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignNotifyRedDotArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignNotifyRedDotArg;

        /**
         * Verifies a CampaignNotifyRedDotArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace CampaignNotifyRedDotArg {

        /** RedDotType enum. */
        enum RedDotType {
            Misson = 0,
            Notice = 1
        }
    }

    /** Properties of an AppointJobArg. */
    interface IAppointJobArg {

        /** AppointJobArg Uid */
        Uid?: (number|Long|null);

        /** AppointJobArg Job */
        Job?: (pb.CampaignJob|null);

        /** AppointJobArg OldUid */
        OldUid?: (number|Long|null);
    }

    /** Represents an AppointJobArg. */
    class AppointJobArg implements IAppointJobArg {

        /**
         * Constructs a new AppointJobArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAppointJobArg);

        /** AppointJobArg Uid. */
        public Uid: (number|Long);

        /** AppointJobArg Job. */
        public Job: pb.CampaignJob;

        /** AppointJobArg OldUid. */
        public OldUid: (number|Long);

        /**
         * Creates a new AppointJobArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AppointJobArg instance
         */
        public static create(properties?: pb.IAppointJobArg): pb.AppointJobArg;

        /**
         * Encodes the specified AppointJobArg message. Does not implicitly {@link pb.AppointJobArg.verify|verify} messages.
         * @param message AppointJobArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAppointJobArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AppointJobArg message, length delimited. Does not implicitly {@link pb.AppointJobArg.verify|verify} messages.
         * @param message AppointJobArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAppointJobArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AppointJobArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AppointJobArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AppointJobArg;

        /**
         * Decodes an AppointJobArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AppointJobArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AppointJobArg;

        /**
         * Verifies an AppointJobArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RecallJobArg. */
    interface IRecallJobArg {

        /** RecallJobArg Uid */
        Uid?: (number|Long|null);

        /** RecallJobArg Job */
        Job?: (pb.CampaignJob|null);
    }

    /** Represents a RecallJobArg. */
    class RecallJobArg implements IRecallJobArg {

        /**
         * Constructs a new RecallJobArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRecallJobArg);

        /** RecallJobArg Uid. */
        public Uid: (number|Long);

        /** RecallJobArg Job. */
        public Job: pb.CampaignJob;

        /**
         * Creates a new RecallJobArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RecallJobArg instance
         */
        public static create(properties?: pb.IRecallJobArg): pb.RecallJobArg;

        /**
         * Encodes the specified RecallJobArg message. Does not implicitly {@link pb.RecallJobArg.verify|verify} messages.
         * @param message RecallJobArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRecallJobArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RecallJobArg message, length delimited. Does not implicitly {@link pb.RecallJobArg.verify|verify} messages.
         * @param message RecallJobArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRecallJobArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RecallJobArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecallJobArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RecallJobArg;

        /**
         * Decodes a RecallJobArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RecallJobArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RecallJobArg;

        /**
         * Verifies a RecallJobArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CityDefense. */
    interface ICityDefense {

        /** CityDefense CityID */
        CityID?: (number|null);

        /** CityDefense Defense */
        Defense?: (number|null);
    }

    /** Represents a CityDefense. */
    class CityDefense implements ICityDefense {

        /**
         * Constructs a new CityDefense.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICityDefense);

        /** CityDefense CityID. */
        public CityID: number;

        /** CityDefense Defense. */
        public Defense: number;

        /**
         * Creates a new CityDefense instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CityDefense instance
         */
        public static create(properties?: pb.ICityDefense): pb.CityDefense;

        /**
         * Encodes the specified CityDefense message. Does not implicitly {@link pb.CityDefense.verify|verify} messages.
         * @param message CityDefense message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICityDefense, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CityDefense message, length delimited. Does not implicitly {@link pb.CityDefense.verify|verify} messages.
         * @param message CityDefense message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICityDefense, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityDefense message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityDefense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CityDefense;

        /**
         * Decodes a CityDefense message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CityDefense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CityDefense;

        /**
         * Verifies a CityDefense message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SyncCityDefenseArg. */
    interface ISyncCityDefenseArg {

        /** SyncCityDefenseArg CityDefenses */
        CityDefenses?: (pb.ICityDefense[]|null);
    }

    /** Represents a SyncCityDefenseArg. */
    class SyncCityDefenseArg implements ISyncCityDefenseArg {

        /**
         * Constructs a new SyncCityDefenseArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISyncCityDefenseArg);

        /** SyncCityDefenseArg CityDefenses. */
        public CityDefenses: pb.ICityDefense[];

        /**
         * Creates a new SyncCityDefenseArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SyncCityDefenseArg instance
         */
        public static create(properties?: pb.ISyncCityDefenseArg): pb.SyncCityDefenseArg;

        /**
         * Encodes the specified SyncCityDefenseArg message. Does not implicitly {@link pb.SyncCityDefenseArg.verify|verify} messages.
         * @param message SyncCityDefenseArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISyncCityDefenseArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SyncCityDefenseArg message, length delimited. Does not implicitly {@link pb.SyncCityDefenseArg.verify|verify} messages.
         * @param message SyncCityDefenseArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISyncCityDefenseArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SyncCityDefenseArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SyncCityDefenseArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SyncCityDefenseArg;

        /**
         * Decodes a SyncCityDefenseArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SyncCityDefenseArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SyncCityDefenseArg;

        /**
         * Verifies a SyncCityDefenseArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignUpdateJobArg. */
    interface ICampaignUpdateJobArg {

        /** CampaignUpdateJobArg CityJob */
        CityJob?: (pb.CampaignJob|null);

        /** CampaignUpdateJobArg CountryJob */
        CountryJob?: (pb.CampaignJob|null);
    }

    /** Represents a CampaignUpdateJobArg. */
    class CampaignUpdateJobArg implements ICampaignUpdateJobArg {

        /**
         * Constructs a new CampaignUpdateJobArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignUpdateJobArg);

        /** CampaignUpdateJobArg CityJob. */
        public CityJob: pb.CampaignJob;

        /** CampaignUpdateJobArg CountryJob. */
        public CountryJob: pb.CampaignJob;

        /**
         * Creates a new CampaignUpdateJobArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignUpdateJobArg instance
         */
        public static create(properties?: pb.ICampaignUpdateJobArg): pb.CampaignUpdateJobArg;

        /**
         * Encodes the specified CampaignUpdateJobArg message. Does not implicitly {@link pb.CampaignUpdateJobArg.verify|verify} messages.
         * @param message CampaignUpdateJobArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignUpdateJobArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignUpdateJobArg message, length delimited. Does not implicitly {@link pb.CampaignUpdateJobArg.verify|verify} messages.
         * @param message CampaignUpdateJobArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignUpdateJobArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignUpdateJobArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignUpdateJobArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignUpdateJobArg;

        /**
         * Decodes a CampaignUpdateJobArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignUpdateJobArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignUpdateJobArg;

        /**
         * Verifies a CampaignUpdateJobArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a PatrolCityReply. */
    interface IPatrolCityReply {

        /** PatrolCityReply Contribution */
        Contribution?: (number|null);

        /** PatrolCityReply Salary */
        Salary?: (number|null);
    }

    /** Represents a PatrolCityReply. */
    class PatrolCityReply implements IPatrolCityReply {

        /**
         * Constructs a new PatrolCityReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPatrolCityReply);

        /** PatrolCityReply Contribution. */
        public Contribution: number;

        /** PatrolCityReply Salary. */
        public Salary: number;

        /**
         * Creates a new PatrolCityReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PatrolCityReply instance
         */
        public static create(properties?: pb.IPatrolCityReply): pb.PatrolCityReply;

        /**
         * Encodes the specified PatrolCityReply message. Does not implicitly {@link pb.PatrolCityReply.verify|verify} messages.
         * @param message PatrolCityReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPatrolCityReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PatrolCityReply message, length delimited. Does not implicitly {@link pb.PatrolCityReply.verify|verify} messages.
         * @param message PatrolCityReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPatrolCityReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PatrolCityReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PatrolCityReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.PatrolCityReply;

        /**
         * Decodes a PatrolCityReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PatrolCityReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.PatrolCityReply;

        /**
         * Verifies a PatrolCityReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CityCapitalInjectionArg. */
    interface ICityCapitalInjectionArg {

        /** CityCapitalInjectionArg CityID */
        CityID?: (number|null);

        /** CityCapitalInjectionArg Gold */
        Gold?: (number|null);
    }

    /** Represents a CityCapitalInjectionArg. */
    class CityCapitalInjectionArg implements ICityCapitalInjectionArg {

        /**
         * Constructs a new CityCapitalInjectionArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICityCapitalInjectionArg);

        /** CityCapitalInjectionArg CityID. */
        public CityID: number;

        /** CityCapitalInjectionArg Gold. */
        public Gold: number;

        /**
         * Creates a new CityCapitalInjectionArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CityCapitalInjectionArg instance
         */
        public static create(properties?: pb.ICityCapitalInjectionArg): pb.CityCapitalInjectionArg;

        /**
         * Encodes the specified CityCapitalInjectionArg message. Does not implicitly {@link pb.CityCapitalInjectionArg.verify|verify} messages.
         * @param message CityCapitalInjectionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICityCapitalInjectionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CityCapitalInjectionArg message, length delimited. Does not implicitly {@link pb.CityCapitalInjectionArg.verify|verify} messages.
         * @param message CityCapitalInjectionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICityCapitalInjectionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityCapitalInjectionArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityCapitalInjectionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CityCapitalInjectionArg;

        /**
         * Decodes a CityCapitalInjectionArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CityCapitalInjectionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CityCapitalInjectionArg;

        /**
         * Verifies a CityCapitalInjectionArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CityCapitalInjectionReply. */
    interface ICityCapitalInjectionReply {

        /** CityCapitalInjectionReply CurGold */
        CurGold?: (number|null);
    }

    /** Represents a CityCapitalInjectionReply. */
    class CityCapitalInjectionReply implements ICityCapitalInjectionReply {

        /**
         * Constructs a new CityCapitalInjectionReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICityCapitalInjectionReply);

        /** CityCapitalInjectionReply CurGold. */
        public CurGold: number;

        /**
         * Creates a new CityCapitalInjectionReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CityCapitalInjectionReply instance
         */
        public static create(properties?: pb.ICityCapitalInjectionReply): pb.CityCapitalInjectionReply;

        /**
         * Encodes the specified CityCapitalInjectionReply message. Does not implicitly {@link pb.CityCapitalInjectionReply.verify|verify} messages.
         * @param message CityCapitalInjectionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICityCapitalInjectionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CityCapitalInjectionReply message, length delimited. Does not implicitly {@link pb.CityCapitalInjectionReply.verify|verify} messages.
         * @param message CityCapitalInjectionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICityCapitalInjectionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityCapitalInjectionReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityCapitalInjectionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CityCapitalInjectionReply;

        /**
         * Decodes a CityCapitalInjectionReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CityCapitalInjectionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CityCapitalInjectionReply;

        /**
         * Verifies a CityCapitalInjectionReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateMyCityArg. */
    interface IUpdateMyCityArg {

        /** UpdateMyCityArg CityID */
        CityID?: (number|null);

        /** UpdateMyCityArg LocationCityID */
        LocationCityID?: (number|null);
    }

    /** Represents an UpdateMyCityArg. */
    class UpdateMyCityArg implements IUpdateMyCityArg {

        /**
         * Constructs a new UpdateMyCityArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateMyCityArg);

        /** UpdateMyCityArg CityID. */
        public CityID: number;

        /** UpdateMyCityArg LocationCityID. */
        public LocationCityID: number;

        /**
         * Creates a new UpdateMyCityArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateMyCityArg instance
         */
        public static create(properties?: pb.IUpdateMyCityArg): pb.UpdateMyCityArg;

        /**
         * Encodes the specified UpdateMyCityArg message. Does not implicitly {@link pb.UpdateMyCityArg.verify|verify} messages.
         * @param message UpdateMyCityArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateMyCityArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateMyCityArg message, length delimited. Does not implicitly {@link pb.UpdateMyCityArg.verify|verify} messages.
         * @param message UpdateMyCityArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateMyCityArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateMyCityArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateMyCityArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateMyCityArg;

        /**
         * Decodes an UpdateMyCityArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateMyCityArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateMyCityArg;

        /**
         * Verifies an UpdateMyCityArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignTargetPlayer. */
    interface ICampaignTargetPlayer {

        /** CampaignTargetPlayer Uid */
        Uid?: (number|Long|null);
    }

    /** Represents a CampaignTargetPlayer. */
    class CampaignTargetPlayer implements ICampaignTargetPlayer {

        /**
         * Constructs a new CampaignTargetPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignTargetPlayer);

        /** CampaignTargetPlayer Uid. */
        public Uid: (number|Long);

        /**
         * Creates a new CampaignTargetPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignTargetPlayer instance
         */
        public static create(properties?: pb.ICampaignTargetPlayer): pb.CampaignTargetPlayer;

        /**
         * Encodes the specified CampaignTargetPlayer message. Does not implicitly {@link pb.CampaignTargetPlayer.verify|verify} messages.
         * @param message CampaignTargetPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignTargetPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignTargetPlayer message, length delimited. Does not implicitly {@link pb.CampaignTargetPlayer.verify|verify} messages.
         * @param message CampaignTargetPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignTargetPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignTargetPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignTargetPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignTargetPlayer;

        /**
         * Decodes a CampaignTargetPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignTargetPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignTargetPlayer;

        /**
         * Verifies a CampaignTargetPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateMyCountryArg. */
    interface IUpdateMyCountryArg {

        /** UpdateMyCountryArg CountryID */
        CountryID?: (number|null);

        /** UpdateMyCountryArg LastCountryID */
        LastCountryID?: (number|null);
    }

    /** Represents an UpdateMyCountryArg. */
    class UpdateMyCountryArg implements IUpdateMyCountryArg {

        /**
         * Constructs a new UpdateMyCountryArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateMyCountryArg);

        /** UpdateMyCountryArg CountryID. */
        public CountryID: number;

        /** UpdateMyCountryArg LastCountryID. */
        public LastCountryID: number;

        /**
         * Creates a new UpdateMyCountryArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateMyCountryArg instance
         */
        public static create(properties?: pb.IUpdateMyCountryArg): pb.UpdateMyCountryArg;

        /**
         * Encodes the specified UpdateMyCountryArg message. Does not implicitly {@link pb.UpdateMyCountryArg.verify|verify} messages.
         * @param message UpdateMyCountryArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateMyCountryArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateMyCountryArg message, length delimited. Does not implicitly {@link pb.UpdateMyCountryArg.verify|verify} messages.
         * @param message UpdateMyCountryArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateMyCountryArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateMyCountryArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateMyCountryArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateMyCountryArg;

        /**
         * Decodes an UpdateMyCountryArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateMyCountryArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateMyCountryArg;

        /**
         * Verifies an UpdateMyCountryArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AutocephalyInfo. */
    interface IAutocephalyInfo {

        /** AutocephalyInfo CountryName */
        CountryName?: (string|null);

        /** AutocephalyInfo AgreePlayers */
        AgreePlayers?: (pb.ICampaignPlayer[]|null);
    }

    /** Represents an AutocephalyInfo. */
    class AutocephalyInfo implements IAutocephalyInfo {

        /**
         * Constructs a new AutocephalyInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAutocephalyInfo);

        /** AutocephalyInfo CountryName. */
        public CountryName: string;

        /** AutocephalyInfo AgreePlayers. */
        public AgreePlayers: pb.ICampaignPlayer[];

        /**
         * Creates a new AutocephalyInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutocephalyInfo instance
         */
        public static create(properties?: pb.IAutocephalyInfo): pb.AutocephalyInfo;

        /**
         * Encodes the specified AutocephalyInfo message. Does not implicitly {@link pb.AutocephalyInfo.verify|verify} messages.
         * @param message AutocephalyInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAutocephalyInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AutocephalyInfo message, length delimited. Does not implicitly {@link pb.AutocephalyInfo.verify|verify} messages.
         * @param message AutocephalyInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAutocephalyInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AutocephalyInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutocephalyInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AutocephalyInfo;

        /**
         * Decodes an AutocephalyInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutocephalyInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AutocephalyInfo;

        /**
         * Verifies an AutocephalyInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AutocephalyArg. */
    interface IAutocephalyArg {

        /** AutocephalyArg CountryName */
        CountryName?: (string|null);
    }

    /** Represents an AutocephalyArg. */
    class AutocephalyArg implements IAutocephalyArg {

        /**
         * Constructs a new AutocephalyArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAutocephalyArg);

        /** AutocephalyArg CountryName. */
        public CountryName: string;

        /**
         * Creates a new AutocephalyArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutocephalyArg instance
         */
        public static create(properties?: pb.IAutocephalyArg): pb.AutocephalyArg;

        /**
         * Encodes the specified AutocephalyArg message. Does not implicitly {@link pb.AutocephalyArg.verify|verify} messages.
         * @param message AutocephalyArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAutocephalyArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AutocephalyArg message, length delimited. Does not implicitly {@link pb.AutocephalyArg.verify|verify} messages.
         * @param message AutocephalyArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAutocephalyArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AutocephalyArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutocephalyArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AutocephalyArg;

        /**
         * Decodes an AutocephalyArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutocephalyArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AutocephalyArg;

        /**
         * Verifies an AutocephalyArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VoteAutocephalyArg. */
    interface IVoteAutocephalyArg {

        /** VoteAutocephalyArg IsAgree */
        IsAgree?: (boolean|null);

        /** VoteAutocephalyArg NoticeID */
        NoticeID?: (number|null);
    }

    /** Represents a VoteAutocephalyArg. */
    class VoteAutocephalyArg implements IVoteAutocephalyArg {

        /**
         * Constructs a new VoteAutocephalyArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVoteAutocephalyArg);

        /** VoteAutocephalyArg IsAgree. */
        public IsAgree: boolean;

        /** VoteAutocephalyArg NoticeID. */
        public NoticeID: number;

        /**
         * Creates a new VoteAutocephalyArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VoteAutocephalyArg instance
         */
        public static create(properties?: pb.IVoteAutocephalyArg): pb.VoteAutocephalyArg;

        /**
         * Encodes the specified VoteAutocephalyArg message. Does not implicitly {@link pb.VoteAutocephalyArg.verify|verify} messages.
         * @param message VoteAutocephalyArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVoteAutocephalyArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VoteAutocephalyArg message, length delimited. Does not implicitly {@link pb.VoteAutocephalyArg.verify|verify} messages.
         * @param message VoteAutocephalyArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVoteAutocephalyArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VoteAutocephalyArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VoteAutocephalyArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VoteAutocephalyArg;

        /**
         * Decodes a VoteAutocephalyArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VoteAutocephalyArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VoteAutocephalyArg;

        /**
         * Verifies a VoteAutocephalyArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AccDefCityLoseLoadingReply. */
    interface IAccDefCityLoseLoadingReply {

        /** AccDefCityLoseLoadingReply RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents an AccDefCityLoseLoadingReply. */
    class AccDefCityLoseLoadingReply implements IAccDefCityLoseLoadingReply {

        /**
         * Constructs a new AccDefCityLoseLoadingReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAccDefCityLoseLoadingReply);

        /** AccDefCityLoseLoadingReply RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new AccDefCityLoseLoadingReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccDefCityLoseLoadingReply instance
         */
        public static create(properties?: pb.IAccDefCityLoseLoadingReply): pb.AccDefCityLoseLoadingReply;

        /**
         * Encodes the specified AccDefCityLoseLoadingReply message. Does not implicitly {@link pb.AccDefCityLoseLoadingReply.verify|verify} messages.
         * @param message AccDefCityLoseLoadingReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAccDefCityLoseLoadingReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AccDefCityLoseLoadingReply message, length delimited. Does not implicitly {@link pb.AccDefCityLoseLoadingReply.verify|verify} messages.
         * @param message AccDefCityLoseLoadingReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAccDefCityLoseLoadingReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AccDefCityLoseLoadingReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccDefCityLoseLoadingReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AccDefCityLoseLoadingReply;

        /**
         * Decodes an AccDefCityLoseLoadingReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccDefCityLoseLoadingReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AccDefCityLoseLoadingReply;

        /**
         * Verifies an AccDefCityLoseLoadingReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CountryModifyNameArg. */
    interface ICountryModifyNameArg {

        /** CountryModifyNameArg Name */
        Name?: (string|null);
    }

    /** Represents a CountryModifyNameArg. */
    class CountryModifyNameArg implements ICountryModifyNameArg {

        /**
         * Constructs a new CountryModifyNameArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICountryModifyNameArg);

        /** CountryModifyNameArg Name. */
        public Name: string;

        /**
         * Creates a new CountryModifyNameArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CountryModifyNameArg instance
         */
        public static create(properties?: pb.ICountryModifyNameArg): pb.CountryModifyNameArg;

        /**
         * Encodes the specified CountryModifyNameArg message. Does not implicitly {@link pb.CountryModifyNameArg.verify|verify} messages.
         * @param message CountryModifyNameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICountryModifyNameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CountryModifyNameArg message, length delimited. Does not implicitly {@link pb.CountryModifyNameArg.verify|verify} messages.
         * @param message CountryModifyNameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICountryModifyNameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryModifyNameArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryModifyNameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CountryModifyNameArg;

        /**
         * Decodes a CountryModifyNameArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CountryModifyNameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CountryModifyNameArg;

        /**
         * Verifies a CountryModifyNameArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CountryModifyFlagArg. */
    interface ICountryModifyFlagArg {

        /** CountryModifyFlagArg Flag */
        Flag?: (string|null);
    }

    /** Represents a CountryModifyFlagArg. */
    class CountryModifyFlagArg implements ICountryModifyFlagArg {

        /**
         * Constructs a new CountryModifyFlagArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICountryModifyFlagArg);

        /** CountryModifyFlagArg Flag. */
        public Flag: string;

        /**
         * Creates a new CountryModifyFlagArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CountryModifyFlagArg instance
         */
        public static create(properties?: pb.ICountryModifyFlagArg): pb.CountryModifyFlagArg;

        /**
         * Encodes the specified CountryModifyFlagArg message. Does not implicitly {@link pb.CountryModifyFlagArg.verify|verify} messages.
         * @param message CountryModifyFlagArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICountryModifyFlagArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CountryModifyFlagArg message, length delimited. Does not implicitly {@link pb.CountryModifyFlagArg.verify|verify} messages.
         * @param message CountryModifyFlagArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICountryModifyFlagArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryModifyFlagArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryModifyFlagArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CountryModifyFlagArg;

        /**
         * Decodes a CountryModifyFlagArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CountryModifyFlagArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CountryModifyFlagArg;

        /**
         * Verifies a CountryModifyFlagArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateCountryNameArg. */
    interface IUpdateCountryNameArg {

        /** UpdateCountryNameArg CountryID */
        CountryID?: (number|null);

        /** UpdateCountryNameArg Name */
        Name?: (string|null);
    }

    /** Represents an UpdateCountryNameArg. */
    class UpdateCountryNameArg implements IUpdateCountryNameArg {

        /**
         * Constructs a new UpdateCountryNameArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateCountryNameArg);

        /** UpdateCountryNameArg CountryID. */
        public CountryID: number;

        /** UpdateCountryNameArg Name. */
        public Name: string;

        /**
         * Creates a new UpdateCountryNameArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateCountryNameArg instance
         */
        public static create(properties?: pb.IUpdateCountryNameArg): pb.UpdateCountryNameArg;

        /**
         * Encodes the specified UpdateCountryNameArg message. Does not implicitly {@link pb.UpdateCountryNameArg.verify|verify} messages.
         * @param message UpdateCountryNameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateCountryNameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateCountryNameArg message, length delimited. Does not implicitly {@link pb.UpdateCountryNameArg.verify|verify} messages.
         * @param message UpdateCountryNameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateCountryNameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateCountryNameArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateCountryNameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateCountryNameArg;

        /**
         * Decodes an UpdateCountryNameArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateCountryNameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateCountryNameArg;

        /**
         * Verifies an UpdateCountryNameArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateCountryFlagArg. */
    interface IUpdateCountryFlagArg {

        /** UpdateCountryFlagArg CountryID */
        CountryID?: (number|null);

        /** UpdateCountryFlagArg Flag */
        Flag?: (string|null);
    }

    /** Represents an UpdateCountryFlagArg. */
    class UpdateCountryFlagArg implements IUpdateCountryFlagArg {

        /**
         * Constructs a new UpdateCountryFlagArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateCountryFlagArg);

        /** UpdateCountryFlagArg CountryID. */
        public CountryID: number;

        /** UpdateCountryFlagArg Flag. */
        public Flag: string;

        /**
         * Creates a new UpdateCountryFlagArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateCountryFlagArg instance
         */
        public static create(properties?: pb.IUpdateCountryFlagArg): pb.UpdateCountryFlagArg;

        /**
         * Encodes the specified UpdateCountryFlagArg message. Does not implicitly {@link pb.UpdateCountryFlagArg.verify|verify} messages.
         * @param message UpdateCountryFlagArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateCountryFlagArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateCountryFlagArg message, length delimited. Does not implicitly {@link pb.UpdateCountryFlagArg.verify|verify} messages.
         * @param message UpdateCountryFlagArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateCountryFlagArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateCountryFlagArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateCountryFlagArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateCountryFlagArg;

        /**
         * Decodes an UpdateCountryFlagArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateCountryFlagArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateCountryFlagArg;

        /**
         * Verifies an UpdateCountryFlagArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CancelPublishMissionArg. */
    interface ICancelPublishMissionArg {

        /** CancelPublishMissionArg Type */
        Type?: (pb.CampaignMsType|null);

        /** CancelPublishMissionArg TransportTargetCity */
        TransportTargetCity?: (number|null);
    }

    /** Represents a CancelPublishMissionArg. */
    class CancelPublishMissionArg implements ICancelPublishMissionArg {

        /**
         * Constructs a new CancelPublishMissionArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICancelPublishMissionArg);

        /** CancelPublishMissionArg Type. */
        public Type: pb.CampaignMsType;

        /** CancelPublishMissionArg TransportTargetCity. */
        public TransportTargetCity: number;

        /**
         * Creates a new CancelPublishMissionArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CancelPublishMissionArg instance
         */
        public static create(properties?: pb.ICancelPublishMissionArg): pb.CancelPublishMissionArg;

        /**
         * Encodes the specified CancelPublishMissionArg message. Does not implicitly {@link pb.CancelPublishMissionArg.verify|verify} messages.
         * @param message CancelPublishMissionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICancelPublishMissionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CancelPublishMissionArg message, length delimited. Does not implicitly {@link pb.CancelPublishMissionArg.verify|verify} messages.
         * @param message CancelPublishMissionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICancelPublishMissionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CancelPublishMissionArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CancelPublishMissionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CancelPublishMissionArg;

        /**
         * Decodes a CancelPublishMissionArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CancelPublishMissionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CancelPublishMissionArg;

        /**
         * Verifies a CancelPublishMissionArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CancelPublishMissionReply. */
    interface ICancelPublishMissionReply {

        /** CancelPublishMissionReply Gold */
        Gold?: (number|null);

        /** CancelPublishMissionReply Forage */
        Forage?: (number|null);
    }

    /** Represents a CancelPublishMissionReply. */
    class CancelPublishMissionReply implements ICancelPublishMissionReply {

        /**
         * Constructs a new CancelPublishMissionReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICancelPublishMissionReply);

        /** CancelPublishMissionReply Gold. */
        public Gold: number;

        /** CancelPublishMissionReply Forage. */
        public Forage: number;

        /**
         * Creates a new CancelPublishMissionReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CancelPublishMissionReply instance
         */
        public static create(properties?: pb.ICancelPublishMissionReply): pb.CancelPublishMissionReply;

        /**
         * Encodes the specified CancelPublishMissionReply message. Does not implicitly {@link pb.CancelPublishMissionReply.verify|verify} messages.
         * @param message CancelPublishMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICancelPublishMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CancelPublishMissionReply message, length delimited. Does not implicitly {@link pb.CancelPublishMissionReply.verify|verify} messages.
         * @param message CancelPublishMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICancelPublishMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CancelPublishMissionReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CancelPublishMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CancelPublishMissionReply;

        /**
         * Decodes a CancelPublishMissionReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CancelPublishMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CancelPublishMissionReply;

        /**
         * Verifies a CancelPublishMissionReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignTeams. */
    interface ICampaignTeams {

        /** CampaignTeams Teams */
        Teams?: (pb.ITeamData[]|null);
    }

    /** Represents a CampaignTeams. */
    class CampaignTeams implements ICampaignTeams {

        /**
         * Constructs a new CampaignTeams.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignTeams);

        /** CampaignTeams Teams. */
        public Teams: pb.ITeamData[];

        /**
         * Creates a new CampaignTeams instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignTeams instance
         */
        public static create(properties?: pb.ICampaignTeams): pb.CampaignTeams;

        /**
         * Encodes the specified CampaignTeams message. Does not implicitly {@link pb.CampaignTeams.verify|verify} messages.
         * @param message CampaignTeams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignTeams, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignTeams message, length delimited. Does not implicitly {@link pb.CampaignTeams.verify|verify} messages.
         * @param message CampaignTeams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignTeams, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignTeams message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignTeams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignTeams;

        /**
         * Decodes a CampaignTeams message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignTeams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignTeams;

        /**
         * Verifies a CampaignTeams message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CountryDestoryed. */
    interface ICountryDestoryed {

        /** CountryDestoryed CountryID */
        CountryID?: (number|null);
    }

    /** Represents a CountryDestoryed. */
    class CountryDestoryed implements ICountryDestoryed {

        /**
         * Constructs a new CountryDestoryed.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICountryDestoryed);

        /** CountryDestoryed CountryID. */
        public CountryID: number;

        /**
         * Creates a new CountryDestoryed instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CountryDestoryed instance
         */
        public static create(properties?: pb.ICountryDestoryed): pb.CountryDestoryed;

        /**
         * Encodes the specified CountryDestoryed message. Does not implicitly {@link pb.CountryDestoryed.verify|verify} messages.
         * @param message CountryDestoryed message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICountryDestoryed, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CountryDestoryed message, length delimited. Does not implicitly {@link pb.CountryDestoryed.verify|verify} messages.
         * @param message CountryDestoryed message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICountryDestoryed, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryDestoryed message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryDestoryed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CountryDestoryed;

        /**
         * Decodes a CountryDestoryed message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CountryDestoryed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CountryDestoryed;

        /**
         * Verifies a CountryDestoryed message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CapitalInjectionRecord. */
    interface ICapitalInjectionRecord {

        /** CapitalInjectionRecord Player */
        Player?: (pb.ICampaignPlayer|null);

        /** CapitalInjectionRecord Gold */
        Gold?: (number|null);

        /** CapitalInjectionRecord Time */
        Time?: (number|null);
    }

    /** Represents a CapitalInjectionRecord. */
    class CapitalInjectionRecord implements ICapitalInjectionRecord {

        /**
         * Constructs a new CapitalInjectionRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICapitalInjectionRecord);

        /** CapitalInjectionRecord Player. */
        public Player?: (pb.ICampaignPlayer|null);

        /** CapitalInjectionRecord Gold. */
        public Gold: number;

        /** CapitalInjectionRecord Time. */
        public Time: number;

        /**
         * Creates a new CapitalInjectionRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CapitalInjectionRecord instance
         */
        public static create(properties?: pb.ICapitalInjectionRecord): pb.CapitalInjectionRecord;

        /**
         * Encodes the specified CapitalInjectionRecord message. Does not implicitly {@link pb.CapitalInjectionRecord.verify|verify} messages.
         * @param message CapitalInjectionRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICapitalInjectionRecord, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CapitalInjectionRecord message, length delimited. Does not implicitly {@link pb.CapitalInjectionRecord.verify|verify} messages.
         * @param message CapitalInjectionRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICapitalInjectionRecord, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CapitalInjectionRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CapitalInjectionRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CapitalInjectionRecord;

        /**
         * Decodes a CapitalInjectionRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CapitalInjectionRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CapitalInjectionRecord;

        /**
         * Verifies a CapitalInjectionRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CityCapitalInjectionHistory. */
    interface ICityCapitalInjectionHistory {

        /** CityCapitalInjectionHistory Records */
        Records?: (pb.ICapitalInjectionRecord[]|null);
    }

    /** Represents a CityCapitalInjectionHistory. */
    class CityCapitalInjectionHistory implements ICityCapitalInjectionHistory {

        /**
         * Constructs a new CityCapitalInjectionHistory.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICityCapitalInjectionHistory);

        /** CityCapitalInjectionHistory Records. */
        public Records: pb.ICapitalInjectionRecord[];

        /**
         * Creates a new CityCapitalInjectionHistory instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CityCapitalInjectionHistory instance
         */
        public static create(properties?: pb.ICityCapitalInjectionHistory): pb.CityCapitalInjectionHistory;

        /**
         * Encodes the specified CityCapitalInjectionHistory message. Does not implicitly {@link pb.CityCapitalInjectionHistory.verify|verify} messages.
         * @param message CityCapitalInjectionHistory message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICityCapitalInjectionHistory, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CityCapitalInjectionHistory message, length delimited. Does not implicitly {@link pb.CityCapitalInjectionHistory.verify|verify} messages.
         * @param message CityCapitalInjectionHistory message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICityCapitalInjectionHistory, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityCapitalInjectionHistory message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityCapitalInjectionHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CityCapitalInjectionHistory;

        /**
         * Decodes a CityCapitalInjectionHistory message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CityCapitalInjectionHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CityCapitalInjectionHistory;

        /**
         * Verifies a CityCapitalInjectionHistory message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateContributionArg. */
    interface IUpdateContributionArg {

        /** UpdateContributionArg Contribution */
        Contribution?: (number|null);

        /** UpdateContributionArg MaxContribution */
        MaxContribution?: (number|null);
    }

    /** Represents an UpdateContributionArg. */
    class UpdateContributionArg implements IUpdateContributionArg {

        /**
         * Constructs a new UpdateContributionArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateContributionArg);

        /** UpdateContributionArg Contribution. */
        public Contribution: number;

        /** UpdateContributionArg MaxContribution. */
        public MaxContribution: number;

        /**
         * Creates a new UpdateContributionArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateContributionArg instance
         */
        public static create(properties?: pb.IUpdateContributionArg): pb.UpdateContributionArg;

        /**
         * Encodes the specified UpdateContributionArg message. Does not implicitly {@link pb.UpdateContributionArg.verify|verify} messages.
         * @param message UpdateContributionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateContributionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateContributionArg message, length delimited. Does not implicitly {@link pb.UpdateContributionArg.verify|verify} messages.
         * @param message UpdateContributionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateContributionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateContributionArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateContributionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateContributionArg;

        /**
         * Decodes an UpdateContributionArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateContributionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateContributionArg;

        /**
         * Verifies an UpdateContributionArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CityNotice. */
    interface ICityNotice {

        /** CityNotice Notice */
        Notice?: (string|null);
    }

    /** Represents a CityNotice. */
    class CityNotice implements ICityNotice {

        /**
         * Constructs a new CityNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICityNotice);

        /** CityNotice Notice. */
        public Notice: string;

        /**
         * Creates a new CityNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CityNotice instance
         */
        public static create(properties?: pb.ICityNotice): pb.CityNotice;

        /**
         * Encodes the specified CityNotice message. Does not implicitly {@link pb.CityNotice.verify|verify} messages.
         * @param message CityNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICityNotice, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CityNotice message, length delimited. Does not implicitly {@link pb.CityNotice.verify|verify} messages.
         * @param message CityNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICityNotice, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CityNotice;

        /**
         * Decodes a CityNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CityNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CityNotice;

        /**
         * Verifies a CityNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchCityCapitalInjectionArg. */
    interface IFetchCityCapitalInjectionArg {

        /** FetchCityCapitalInjectionArg CityID */
        CityID?: (number|null);

        /** FetchCityCapitalInjectionArg Page */
        Page?: (number|null);
    }

    /** Represents a FetchCityCapitalInjectionArg. */
    class FetchCityCapitalInjectionArg implements IFetchCityCapitalInjectionArg {

        /**
         * Constructs a new FetchCityCapitalInjectionArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchCityCapitalInjectionArg);

        /** FetchCityCapitalInjectionArg CityID. */
        public CityID: number;

        /** FetchCityCapitalInjectionArg Page. */
        public Page: number;

        /**
         * Creates a new FetchCityCapitalInjectionArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchCityCapitalInjectionArg instance
         */
        public static create(properties?: pb.IFetchCityCapitalInjectionArg): pb.FetchCityCapitalInjectionArg;

        /**
         * Encodes the specified FetchCityCapitalInjectionArg message. Does not implicitly {@link pb.FetchCityCapitalInjectionArg.verify|verify} messages.
         * @param message FetchCityCapitalInjectionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchCityCapitalInjectionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchCityCapitalInjectionArg message, length delimited. Does not implicitly {@link pb.FetchCityCapitalInjectionArg.verify|verify} messages.
         * @param message FetchCityCapitalInjectionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchCityCapitalInjectionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchCityCapitalInjectionArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchCityCapitalInjectionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchCityCapitalInjectionArg;

        /**
         * Decodes a FetchCityCapitalInjectionArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchCityCapitalInjectionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchCityCapitalInjectionArg;

        /**
         * Verifies a FetchCityCapitalInjectionArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignSimplePlayer. */
    interface ICampaignSimplePlayer {

        /** CampaignSimplePlayer Uid */
        Uid?: (number|Long|null);

        /** CampaignSimplePlayer Name */
        Name?: (string|null);

        /** CampaignSimplePlayer HeadImg */
        HeadImg?: (string|null);

        /** CampaignSimplePlayer HeadFrame */
        HeadFrame?: (string|null);

        /** CampaignSimplePlayer PvpScore */
        PvpScore?: (number|null);
    }

    /** Represents a CampaignSimplePlayer. */
    class CampaignSimplePlayer implements ICampaignSimplePlayer {

        /**
         * Constructs a new CampaignSimplePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignSimplePlayer);

        /** CampaignSimplePlayer Uid. */
        public Uid: (number|Long);

        /** CampaignSimplePlayer Name. */
        public Name: string;

        /** CampaignSimplePlayer HeadImg. */
        public HeadImg: string;

        /** CampaignSimplePlayer HeadFrame. */
        public HeadFrame: string;

        /** CampaignSimplePlayer PvpScore. */
        public PvpScore: number;

        /**
         * Creates a new CampaignSimplePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignSimplePlayer instance
         */
        public static create(properties?: pb.ICampaignSimplePlayer): pb.CampaignSimplePlayer;

        /**
         * Encodes the specified CampaignSimplePlayer message. Does not implicitly {@link pb.CampaignSimplePlayer.verify|verify} messages.
         * @param message CampaignSimplePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignSimplePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignSimplePlayer message, length delimited. Does not implicitly {@link pb.CampaignSimplePlayer.verify|verify} messages.
         * @param message CampaignSimplePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignSimplePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignSimplePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignSimplePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignSimplePlayer;

        /**
         * Decodes a CampaignSimplePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignSimplePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignSimplePlayer;

        /**
         * Verifies a CampaignSimplePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SyncCityPlayerAmount. */
    interface ISyncCityPlayerAmount {

        /** SyncCityPlayerAmount CityID */
        CityID?: (number|null);

        /** SyncCityPlayerAmount Amount */
        Amount?: (number|null);
    }

    /** Represents a SyncCityPlayerAmount. */
    class SyncCityPlayerAmount implements ISyncCityPlayerAmount {

        /**
         * Constructs a new SyncCityPlayerAmount.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISyncCityPlayerAmount);

        /** SyncCityPlayerAmount CityID. */
        public CityID: number;

        /** SyncCityPlayerAmount Amount. */
        public Amount: number;

        /**
         * Creates a new SyncCityPlayerAmount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SyncCityPlayerAmount instance
         */
        public static create(properties?: pb.ISyncCityPlayerAmount): pb.SyncCityPlayerAmount;

        /**
         * Encodes the specified SyncCityPlayerAmount message. Does not implicitly {@link pb.SyncCityPlayerAmount.verify|verify} messages.
         * @param message SyncCityPlayerAmount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISyncCityPlayerAmount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SyncCityPlayerAmount message, length delimited. Does not implicitly {@link pb.SyncCityPlayerAmount.verify|verify} messages.
         * @param message SyncCityPlayerAmount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISyncCityPlayerAmount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SyncCityPlayerAmount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SyncCityPlayerAmount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SyncCityPlayerAmount;

        /**
         * Decodes a SyncCityPlayerAmount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SyncCityPlayerAmount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SyncCityPlayerAmount;

        /**
         * Verifies a SyncCityPlayerAmount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignSupportCard. */
    interface ICampaignSupportCard {

        /** CampaignSupportCard CardIDs */
        CardIDs?: (number[]|null);
    }

    /** Represents a CampaignSupportCard. */
    class CampaignSupportCard implements ICampaignSupportCard {

        /**
         * Constructs a new CampaignSupportCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignSupportCard);

        /** CampaignSupportCard CardIDs. */
        public CardIDs: number[];

        /**
         * Creates a new CampaignSupportCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignSupportCard instance
         */
        public static create(properties?: pb.ICampaignSupportCard): pb.CampaignSupportCard;

        /**
         * Encodes the specified CampaignSupportCard message. Does not implicitly {@link pb.CampaignSupportCard.verify|verify} messages.
         * @param message CampaignSupportCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignSupportCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignSupportCard message, length delimited. Does not implicitly {@link pb.CampaignSupportCard.verify|verify} messages.
         * @param message CampaignSupportCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignSupportCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignSupportCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignSupportCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignSupportCard;

        /**
         * Decodes a CampaignSupportCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignSupportCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignSupportCard;

        /**
         * Verifies a CampaignSupportCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SurrenderCityArg. */
    interface ISurrenderCityArg {

        /** SurrenderCityArg CountryID */
        CountryID?: (number|null);
    }

    /** Represents a SurrenderCityArg. */
    class SurrenderCityArg implements ISurrenderCityArg {

        /**
         * Constructs a new SurrenderCityArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISurrenderCityArg);

        /** SurrenderCityArg CountryID. */
        public CountryID: number;

        /**
         * Creates a new SurrenderCityArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SurrenderCityArg instance
         */
        public static create(properties?: pb.ISurrenderCityArg): pb.SurrenderCityArg;

        /**
         * Encodes the specified SurrenderCityArg message. Does not implicitly {@link pb.SurrenderCityArg.verify|verify} messages.
         * @param message SurrenderCityArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISurrenderCityArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SurrenderCityArg message, length delimited. Does not implicitly {@link pb.SurrenderCityArg.verify|verify} messages.
         * @param message SurrenderCityArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISurrenderCityArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SurrenderCityArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SurrenderCityArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SurrenderCityArg;

        /**
         * Decodes a SurrenderCityArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SurrenderCityArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SurrenderCityArg;

        /**
         * Verifies a SurrenderCityArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateCityCountryArg. */
    interface IUpdateCityCountryArg {

        /** UpdateCityCountryArg CityID */
        CityID?: (number|null);

        /** UpdateCityCountryArg CountryID */
        CountryID?: (number|null);
    }

    /** Represents an UpdateCityCountryArg. */
    class UpdateCityCountryArg implements IUpdateCityCountryArg {

        /**
         * Constructs a new UpdateCityCountryArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateCityCountryArg);

        /** UpdateCityCountryArg CityID. */
        public CityID: number;

        /** UpdateCityCountryArg CountryID. */
        public CountryID: number;

        /**
         * Creates a new UpdateCityCountryArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateCityCountryArg instance
         */
        public static create(properties?: pb.IUpdateCityCountryArg): pb.UpdateCityCountryArg;

        /**
         * Encodes the specified UpdateCityCountryArg message. Does not implicitly {@link pb.UpdateCityCountryArg.verify|verify} messages.
         * @param message UpdateCityCountryArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateCityCountryArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateCityCountryArg message, length delimited. Does not implicitly {@link pb.UpdateCityCountryArg.verify|verify} messages.
         * @param message UpdateCityCountryArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateCityCountryArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateCityCountryArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateCityCountryArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateCityCountryArg;

        /**
         * Decodes an UpdateCityCountryArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateCityCountryArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateCityCountryArg;

        /**
         * Verifies an UpdateCityCountryArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CitysDefPlayerAmount. */
    interface ICitysDefPlayerAmount {

        /** CitysDefPlayerAmount Amounts */
        Amounts?: (pb.ISyncCityPlayerAmount[]|null);
    }

    /** Represents a CitysDefPlayerAmount. */
    class CitysDefPlayerAmount implements ICitysDefPlayerAmount {

        /**
         * Constructs a new CitysDefPlayerAmount.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICitysDefPlayerAmount);

        /** CitysDefPlayerAmount Amounts. */
        public Amounts: pb.ISyncCityPlayerAmount[];

        /**
         * Creates a new CitysDefPlayerAmount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CitysDefPlayerAmount instance
         */
        public static create(properties?: pb.ICitysDefPlayerAmount): pb.CitysDefPlayerAmount;

        /**
         * Encodes the specified CitysDefPlayerAmount message. Does not implicitly {@link pb.CitysDefPlayerAmount.verify|verify} messages.
         * @param message CitysDefPlayerAmount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICitysDefPlayerAmount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CitysDefPlayerAmount message, length delimited. Does not implicitly {@link pb.CitysDefPlayerAmount.verify|verify} messages.
         * @param message CitysDefPlayerAmount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICitysDefPlayerAmount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CitysDefPlayerAmount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CitysDefPlayerAmount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CitysDefPlayerAmount;

        /**
         * Decodes a CitysDefPlayerAmount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CitysDefPlayerAmount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CitysDefPlayerAmount;

        /**
         * Verifies a CitysDefPlayerAmount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignBuyGoodsArg. */
    interface ICampaignBuyGoodsArg {

        /** CampaignBuyGoodsArg Type */
        Type?: (string|null);

        /** CampaignBuyGoodsArg GoodsID */
        GoodsID?: (number|null);
    }

    /** Represents a CampaignBuyGoodsArg. */
    class CampaignBuyGoodsArg implements ICampaignBuyGoodsArg {

        /**
         * Constructs a new CampaignBuyGoodsArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignBuyGoodsArg);

        /** CampaignBuyGoodsArg Type. */
        public Type: string;

        /** CampaignBuyGoodsArg GoodsID. */
        public GoodsID: number;

        /**
         * Creates a new CampaignBuyGoodsArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignBuyGoodsArg instance
         */
        public static create(properties?: pb.ICampaignBuyGoodsArg): pb.CampaignBuyGoodsArg;

        /**
         * Encodes the specified CampaignBuyGoodsArg message. Does not implicitly {@link pb.CampaignBuyGoodsArg.verify|verify} messages.
         * @param message CampaignBuyGoodsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignBuyGoodsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignBuyGoodsArg message, length delimited. Does not implicitly {@link pb.CampaignBuyGoodsArg.verify|verify} messages.
         * @param message CampaignBuyGoodsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignBuyGoodsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignBuyGoodsArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignBuyGoodsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignBuyGoodsArg;

        /**
         * Decodes a CampaignBuyGoodsArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignBuyGoodsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignBuyGoodsArg;

        /**
         * Verifies a CampaignBuyGoodsArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GSettleCityArg. */
    interface IGSettleCityArg {

        /** GSettleCityArg CityID */
        CityID?: (number|null);

        /** GSettleCityArg Player */
        Player?: (pb.ICampaignSimplePlayer|null);
    }

    /** Represents a GSettleCityArg. */
    class GSettleCityArg implements IGSettleCityArg {

        /**
         * Constructs a new GSettleCityArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGSettleCityArg);

        /** GSettleCityArg CityID. */
        public CityID: number;

        /** GSettleCityArg Player. */
        public Player?: (pb.ICampaignSimplePlayer|null);

        /**
         * Creates a new GSettleCityArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GSettleCityArg instance
         */
        public static create(properties?: pb.IGSettleCityArg): pb.GSettleCityArg;

        /**
         * Encodes the specified GSettleCityArg message. Does not implicitly {@link pb.GSettleCityArg.verify|verify} messages.
         * @param message GSettleCityArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGSettleCityArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GSettleCityArg message, length delimited. Does not implicitly {@link pb.GSettleCityArg.verify|verify} messages.
         * @param message GSettleCityArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGSettleCityArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GSettleCityArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GSettleCityArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GSettleCityArg;

        /**
         * Decodes a GSettleCityArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GSettleCityArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GSettleCityArg;

        /**
         * Verifies a GSettleCityArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GCancelCampaignMissionReply. */
    interface IGCancelCampaignMissionReply {

        /** GCancelCampaignMissionReply CardIDs */
        CardIDs?: (number[]|null);
    }

    /** Represents a GCancelCampaignMissionReply. */
    class GCancelCampaignMissionReply implements IGCancelCampaignMissionReply {

        /**
         * Constructs a new GCancelCampaignMissionReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGCancelCampaignMissionReply);

        /** GCancelCampaignMissionReply CardIDs. */
        public CardIDs: number[];

        /**
         * Creates a new GCancelCampaignMissionReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GCancelCampaignMissionReply instance
         */
        public static create(properties?: pb.IGCancelCampaignMissionReply): pb.GCancelCampaignMissionReply;

        /**
         * Encodes the specified GCancelCampaignMissionReply message. Does not implicitly {@link pb.GCancelCampaignMissionReply.verify|verify} messages.
         * @param message GCancelCampaignMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGCancelCampaignMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GCancelCampaignMissionReply message, length delimited. Does not implicitly {@link pb.GCancelCampaignMissionReply.verify|verify} messages.
         * @param message GCancelCampaignMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGCancelCampaignMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GCancelCampaignMissionReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GCancelCampaignMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GCancelCampaignMissionReply;

        /**
         * Decodes a GCancelCampaignMissionReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GCancelCampaignMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GCancelCampaignMissionReply;

        /**
         * Verifies a GCancelCampaignMissionReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GGetCampaignMissionRewardReply. */
    interface IGGetCampaignMissionRewardReply {

        /** GGetCampaignMissionRewardReply Gold */
        Gold?: (number|null);

        /** GGetCampaignMissionRewardReply CardIDs */
        CardIDs?: (number[]|null);
    }

    /** Represents a GGetCampaignMissionRewardReply. */
    class GGetCampaignMissionRewardReply implements IGGetCampaignMissionRewardReply {

        /**
         * Constructs a new GGetCampaignMissionRewardReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGGetCampaignMissionRewardReply);

        /** GGetCampaignMissionRewardReply Gold. */
        public Gold: number;

        /** GGetCampaignMissionRewardReply CardIDs. */
        public CardIDs: number[];

        /**
         * Creates a new GGetCampaignMissionRewardReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GGetCampaignMissionRewardReply instance
         */
        public static create(properties?: pb.IGGetCampaignMissionRewardReply): pb.GGetCampaignMissionRewardReply;

        /**
         * Encodes the specified GGetCampaignMissionRewardReply message. Does not implicitly {@link pb.GGetCampaignMissionRewardReply.verify|verify} messages.
         * @param message GGetCampaignMissionRewardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGGetCampaignMissionRewardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GGetCampaignMissionRewardReply message, length delimited. Does not implicitly {@link pb.GGetCampaignMissionRewardReply.verify|verify} messages.
         * @param message GGetCampaignMissionRewardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGGetCampaignMissionRewardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GGetCampaignMissionRewardReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GGetCampaignMissionRewardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GGetCampaignMissionRewardReply;

        /**
         * Decodes a GGetCampaignMissionRewardReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GGetCampaignMissionRewardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GGetCampaignMissionRewardReply;

        /**
         * Verifies a GGetCampaignMissionRewardReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetMyCountryReply. */
    interface IGetMyCountryReply {

        /** GetMyCountryReply CountryID */
        CountryID?: (number|null);
    }

    /** Represents a GetMyCountryReply. */
    class GetMyCountryReply implements IGetMyCountryReply {

        /**
         * Constructs a new GetMyCountryReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetMyCountryReply);

        /** GetMyCountryReply CountryID. */
        public CountryID: number;

        /**
         * Creates a new GetMyCountryReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetMyCountryReply instance
         */
        public static create(properties?: pb.IGetMyCountryReply): pb.GetMyCountryReply;

        /**
         * Encodes the specified GetMyCountryReply message. Does not implicitly {@link pb.GetMyCountryReply.verify|verify} messages.
         * @param message GetMyCountryReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetMyCountryReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetMyCountryReply message, length delimited. Does not implicitly {@link pb.GetMyCountryReply.verify|verify} messages.
         * @param message GetMyCountryReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetMyCountryReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetMyCountryReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetMyCountryReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetMyCountryReply;

        /**
         * Decodes a GetMyCountryReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetMyCountryReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetMyCountryReply;

        /**
         * Verifies a GetMyCountryReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MoveCityArg. */
    interface IMoveCityArg {

        /** MoveCityArg CityID */
        CityID?: (number|null);

        /** MoveCityArg Gold */
        Gold?: (number|null);
    }

    /** Represents a MoveCityArg. */
    class MoveCityArg implements IMoveCityArg {

        /**
         * Constructs a new MoveCityArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMoveCityArg);

        /** MoveCityArg CityID. */
        public CityID: number;

        /** MoveCityArg Gold. */
        public Gold: number;

        /**
         * Creates a new MoveCityArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MoveCityArg instance
         */
        public static create(properties?: pb.IMoveCityArg): pb.MoveCityArg;

        /**
         * Encodes the specified MoveCityArg message. Does not implicitly {@link pb.MoveCityArg.verify|verify} messages.
         * @param message MoveCityArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMoveCityArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MoveCityArg message, length delimited. Does not implicitly {@link pb.MoveCityArg.verify|verify} messages.
         * @param message MoveCityArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMoveCityArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MoveCityArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MoveCityArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MoveCityArg;

        /**
         * Decodes a MoveCityArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MoveCityArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MoveCityArg;

        /**
         * Verifies a MoveCityArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MoveCityRelpy. */
    interface IMoveCityRelpy {

        /** MoveCityRelpy NeedGold */
        NeedGold?: (boolean|null);
    }

    /** Represents a MoveCityRelpy. */
    class MoveCityRelpy implements IMoveCityRelpy {

        /**
         * Constructs a new MoveCityRelpy.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMoveCityRelpy);

        /** MoveCityRelpy NeedGold. */
        public NeedGold: boolean;

        /**
         * Creates a new MoveCityRelpy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MoveCityRelpy instance
         */
        public static create(properties?: pb.IMoveCityRelpy): pb.MoveCityRelpy;

        /**
         * Encodes the specified MoveCityRelpy message. Does not implicitly {@link pb.MoveCityRelpy.verify|verify} messages.
         * @param message MoveCityRelpy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMoveCityRelpy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MoveCityRelpy message, length delimited. Does not implicitly {@link pb.MoveCityRelpy.verify|verify} messages.
         * @param message MoveCityRelpy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMoveCityRelpy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MoveCityRelpy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MoveCityRelpy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MoveCityRelpy;

        /**
         * Decodes a MoveCityRelpy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MoveCityRelpy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MoveCityRelpy;

        /**
         * Verifies a MoveCityRelpy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CampaignBattleEnd. */
    interface ICampaignBattleEnd {

        /** CampaignBattleEnd IsWin */
        IsWin?: (boolean|null);
    }

    /** Represents a CampaignBattleEnd. */
    class CampaignBattleEnd implements ICampaignBattleEnd {

        /**
         * Constructs a new CampaignBattleEnd.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICampaignBattleEnd);

        /** CampaignBattleEnd IsWin. */
        public IsWin: boolean;

        /**
         * Creates a new CampaignBattleEnd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CampaignBattleEnd instance
         */
        public static create(properties?: pb.ICampaignBattleEnd): pb.CampaignBattleEnd;

        /**
         * Encodes the specified CampaignBattleEnd message. Does not implicitly {@link pb.CampaignBattleEnd.verify|verify} messages.
         * @param message CampaignBattleEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICampaignBattleEnd, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CampaignBattleEnd message, length delimited. Does not implicitly {@link pb.CampaignBattleEnd.verify|verify} messages.
         * @param message CampaignBattleEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICampaignBattleEnd, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CampaignBattleEnd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CampaignBattleEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CampaignBattleEnd;

        /**
         * Decodes a CampaignBattleEnd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CampaignBattleEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CampaignBattleEnd;

        /**
         * Verifies a CampaignBattleEnd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GCampaignPlayerInfo. */
    interface IGCampaignPlayerInfo {

        /** GCampaignPlayerInfo CountryID */
        CountryID?: (number|null);

        /** GCampaignPlayerInfo CityID */
        CityID?: (number|null);

        /** GCampaignPlayerInfo CityJob */
        CityJob?: (pb.CampaignJob|null);

        /** GCampaignPlayerInfo CountryJob */
        CountryJob?: (pb.CampaignJob|null);

        /** GCampaignPlayerInfo CountryName */
        CountryName?: (string|null);

        /** GCampaignPlayerInfo Notices */
        Notices?: (pb.ICampaignNotice[]|null);
    }

    /** Represents a GCampaignPlayerInfo. */
    class GCampaignPlayerInfo implements IGCampaignPlayerInfo {

        /**
         * Constructs a new GCampaignPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGCampaignPlayerInfo);

        /** GCampaignPlayerInfo CountryID. */
        public CountryID: number;

        /** GCampaignPlayerInfo CityID. */
        public CityID: number;

        /** GCampaignPlayerInfo CityJob. */
        public CityJob: pb.CampaignJob;

        /** GCampaignPlayerInfo CountryJob. */
        public CountryJob: pb.CampaignJob;

        /** GCampaignPlayerInfo CountryName. */
        public CountryName: string;

        /** GCampaignPlayerInfo Notices. */
        public Notices: pb.ICampaignNotice[];

        /**
         * Creates a new GCampaignPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GCampaignPlayerInfo instance
         */
        public static create(properties?: pb.IGCampaignPlayerInfo): pb.GCampaignPlayerInfo;

        /**
         * Encodes the specified GCampaignPlayerInfo message. Does not implicitly {@link pb.GCampaignPlayerInfo.verify|verify} messages.
         * @param message GCampaignPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGCampaignPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GCampaignPlayerInfo message, length delimited. Does not implicitly {@link pb.GCampaignPlayerInfo.verify|verify} messages.
         * @param message GCampaignPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGCampaignPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GCampaignPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GCampaignPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GCampaignPlayerInfo;

        /**
         * Decodes a GCampaignPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GCampaignPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GCampaignPlayerInfo;

        /**
         * Verifies a GCampaignPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GCampaignInfo. */
    interface IGCampaignInfo {

        /** GCampaignInfo Version */
        Version?: (number|null);

        /** GCampaignInfo CampaignState */
        CampaignState?: (number|null);
    }

    /** Represents a GCampaignInfo. */
    class GCampaignInfo implements IGCampaignInfo {

        /**
         * Constructs a new GCampaignInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGCampaignInfo);

        /** GCampaignInfo Version. */
        public Version: number;

        /** GCampaignInfo CampaignState. */
        public CampaignState: number;

        /**
         * Creates a new GCampaignInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GCampaignInfo instance
         */
        public static create(properties?: pb.IGCampaignInfo): pb.GCampaignInfo;

        /**
         * Encodes the specified GCampaignInfo message. Does not implicitly {@link pb.GCampaignInfo.verify|verify} messages.
         * @param message GCampaignInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGCampaignInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GCampaignInfo message, length delimited. Does not implicitly {@link pb.GCampaignInfo.verify|verify} messages.
         * @param message GCampaignInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGCampaignInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GCampaignInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GCampaignInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GCampaignInfo;

        /**
         * Decodes a GCampaignInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GCampaignInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GCampaignInfo;

        /**
         * Verifies a GCampaignInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ModifyContributionArg. */
    interface IModifyContributionArg {

        /** ModifyContributionArg Uid */
        Uid?: (number|Long|null);

        /** ModifyContributionArg Amount */
        Amount?: (number|null);
    }

    /** Represents a ModifyContributionArg. */
    class ModifyContributionArg implements IModifyContributionArg {

        /**
         * Constructs a new ModifyContributionArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IModifyContributionArg);

        /** ModifyContributionArg Uid. */
        public Uid: (number|Long);

        /** ModifyContributionArg Amount. */
        public Amount: number;

        /**
         * Creates a new ModifyContributionArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ModifyContributionArg instance
         */
        public static create(properties?: pb.IModifyContributionArg): pb.ModifyContributionArg;

        /**
         * Encodes the specified ModifyContributionArg message. Does not implicitly {@link pb.ModifyContributionArg.verify|verify} messages.
         * @param message ModifyContributionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IModifyContributionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ModifyContributionArg message, length delimited. Does not implicitly {@link pb.ModifyContributionArg.verify|verify} messages.
         * @param message ModifyContributionArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IModifyContributionArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ModifyContributionArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ModifyContributionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ModifyContributionArg;

        /**
         * Decodes a ModifyContributionArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ModifyContributionArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ModifyContributionArg;

        /**
         * Verifies a ModifyContributionArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GAcceptCampaignMissionReply. */
    interface IGAcceptCampaignMissionReply {

        /** GAcceptCampaignMissionReply AcceptReply */
        AcceptReply?: (pb.IAcceptCampaignMissionReply|null);

        /** GAcceptCampaignMissionReply RewardGold */
        RewardGold?: (number|null);
    }

    /** Represents a GAcceptCampaignMissionReply. */
    class GAcceptCampaignMissionReply implements IGAcceptCampaignMissionReply {

        /**
         * Constructs a new GAcceptCampaignMissionReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGAcceptCampaignMissionReply);

        /** GAcceptCampaignMissionReply AcceptReply. */
        public AcceptReply?: (pb.IAcceptCampaignMissionReply|null);

        /** GAcceptCampaignMissionReply RewardGold. */
        public RewardGold: number;

        /**
         * Creates a new GAcceptCampaignMissionReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GAcceptCampaignMissionReply instance
         */
        public static create(properties?: pb.IGAcceptCampaignMissionReply): pb.GAcceptCampaignMissionReply;

        /**
         * Encodes the specified GAcceptCampaignMissionReply message. Does not implicitly {@link pb.GAcceptCampaignMissionReply.verify|verify} messages.
         * @param message GAcceptCampaignMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGAcceptCampaignMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GAcceptCampaignMissionReply message, length delimited. Does not implicitly {@link pb.GAcceptCampaignMissionReply.verify|verify} messages.
         * @param message GAcceptCampaignMissionReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGAcceptCampaignMissionReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GAcceptCampaignMissionReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GAcceptCampaignMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GAcceptCampaignMissionReply;

        /**
         * Decodes a GAcceptCampaignMissionReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GAcceptCampaignMissionReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GAcceptCampaignMissionReply;

        /**
         * Verifies a GAcceptCampaignMissionReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GmCommand. */
    interface IGmCommand {

        /** GmCommand Command */
        Command?: (string|null);
    }

    /** Represents a GmCommand. */
    class GmCommand implements IGmCommand {

        /**
         * Constructs a new GmCommand.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGmCommand);

        /** GmCommand Command. */
        public Command: string;

        /**
         * Creates a new GmCommand instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GmCommand instance
         */
        public static create(properties?: pb.IGmCommand): pb.GmCommand;

        /**
         * Encodes the specified GmCommand message. Does not implicitly {@link pb.GmCommand.verify|verify} messages.
         * @param message GmCommand message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGmCommand, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GmCommand message, length delimited. Does not implicitly {@link pb.GmCommand.verify|verify} messages.
         * @param message GmCommand message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGmCommand, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GmCommand message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GmCommand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GmCommand;

        /**
         * Decodes a GmCommand message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GmCommand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GmCommand;

        /**
         * Verifies a GmCommand message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an ExchangeCodeArg. */
    interface IExchangeCodeArg {

        /** ExchangeCodeArg Code */
        Code?: (string|null);
    }

    /** Represents an ExchangeCodeArg. */
    class ExchangeCodeArg implements IExchangeCodeArg {

        /**
         * Constructs a new ExchangeCodeArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IExchangeCodeArg);

        /** ExchangeCodeArg Code. */
        public Code: string;

        /**
         * Creates a new ExchangeCodeArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExchangeCodeArg instance
         */
        public static create(properties?: pb.IExchangeCodeArg): pb.ExchangeCodeArg;

        /**
         * Encodes the specified ExchangeCodeArg message. Does not implicitly {@link pb.ExchangeCodeArg.verify|verify} messages.
         * @param message ExchangeCodeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IExchangeCodeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ExchangeCodeArg message, length delimited. Does not implicitly {@link pb.ExchangeCodeArg.verify|verify} messages.
         * @param message ExchangeCodeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IExchangeCodeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ExchangeCodeArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExchangeCodeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ExchangeCodeArg;

        /**
         * Decodes an ExchangeCodeArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExchangeCodeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ExchangeCodeArg;

        /**
         * Verifies an ExchangeCodeArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an ExchangeCodeReward. */
    interface IExchangeCodeReward {

        /** ExchangeCodeReward TreasureID */
        TreasureID?: (string|null);

        /** ExchangeCodeReward Reward */
        Reward?: (pb.IOpenTreasureReply|null);
    }

    /** Represents an ExchangeCodeReward. */
    class ExchangeCodeReward implements IExchangeCodeReward {

        /**
         * Constructs a new ExchangeCodeReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IExchangeCodeReward);

        /** ExchangeCodeReward TreasureID. */
        public TreasureID: string;

        /** ExchangeCodeReward Reward. */
        public Reward?: (pb.IOpenTreasureReply|null);

        /**
         * Creates a new ExchangeCodeReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExchangeCodeReward instance
         */
        public static create(properties?: pb.IExchangeCodeReward): pb.ExchangeCodeReward;

        /**
         * Encodes the specified ExchangeCodeReward message. Does not implicitly {@link pb.ExchangeCodeReward.verify|verify} messages.
         * @param message ExchangeCodeReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IExchangeCodeReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ExchangeCodeReward message, length delimited. Does not implicitly {@link pb.ExchangeCodeReward.verify|verify} messages.
         * @param message ExchangeCodeReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IExchangeCodeReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ExchangeCodeReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExchangeCodeReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ExchangeCodeReward;

        /**
         * Decodes an ExchangeCodeReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExchangeCodeReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ExchangeCodeReward;

        /**
         * Verifies an ExchangeCodeReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an Equip. */
    interface IEquip {

        /** Equip EquipID */
        EquipID?: (string|null);

        /** Equip OwnerCardID */
        OwnerCardID?: (number|null);
    }

    /** Represents an Equip. */
    class Equip implements IEquip {

        /**
         * Constructs a new Equip.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEquip);

        /** Equip EquipID. */
        public EquipID: string;

        /** Equip OwnerCardID. */
        public OwnerCardID: number;

        /**
         * Creates a new Equip instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Equip instance
         */
        public static create(properties?: pb.IEquip): pb.Equip;

        /**
         * Encodes the specified Equip message. Does not implicitly {@link pb.Equip.verify|verify} messages.
         * @param message Equip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEquip, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Equip message, length delimited. Does not implicitly {@link pb.Equip.verify|verify} messages.
         * @param message Equip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEquip, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an Equip message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Equip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Equip;

        /**
         * Decodes an Equip message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Equip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Equip;

        /**
         * Verifies an Equip message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an EquipData. */
    interface IEquipData {

        /** EquipData Equips */
        Equips?: (pb.IEquip[]|null);
    }

    /** Represents an EquipData. */
    class EquipData implements IEquipData {

        /**
         * Constructs a new EquipData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEquipData);

        /** EquipData Equips. */
        public Equips: pb.IEquip[];

        /**
         * Creates a new EquipData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EquipData instance
         */
        public static create(properties?: pb.IEquipData): pb.EquipData;

        /**
         * Encodes the specified EquipData message. Does not implicitly {@link pb.EquipData.verify|verify} messages.
         * @param message EquipData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEquipData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified EquipData message, length delimited. Does not implicitly {@link pb.EquipData.verify|verify} messages.
         * @param message EquipData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEquipData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EquipData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EquipData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.EquipData;

        /**
         * Decodes an EquipData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EquipData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.EquipData;

        /**
         * Verifies an EquipData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TargetEquip. */
    interface ITargetEquip {

        /** TargetEquip EquipID */
        EquipID?: (string|null);
    }

    /** Represents a TargetEquip. */
    class TargetEquip implements ITargetEquip {

        /**
         * Constructs a new TargetEquip.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetEquip);

        /** TargetEquip EquipID. */
        public EquipID: string;

        /**
         * Creates a new TargetEquip instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetEquip instance
         */
        public static create(properties?: pb.ITargetEquip): pb.TargetEquip;

        /**
         * Encodes the specified TargetEquip message. Does not implicitly {@link pb.TargetEquip.verify|verify} messages.
         * @param message TargetEquip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetEquip, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetEquip message, length delimited. Does not implicitly {@link pb.TargetEquip.verify|verify} messages.
         * @param message TargetEquip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetEquip, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetEquip message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetEquip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetEquip;

        /**
         * Decodes a TargetEquip message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetEquip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetEquip;

        /**
         * Verifies a TargetEquip message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AccountTypeOnlineInfo. */
    interface IAccountTypeOnlineInfo {

        /** AccountTypeOnlineInfo AccountType */
        AccountType?: (pb.AccountTypeEnum|null);

        /** AccountTypeOnlineInfo PlayerAmount */
        PlayerAmount?: (number|null);

        /** AccountTypeOnlineInfo TotalOnlineTime */
        TotalOnlineTime?: (number|null);
    }

    /** Represents an AccountTypeOnlineInfo. */
    class AccountTypeOnlineInfo implements IAccountTypeOnlineInfo {

        /**
         * Constructs a new AccountTypeOnlineInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAccountTypeOnlineInfo);

        /** AccountTypeOnlineInfo AccountType. */
        public AccountType: pb.AccountTypeEnum;

        /** AccountTypeOnlineInfo PlayerAmount. */
        public PlayerAmount: number;

        /** AccountTypeOnlineInfo TotalOnlineTime. */
        public TotalOnlineTime: number;

        /**
         * Creates a new AccountTypeOnlineInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccountTypeOnlineInfo instance
         */
        public static create(properties?: pb.IAccountTypeOnlineInfo): pb.AccountTypeOnlineInfo;

        /**
         * Encodes the specified AccountTypeOnlineInfo message. Does not implicitly {@link pb.AccountTypeOnlineInfo.verify|verify} messages.
         * @param message AccountTypeOnlineInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAccountTypeOnlineInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AccountTypeOnlineInfo message, length delimited. Does not implicitly {@link pb.AccountTypeOnlineInfo.verify|verify} messages.
         * @param message AccountTypeOnlineInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAccountTypeOnlineInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AccountTypeOnlineInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccountTypeOnlineInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AccountTypeOnlineInfo;

        /**
         * Decodes an AccountTypeOnlineInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccountTypeOnlineInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AccountTypeOnlineInfo;

        /**
         * Verifies an AccountTypeOnlineInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an OnlineInfo. */
    interface IOnlineInfo {

        /** OnlineInfo Infos */
        Infos?: (pb.IAccountTypeOnlineInfo[]|null);
    }

    /** Represents an OnlineInfo. */
    class OnlineInfo implements IOnlineInfo {

        /**
         * Constructs a new OnlineInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IOnlineInfo);

        /** OnlineInfo Infos. */
        public Infos: pb.IAccountTypeOnlineInfo[];

        /**
         * Creates a new OnlineInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OnlineInfo instance
         */
        public static create(properties?: pb.IOnlineInfo): pb.OnlineInfo;

        /**
         * Encodes the specified OnlineInfo message. Does not implicitly {@link pb.OnlineInfo.verify|verify} messages.
         * @param message OnlineInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IOnlineInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified OnlineInfo message, length delimited. Does not implicitly {@link pb.OnlineInfo.verify|verify} messages.
         * @param message OnlineInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IOnlineInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OnlineInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OnlineInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.OnlineInfo;

        /**
         * Decodes an OnlineInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OnlineInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.OnlineInfo;

        /**
         * Verifies an OnlineInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetCardAmountLogArg. */
    interface IGetCardAmountLogArg {

        /** GetCardAmountLogArg AccountType */
        AccountType?: (pb.AccountTypeEnum|null);
    }

    /** Represents a GetCardAmountLogArg. */
    class GetCardAmountLogArg implements IGetCardAmountLogArg {

        /**
         * Constructs a new GetCardAmountLogArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetCardAmountLogArg);

        /** GetCardAmountLogArg AccountType. */
        public AccountType: pb.AccountTypeEnum;

        /**
         * Creates a new GetCardAmountLogArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCardAmountLogArg instance
         */
        public static create(properties?: pb.IGetCardAmountLogArg): pb.GetCardAmountLogArg;

        /**
         * Encodes the specified GetCardAmountLogArg message. Does not implicitly {@link pb.GetCardAmountLogArg.verify|verify} messages.
         * @param message GetCardAmountLogArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetCardAmountLogArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetCardAmountLogArg message, length delimited. Does not implicitly {@link pb.GetCardAmountLogArg.verify|verify} messages.
         * @param message GetCardAmountLogArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetCardAmountLogArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetCardAmountLogArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCardAmountLogArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetCardAmountLogArg;

        /**
         * Decodes a GetCardAmountLogArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCardAmountLogArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetCardAmountLogArg;

        /**
         * Verifies a GetCardAmountLogArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CardAmountLog. */
    interface ICardAmountLog {

        /** CardAmountLog CardID */
        CardID?: (number|null);

        /** CardAmountLog Amount */
        Amount?: (number|null);

        /** CardAmountLog CardName */
        CardName?: (string|null);
    }

    /** Represents a CardAmountLog. */
    class CardAmountLog implements ICardAmountLog {

        /**
         * Constructs a new CardAmountLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardAmountLog);

        /** CardAmountLog CardID. */
        public CardID: number;

        /** CardAmountLog Amount. */
        public Amount: number;

        /** CardAmountLog CardName. */
        public CardName: string;

        /**
         * Creates a new CardAmountLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardAmountLog instance
         */
        public static create(properties?: pb.ICardAmountLog): pb.CardAmountLog;

        /**
         * Encodes the specified CardAmountLog message. Does not implicitly {@link pb.CardAmountLog.verify|verify} messages.
         * @param message CardAmountLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardAmountLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardAmountLog message, length delimited. Does not implicitly {@link pb.CardAmountLog.verify|verify} messages.
         * @param message CardAmountLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardAmountLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardAmountLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardAmountLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardAmountLog;

        /**
         * Decodes a CardAmountLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardAmountLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardAmountLog;

        /**
         * Verifies a CardAmountLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CardsAmountLog. */
    interface ICardsAmountLog {

        /** CardsAmountLog AccountType */
        AccountType?: (pb.AccountTypeEnum|null);

        /** CardsAmountLog Logs */
        Logs?: (pb.ICardAmountLog[]|null);
    }

    /** Represents a CardsAmountLog. */
    class CardsAmountLog implements ICardsAmountLog {

        /**
         * Constructs a new CardsAmountLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardsAmountLog);

        /** CardsAmountLog AccountType. */
        public AccountType: pb.AccountTypeEnum;

        /** CardsAmountLog Logs. */
        public Logs: pb.ICardAmountLog[];

        /**
         * Creates a new CardsAmountLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardsAmountLog instance
         */
        public static create(properties?: pb.ICardsAmountLog): pb.CardsAmountLog;

        /**
         * Encodes the specified CardsAmountLog message. Does not implicitly {@link pb.CardsAmountLog.verify|verify} messages.
         * @param message CardsAmountLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardsAmountLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardsAmountLog message, length delimited. Does not implicitly {@link pb.CardsAmountLog.verify|verify} messages.
         * @param message CardsAmountLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardsAmountLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardsAmountLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardsAmountLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardsAmountLog;

        /**
         * Decodes a CardsAmountLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardsAmountLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardsAmountLog;

        /**
         * Verifies a CardsAmountLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetCardAmountLogReply. */
    interface IGetCardAmountLogReply {

        /** GetCardAmountLogReply Logs */
        Logs?: (pb.ICardsAmountLog[]|null);
    }

    /** Represents a GetCardAmountLogReply. */
    class GetCardAmountLogReply implements IGetCardAmountLogReply {

        /**
         * Constructs a new GetCardAmountLogReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetCardAmountLogReply);

        /** GetCardAmountLogReply Logs. */
        public Logs: pb.ICardsAmountLog[];

        /**
         * Creates a new GetCardAmountLogReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCardAmountLogReply instance
         */
        public static create(properties?: pb.IGetCardAmountLogReply): pb.GetCardAmountLogReply;

        /**
         * Encodes the specified GetCardAmountLogReply message. Does not implicitly {@link pb.GetCardAmountLogReply.verify|verify} messages.
         * @param message GetCardAmountLogReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetCardAmountLogReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetCardAmountLogReply message, length delimited. Does not implicitly {@link pb.GetCardAmountLogReply.verify|verify} messages.
         * @param message GetCardAmountLogReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetCardAmountLogReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetCardAmountLogReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCardAmountLogReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetCardAmountLogReply;

        /**
         * Decodes a GetCardAmountLogReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCardAmountLogReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetCardAmountLogReply;

        /**
         * Verifies a GetCardAmountLogReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetCardLevelLogArg. */
    interface IGetCardLevelLogArg {

        /** GetCardLevelLogArg AccountType */
        AccountType?: (pb.AccountTypeEnum|null);

        /** GetCardLevelLogArg CardID */
        CardID?: (number|null);
    }

    /** Represents a GetCardLevelLogArg. */
    class GetCardLevelLogArg implements IGetCardLevelLogArg {

        /**
         * Constructs a new GetCardLevelLogArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetCardLevelLogArg);

        /** GetCardLevelLogArg AccountType. */
        public AccountType: pb.AccountTypeEnum;

        /** GetCardLevelLogArg CardID. */
        public CardID: number;

        /**
         * Creates a new GetCardLevelLogArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCardLevelLogArg instance
         */
        public static create(properties?: pb.IGetCardLevelLogArg): pb.GetCardLevelLogArg;

        /**
         * Encodes the specified GetCardLevelLogArg message. Does not implicitly {@link pb.GetCardLevelLogArg.verify|verify} messages.
         * @param message GetCardLevelLogArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetCardLevelLogArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetCardLevelLogArg message, length delimited. Does not implicitly {@link pb.GetCardLevelLogArg.verify|verify} messages.
         * @param message GetCardLevelLogArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetCardLevelLogArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetCardLevelLogArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCardLevelLogArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetCardLevelLogArg;

        /**
         * Decodes a GetCardLevelLogArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCardLevelLogArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetCardLevelLogArg;

        /**
         * Verifies a GetCardLevelLogArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CardLevelLog. */
    interface ICardLevelLog {

        /** CardLevelLog CardID */
        CardID?: (number|null);

        /** CardLevelLog Levels */
        Levels?: (pb.CardLevelLog.ILevelAmount[]|null);

        /** CardLevelLog CardName */
        CardName?: (string|null);
    }

    /** Represents a CardLevelLog. */
    class CardLevelLog implements ICardLevelLog {

        /**
         * Constructs a new CardLevelLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardLevelLog);

        /** CardLevelLog CardID. */
        public CardID: number;

        /** CardLevelLog Levels. */
        public Levels: pb.CardLevelLog.ILevelAmount[];

        /** CardLevelLog CardName. */
        public CardName: string;

        /**
         * Creates a new CardLevelLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardLevelLog instance
         */
        public static create(properties?: pb.ICardLevelLog): pb.CardLevelLog;

        /**
         * Encodes the specified CardLevelLog message. Does not implicitly {@link pb.CardLevelLog.verify|verify} messages.
         * @param message CardLevelLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardLevelLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardLevelLog message, length delimited. Does not implicitly {@link pb.CardLevelLog.verify|verify} messages.
         * @param message CardLevelLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardLevelLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardLevelLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardLevelLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardLevelLog;

        /**
         * Decodes a CardLevelLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardLevelLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardLevelLog;

        /**
         * Verifies a CardLevelLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace CardLevelLog {

        /** Properties of a LevelAmount. */
        interface ILevelAmount {

            /** LevelAmount Level */
            Level?: (number|null);

            /** LevelAmount Amount */
            Amount?: (number|null);
        }

        /** Represents a LevelAmount. */
        class LevelAmount implements ILevelAmount {

            /**
             * Constructs a new LevelAmount.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.CardLevelLog.ILevelAmount);

            /** LevelAmount Level. */
            public Level: number;

            /** LevelAmount Amount. */
            public Amount: number;

            /**
             * Creates a new LevelAmount instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LevelAmount instance
             */
            public static create(properties?: pb.CardLevelLog.ILevelAmount): pb.CardLevelLog.LevelAmount;

            /**
             * Encodes the specified LevelAmount message. Does not implicitly {@link pb.CardLevelLog.LevelAmount.verify|verify} messages.
             * @param message LevelAmount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.CardLevelLog.ILevelAmount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified LevelAmount message, length delimited. Does not implicitly {@link pb.CardLevelLog.LevelAmount.verify|verify} messages.
             * @param message LevelAmount message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.CardLevelLog.ILevelAmount, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a LevelAmount message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LevelAmount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardLevelLog.LevelAmount;

            /**
             * Decodes a LevelAmount message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LevelAmount
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardLevelLog.LevelAmount;

            /**
             * Verifies a LevelAmount message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);
        }
    }

    /** Properties of a CardsLevelLog. */
    interface ICardsLevelLog {

        /** CardsLevelLog AccountType */
        AccountType?: (pb.AccountTypeEnum|null);

        /** CardsLevelLog Logs */
        Logs?: (pb.ICardLevelLog[]|null);
    }

    /** Represents a CardsLevelLog. */
    class CardsLevelLog implements ICardsLevelLog {

        /**
         * Constructs a new CardsLevelLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardsLevelLog);

        /** CardsLevelLog AccountType. */
        public AccountType: pb.AccountTypeEnum;

        /** CardsLevelLog Logs. */
        public Logs: pb.ICardLevelLog[];

        /**
         * Creates a new CardsLevelLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardsLevelLog instance
         */
        public static create(properties?: pb.ICardsLevelLog): pb.CardsLevelLog;

        /**
         * Encodes the specified CardsLevelLog message. Does not implicitly {@link pb.CardsLevelLog.verify|verify} messages.
         * @param message CardsLevelLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardsLevelLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardsLevelLog message, length delimited. Does not implicitly {@link pb.CardsLevelLog.verify|verify} messages.
         * @param message CardsLevelLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardsLevelLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardsLevelLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardsLevelLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardsLevelLog;

        /**
         * Decodes a CardsLevelLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardsLevelLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardsLevelLog;

        /**
         * Verifies a CardsLevelLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetCardLevelLogReply. */
    interface IGetCardLevelLogReply {

        /** GetCardLevelLogReply Logs */
        Logs?: (pb.ICardsLevelLog[]|null);
    }

    /** Represents a GetCardLevelLogReply. */
    class GetCardLevelLogReply implements IGetCardLevelLogReply {

        /**
         * Constructs a new GetCardLevelLogReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetCardLevelLogReply);

        /** GetCardLevelLogReply Logs. */
        public Logs: pb.ICardsLevelLog[];

        /**
         * Creates a new GetCardLevelLogReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCardLevelLogReply instance
         */
        public static create(properties?: pb.IGetCardLevelLogReply): pb.GetCardLevelLogReply;

        /**
         * Encodes the specified GetCardLevelLogReply message. Does not implicitly {@link pb.GetCardLevelLogReply.verify|verify} messages.
         * @param message GetCardLevelLogReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetCardLevelLogReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetCardLevelLogReply message, length delimited. Does not implicitly {@link pb.GetCardLevelLogReply.verify|verify} messages.
         * @param message GetCardLevelLogReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetCardLevelLogReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetCardLevelLogReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCardLevelLogReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetCardLevelLogReply;

        /**
         * Decodes a GetCardLevelLogReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCardLevelLogReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetCardLevelLogReply;

        /**
         * Verifies a GetCardLevelLogReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetCardPoolLogArg. */
    interface IGetCardPoolLogArg {

        /** GetCardPoolLogArg AccountType */
        AccountType?: (pb.AccountTypeEnum|null);

        /** GetCardPoolLogArg PvpLevel */
        PvpLevel?: (number|null);
    }

    /** Represents a GetCardPoolLogArg. */
    class GetCardPoolLogArg implements IGetCardPoolLogArg {

        /**
         * Constructs a new GetCardPoolLogArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetCardPoolLogArg);

        /** GetCardPoolLogArg AccountType. */
        public AccountType: pb.AccountTypeEnum;

        /** GetCardPoolLogArg PvpLevel. */
        public PvpLevel: number;

        /**
         * Creates a new GetCardPoolLogArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCardPoolLogArg instance
         */
        public static create(properties?: pb.IGetCardPoolLogArg): pb.GetCardPoolLogArg;

        /**
         * Encodes the specified GetCardPoolLogArg message. Does not implicitly {@link pb.GetCardPoolLogArg.verify|verify} messages.
         * @param message GetCardPoolLogArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetCardPoolLogArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetCardPoolLogArg message, length delimited. Does not implicitly {@link pb.GetCardPoolLogArg.verify|verify} messages.
         * @param message GetCardPoolLogArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetCardPoolLogArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetCardPoolLogArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCardPoolLogArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetCardPoolLogArg;

        /**
         * Decodes a GetCardPoolLogArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCardPoolLogArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetCardPoolLogArg;

        /**
         * Verifies a GetCardPoolLogArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CardPoolLog. */
    interface ICardPoolLog {

        /** CardPoolLog PvpLevel */
        PvpLevel?: (number|null);

        /** CardPoolLog BattleAmount */
        BattleAmount?: (number|null);

        /** CardPoolLog CardLogs */
        CardLogs?: (pb.CardPoolLog.ICardLog[]|null);
    }

    /** Represents a CardPoolLog. */
    class CardPoolLog implements ICardPoolLog {

        /**
         * Constructs a new CardPoolLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardPoolLog);

        /** CardPoolLog PvpLevel. */
        public PvpLevel: number;

        /** CardPoolLog BattleAmount. */
        public BattleAmount: number;

        /** CardPoolLog CardLogs. */
        public CardLogs: pb.CardPoolLog.ICardLog[];

        /**
         * Creates a new CardPoolLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardPoolLog instance
         */
        public static create(properties?: pb.ICardPoolLog): pb.CardPoolLog;

        /**
         * Encodes the specified CardPoolLog message. Does not implicitly {@link pb.CardPoolLog.verify|verify} messages.
         * @param message CardPoolLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardPoolLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardPoolLog message, length delimited. Does not implicitly {@link pb.CardPoolLog.verify|verify} messages.
         * @param message CardPoolLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardPoolLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardPoolLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardPoolLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardPoolLog;

        /**
         * Decodes a CardPoolLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardPoolLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardPoolLog;

        /**
         * Verifies a CardPoolLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace CardPoolLog {

        /** Properties of a CardLog. */
        interface ICardLog {

            /** CardLog CardID */
            CardID?: (number|null);

            /** CardLog Amount */
            Amount?: (number|null);

            /** CardLog CardName */
            CardName?: (string|null);
        }

        /** Represents a CardLog. */
        class CardLog implements ICardLog {

            /**
             * Constructs a new CardLog.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.CardPoolLog.ICardLog);

            /** CardLog CardID. */
            public CardID: number;

            /** CardLog Amount. */
            public Amount: number;

            /** CardLog CardName. */
            public CardName: string;

            /**
             * Creates a new CardLog instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CardLog instance
             */
            public static create(properties?: pb.CardPoolLog.ICardLog): pb.CardPoolLog.CardLog;

            /**
             * Encodes the specified CardLog message. Does not implicitly {@link pb.CardPoolLog.CardLog.verify|verify} messages.
             * @param message CardLog message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.CardPoolLog.ICardLog, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified CardLog message, length delimited. Does not implicitly {@link pb.CardPoolLog.CardLog.verify|verify} messages.
             * @param message CardLog message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.CardPoolLog.ICardLog, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CardLog message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CardLog
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardPoolLog.CardLog;

            /**
             * Decodes a CardLog message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CardLog
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardPoolLog.CardLog;

            /**
             * Verifies a CardLog message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);
        }
    }

    /** Properties of a CardPoolsLog. */
    interface ICardPoolsLog {

        /** CardPoolsLog AccountType */
        AccountType?: (pb.AccountTypeEnum|null);

        /** CardPoolsLog Logs */
        Logs?: (pb.ICardPoolLog[]|null);
    }

    /** Represents a CardPoolsLog. */
    class CardPoolsLog implements ICardPoolsLog {

        /**
         * Constructs a new CardPoolsLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICardPoolsLog);

        /** CardPoolsLog AccountType. */
        public AccountType: pb.AccountTypeEnum;

        /** CardPoolsLog Logs. */
        public Logs: pb.ICardPoolLog[];

        /**
         * Creates a new CardPoolsLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardPoolsLog instance
         */
        public static create(properties?: pb.ICardPoolsLog): pb.CardPoolsLog;

        /**
         * Encodes the specified CardPoolsLog message. Does not implicitly {@link pb.CardPoolsLog.verify|verify} messages.
         * @param message CardPoolsLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICardPoolsLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CardPoolsLog message, length delimited. Does not implicitly {@link pb.CardPoolsLog.verify|verify} messages.
         * @param message CardPoolsLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICardPoolsLog, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CardPoolsLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardPoolsLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CardPoolsLog;

        /**
         * Decodes a CardPoolsLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardPoolsLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CardPoolsLog;

        /**
         * Verifies a CardPoolsLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetCardPoolLogReply. */
    interface IGetCardPoolLogReply {

        /** GetCardPoolLogReply Logs */
        Logs?: (pb.ICardPoolsLog[]|null);
    }

    /** Represents a GetCardPoolLogReply. */
    class GetCardPoolLogReply implements IGetCardPoolLogReply {

        /**
         * Constructs a new GetCardPoolLogReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetCardPoolLogReply);

        /** GetCardPoolLogReply Logs. */
        public Logs: pb.ICardPoolsLog[];

        /**
         * Creates a new GetCardPoolLogReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCardPoolLogReply instance
         */
        public static create(properties?: pb.IGetCardPoolLogReply): pb.GetCardPoolLogReply;

        /**
         * Encodes the specified GetCardPoolLogReply message. Does not implicitly {@link pb.GetCardPoolLogReply.verify|verify} messages.
         * @param message GetCardPoolLogReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetCardPoolLogReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetCardPoolLogReply message, length delimited. Does not implicitly {@link pb.GetCardPoolLogReply.verify|verify} messages.
         * @param message GetCardPoolLogReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetCardPoolLogReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetCardPoolLogReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCardPoolLogReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetCardPoolLogReply;

        /**
         * Decodes a GetCardPoolLogReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCardPoolLogReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetCardPoolLogReply;

        /**
         * Verifies a GetCardPoolLogReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a KickOut. */
    interface IKickOut {

        /** KickOut Reason */
        Reason?: (number|null);
    }

    /** Represents a KickOut. */
    class KickOut implements IKickOut {

        /**
         * Constructs a new KickOut.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IKickOut);

        /** KickOut Reason. */
        public Reason: number;

        /**
         * Creates a new KickOut instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KickOut instance
         */
        public static create(properties?: pb.IKickOut): pb.KickOut;

        /**
         * Encodes the specified KickOut message. Does not implicitly {@link pb.KickOut.verify|verify} messages.
         * @param message KickOut message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IKickOut, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified KickOut message, length delimited. Does not implicitly {@link pb.KickOut.verify|verify} messages.
         * @param message KickOut message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IKickOut, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a KickOut message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KickOut
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.KickOut;

        /**
         * Decodes a KickOut message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KickOut
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.KickOut;

        /**
         * Verifies a KickOut message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FinishGuide. */
    interface IFinishGuide {

        /** FinishGuide GuideID */
        GuideID?: (number|null);
    }

    /** Represents a FinishGuide. */
    class FinishGuide implements IFinishGuide {

        /**
         * Constructs a new FinishGuide.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFinishGuide);

        /** FinishGuide GuideID. */
        public GuideID: number;

        /**
         * Creates a new FinishGuide instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FinishGuide instance
         */
        public static create(properties?: pb.IFinishGuide): pb.FinishGuide;

        /**
         * Encodes the specified FinishGuide message. Does not implicitly {@link pb.FinishGuide.verify|verify} messages.
         * @param message FinishGuide message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFinishGuide, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FinishGuide message, length delimited. Does not implicitly {@link pb.FinishGuide.verify|verify} messages.
         * @param message FinishGuide message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFinishGuide, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FinishGuide message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FinishGuide
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FinishGuide;

        /**
         * Decodes a FinishGuide message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FinishGuide
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FinishGuide;

        /**
         * Verifies a FinishGuide message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AllFinishGuide. */
    interface IAllFinishGuide {

        /** AllFinishGuide GuideIDs */
        GuideIDs?: (number[]|null);
    }

    /** Represents an AllFinishGuide. */
    class AllFinishGuide implements IAllFinishGuide {

        /**
         * Constructs a new AllFinishGuide.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAllFinishGuide);

        /** AllFinishGuide GuideIDs. */
        public GuideIDs: number[];

        /**
         * Creates a new AllFinishGuide instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AllFinishGuide instance
         */
        public static create(properties?: pb.IAllFinishGuide): pb.AllFinishGuide;

        /**
         * Encodes the specified AllFinishGuide message. Does not implicitly {@link pb.AllFinishGuide.verify|verify} messages.
         * @param message AllFinishGuide message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAllFinishGuide, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AllFinishGuide message, length delimited. Does not implicitly {@link pb.AllFinishGuide.verify|verify} messages.
         * @param message AllFinishGuide message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAllFinishGuide, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AllFinishGuide message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AllFinishGuide
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AllFinishGuide;

        /**
         * Decodes an AllFinishGuide message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AllFinishGuide
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AllFinishGuide;

        /**
         * Verifies an AllFinishGuide message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GuideGroup. */
    interface IGuideGroup {

        /** GuideGroup GroupID */
        GroupID?: (number|null);
    }

    /** Represents a GuideGroup. */
    class GuideGroup implements IGuideGroup {

        /**
         * Constructs a new GuideGroup.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGuideGroup);

        /** GuideGroup GroupID. */
        public GroupID: number;

        /**
         * Creates a new GuideGroup instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GuideGroup instance
         */
        public static create(properties?: pb.IGuideGroup): pb.GuideGroup;

        /**
         * Encodes the specified GuideGroup message. Does not implicitly {@link pb.GuideGroup.verify|verify} messages.
         * @param message GuideGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGuideGroup, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GuideGroup message, length delimited. Does not implicitly {@link pb.GuideGroup.verify|verify} messages.
         * @param message GuideGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGuideGroup, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuideGroup message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuideGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GuideGroup;

        /**
         * Decodes a GuideGroup message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GuideGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GuideGroup;

        /**
         * Verifies a GuideGroup message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** AccountTypeEnum enum. */
    enum AccountTypeEnum {
        UnknowAccountType = 0,
        Ios = 1,
        Android = 2,
        Wxgame = 3,
        WxgameIos = 4
    }

    /** Properties of a LoginArg. */
    interface ILoginArg {

        /** LoginArg ArchiveID */
        ArchiveID?: (number|null);

        /** LoginArg Channel */
        Channel?: (string|null);

        /** LoginArg ChannelID */
        ChannelID?: (string|null);

        /** LoginArg AccountType */
        AccountType?: (pb.AccountTypeEnum|null);

        /** LoginArg IsTourist */
        IsTourist?: (boolean|null);

        /** LoginArg LoginChannel */
        LoginChannel?: (string|null);

        /** LoginArg Country */
        Country?: (string|null);
    }

    /** Represents a LoginArg. */
    class LoginArg implements ILoginArg {

        /**
         * Constructs a new LoginArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILoginArg);

        /** LoginArg ArchiveID. */
        public ArchiveID: number;

        /** LoginArg Channel. */
        public Channel: string;

        /** LoginArg ChannelID. */
        public ChannelID: string;

        /** LoginArg AccountType. */
        public AccountType: pb.AccountTypeEnum;

        /** LoginArg IsTourist. */
        public IsTourist: boolean;

        /** LoginArg LoginChannel. */
        public LoginChannel: string;

        /** LoginArg Country. */
        public Country: string;

        /**
         * Creates a new LoginArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginArg instance
         */
        public static create(properties?: pb.ILoginArg): pb.LoginArg;

        /**
         * Encodes the specified LoginArg message. Does not implicitly {@link pb.LoginArg.verify|verify} messages.
         * @param message LoginArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILoginArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LoginArg message, length delimited. Does not implicitly {@link pb.LoginArg.verify|verify} messages.
         * @param message LoginArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILoginArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LoginArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LoginArg;

        /**
         * Decodes a LoginArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LoginArg;

        /**
         * Verifies a LoginArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LoginReply. */
    interface ILoginReply {

        /** LoginReply Uid */
        Uid?: (number|Long|null);

        /** LoginReply Cards */
        Cards?: (pb.ICardInfo[]|null);

        /** LoginReply Res */
        Res?: (pb.IResource[]|null);

        /** LoginReply DiyCards */
        DiyCards?: (pb.IDiyCardData[]|null);

        /** LoginReply FightID */
        FightID?: (number|Long|null);

        /** LoginReply ServerID */
        ServerID?: (string|null);

        /** LoginReply GuideCamp */
        GuideCamp?: (number|null);

        /** LoginReply Name */
        Name?: (string|null);

        /** LoginReply Ver */
        Ver?: (pb.IVersion|null);

        /** LoginReply IsExamined */
        IsExamined?: (boolean|null);

        /** LoginReply HeadImg */
        HeadImg?: (string|null);

        /** LoginReply CumulativePay */
        CumulativePay?: (number|null);

        /** LoginReply IsIosShared */
        IsIosShared?: (boolean|null);

        /** LoginReply SeasonPvpLimitTime */
        SeasonPvpLimitTime?: (number|null);

        /** LoginReply VipRemainTime */
        VipRemainTime?: (number|null);

        /** LoginReply CardSkins */
        CardSkins?: (string[]|null);

        /** LoginReply HeadFrame */
        HeadFrame?: (string|null);

        /** LoginReply Privileges */
        Privileges?: (number[]|null);

        /** LoginReply IsSeasonPvpChooseCard */
        IsSeasonPvpChooseCard?: (boolean|null);

        /** LoginReply IsInCampaignMatch */
        IsInCampaignMatch?: (boolean|null);

        /** LoginReply MiniVipRemainTime */
        MiniVipRemainTime?: (number|null);

        /** LoginReply Huodongs */
        Huodongs?: (pb.IHuodongData[]|null);

        /** LoginReply RebornCnt */
        RebornCnt?: (number|null);
    }

    /** Represents a LoginReply. */
    class LoginReply implements ILoginReply {

        /**
         * Constructs a new LoginReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILoginReply);

        /** LoginReply Uid. */
        public Uid: (number|Long);

        /** LoginReply Cards. */
        public Cards: pb.ICardInfo[];

        /** LoginReply Res. */
        public Res: pb.IResource[];

        /** LoginReply DiyCards. */
        public DiyCards: pb.IDiyCardData[];

        /** LoginReply FightID. */
        public FightID: (number|Long);

        /** LoginReply ServerID. */
        public ServerID: string;

        /** LoginReply GuideCamp. */
        public GuideCamp: number;

        /** LoginReply Name. */
        public Name: string;

        /** LoginReply Ver. */
        public Ver?: (pb.IVersion|null);

        /** LoginReply IsExamined. */
        public IsExamined: boolean;

        /** LoginReply HeadImg. */
        public HeadImg: string;

        /** LoginReply CumulativePay. */
        public CumulativePay: number;

        /** LoginReply IsIosShared. */
        public IsIosShared: boolean;

        /** LoginReply SeasonPvpLimitTime. */
        public SeasonPvpLimitTime: number;

        /** LoginReply VipRemainTime. */
        public VipRemainTime: number;

        /** LoginReply CardSkins. */
        public CardSkins: string[];

        /** LoginReply HeadFrame. */
        public HeadFrame: string;

        /** LoginReply Privileges. */
        public Privileges: number[];

        /** LoginReply IsSeasonPvpChooseCard. */
        public IsSeasonPvpChooseCard: boolean;

        /** LoginReply IsInCampaignMatch. */
        public IsInCampaignMatch: boolean;

        /** LoginReply MiniVipRemainTime. */
        public MiniVipRemainTime: number;

        /** LoginReply Huodongs. */
        public Huodongs: pb.IHuodongData[];

        /** LoginReply RebornCnt. */
        public RebornCnt: number;

        /**
         * Creates a new LoginReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginReply instance
         */
        public static create(properties?: pb.ILoginReply): pb.LoginReply;

        /**
         * Encodes the specified LoginReply message. Does not implicitly {@link pb.LoginReply.verify|verify} messages.
         * @param message LoginReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILoginReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LoginReply message, length delimited. Does not implicitly {@link pb.LoginReply.verify|verify} messages.
         * @param message LoginReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILoginReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LoginReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LoginReply;

        /**
         * Decodes a LoginReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LoginReply;

        /**
         * Verifies a LoginReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AccountLoginArg. */
    interface IAccountLoginArg {

        /** AccountLoginArg Channel */
        Channel?: (string|null);

        /** AccountLoginArg ChannelID */
        ChannelID?: (string|null);

        /** AccountLoginArg Account */
        Account?: (string|null);

        /** AccountLoginArg Password */
        Password?: (string|null);

        /** AccountLoginArg SdkToken */
        SdkToken?: (string|null);

        /** AccountLoginArg IsTourist */
        IsTourist?: (boolean|null);

        /** AccountLoginArg LoginChannel */
        LoginChannel?: (string|null);
    }

    /** Represents an AccountLoginArg. */
    class AccountLoginArg implements IAccountLoginArg {

        /**
         * Constructs a new AccountLoginArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAccountLoginArg);

        /** AccountLoginArg Channel. */
        public Channel: string;

        /** AccountLoginArg ChannelID. */
        public ChannelID: string;

        /** AccountLoginArg Account. */
        public Account: string;

        /** AccountLoginArg Password. */
        public Password: string;

        /** AccountLoginArg SdkToken. */
        public SdkToken: string;

        /** AccountLoginArg IsTourist. */
        public IsTourist: boolean;

        /** AccountLoginArg LoginChannel. */
        public LoginChannel: string;

        /**
         * Creates a new AccountLoginArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccountLoginArg instance
         */
        public static create(properties?: pb.IAccountLoginArg): pb.AccountLoginArg;

        /**
         * Encodes the specified AccountLoginArg message. Does not implicitly {@link pb.AccountLoginArg.verify|verify} messages.
         * @param message AccountLoginArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAccountLoginArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AccountLoginArg message, length delimited. Does not implicitly {@link pb.AccountLoginArg.verify|verify} messages.
         * @param message AccountLoginArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAccountLoginArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AccountLoginArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccountLoginArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AccountLoginArg;

        /**
         * Decodes an AccountLoginArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccountLoginArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AccountLoginArg;

        /**
         * Verifies an AccountLoginArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an Archive. */
    interface IArchive {

        /** Archive ID */
        ID?: (number|null);

        /** Archive Uid */
        Uid?: (number|Long|null);

        /** Archive LastTime */
        LastTime?: (number|null);
    }

    /** Represents an Archive. */
    class Archive implements IArchive {

        /**
         * Constructs a new Archive.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IArchive);

        /** Archive ID. */
        public ID: number;

        /** Archive Uid. */
        public Uid: (number|Long);

        /** Archive LastTime. */
        public LastTime: number;

        /**
         * Creates a new Archive instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Archive instance
         */
        public static create(properties?: pb.IArchive): pb.Archive;

        /**
         * Encodes the specified Archive message. Does not implicitly {@link pb.Archive.verify|verify} messages.
         * @param message Archive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IArchive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Archive message, length delimited. Does not implicitly {@link pb.Archive.verify|verify} messages.
         * @param message Archive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IArchive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an Archive message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Archive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Archive;

        /**
         * Decodes an Archive message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Archive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Archive;

        /**
         * Verifies an Archive message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an AccountArchives. */
    interface IAccountArchives {

        /** AccountArchives Archives */
        Archives?: (pb.IArchive[]|null);
    }

    /** Represents an AccountArchives. */
    class AccountArchives implements IAccountArchives {

        /**
         * Constructs a new AccountArchives.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAccountArchives);

        /** AccountArchives Archives. */
        public Archives: pb.IArchive[];

        /**
         * Creates a new AccountArchives instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccountArchives instance
         */
        public static create(properties?: pb.IAccountArchives): pb.AccountArchives;

        /**
         * Encodes the specified AccountArchives message. Does not implicitly {@link pb.AccountArchives.verify|verify} messages.
         * @param message AccountArchives message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAccountArchives, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified AccountArchives message, length delimited. Does not implicitly {@link pb.AccountArchives.verify|verify} messages.
         * @param message AccountArchives message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAccountArchives, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AccountArchives message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccountArchives
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.AccountArchives;

        /**
         * Decodes an AccountArchives message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccountArchives
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.AccountArchives;

        /**
         * Verifies an AccountArchives message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RegisterAccount. */
    interface IRegisterAccount {

        /** RegisterAccount Channel */
        Channel?: (string|null);

        /** RegisterAccount Account */
        Account?: (string|null);

        /** RegisterAccount Password */
        Password?: (string|null);
    }

    /** Represents a RegisterAccount. */
    class RegisterAccount implements IRegisterAccount {

        /**
         * Constructs a new RegisterAccount.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRegisterAccount);

        /** RegisterAccount Channel. */
        public Channel: string;

        /** RegisterAccount Account. */
        public Account: string;

        /** RegisterAccount Password. */
        public Password: string;

        /**
         * Creates a new RegisterAccount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RegisterAccount instance
         */
        public static create(properties?: pb.IRegisterAccount): pb.RegisterAccount;

        /**
         * Encodes the specified RegisterAccount message. Does not implicitly {@link pb.RegisterAccount.verify|verify} messages.
         * @param message RegisterAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRegisterAccount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RegisterAccount message, length delimited. Does not implicitly {@link pb.RegisterAccount.verify|verify} messages.
         * @param message RegisterAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRegisterAccount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RegisterAccount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RegisterAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RegisterAccount;

        /**
         * Decodes a RegisterAccount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RegisterAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RegisterAccount;

        /**
         * Verifies a RegisterAccount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a DelArchiveArg. */
    interface IDelArchiveArg {

        /** DelArchiveArg Channel */
        Channel?: (string|null);

        /** DelArchiveArg ChannelID */
        ChannelID?: (string|null);

        /** DelArchiveArg ArchiveID */
        ArchiveID?: (number|null);
    }

    /** Represents a DelArchiveArg. */
    class DelArchiveArg implements IDelArchiveArg {

        /**
         * Constructs a new DelArchiveArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDelArchiveArg);

        /** DelArchiveArg Channel. */
        public Channel: string;

        /** DelArchiveArg ChannelID. */
        public ChannelID: string;

        /** DelArchiveArg ArchiveID. */
        public ArchiveID: number;

        /**
         * Creates a new DelArchiveArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DelArchiveArg instance
         */
        public static create(properties?: pb.IDelArchiveArg): pb.DelArchiveArg;

        /**
         * Encodes the specified DelArchiveArg message. Does not implicitly {@link pb.DelArchiveArg.verify|verify} messages.
         * @param message DelArchiveArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDelArchiveArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DelArchiveArg message, length delimited. Does not implicitly {@link pb.DelArchiveArg.verify|verify} messages.
         * @param message DelArchiveArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDelArchiveArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DelArchiveArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DelArchiveArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.DelArchiveArg;

        /**
         * Decodes a DelArchiveArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DelArchiveArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.DelArchiveArg;

        /**
         * Verifies a DelArchiveArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ResourceModify. */
    interface IResourceModify {

        /** ResourceModify Res */
        Res?: (pb.IResource[]|null);
    }

    /** Represents a ResourceModify. */
    class ResourceModify implements IResourceModify {

        /**
         * Constructs a new ResourceModify.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IResourceModify);

        /** ResourceModify Res. */
        public Res: pb.IResource[];

        /**
         * Creates a new ResourceModify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ResourceModify instance
         */
        public static create(properties?: pb.IResourceModify): pb.ResourceModify;

        /**
         * Encodes the specified ResourceModify message. Does not implicitly {@link pb.ResourceModify.verify|verify} messages.
         * @param message ResourceModify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IResourceModify, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ResourceModify message, length delimited. Does not implicitly {@link pb.ResourceModify.verify|verify} messages.
         * @param message ResourceModify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IResourceModify, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ResourceModify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ResourceModify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ResourceModify;

        /**
         * Decodes a ResourceModify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ResourceModify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ResourceModify;

        /**
         * Verifies a ResourceModify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ModifyNameArg. */
    interface IModifyNameArg {

        /** ModifyNameArg Name */
        Name?: (string|null);
    }

    /** Represents a ModifyNameArg. */
    class ModifyNameArg implements IModifyNameArg {

        /**
         * Constructs a new ModifyNameArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IModifyNameArg);

        /** ModifyNameArg Name. */
        public Name: string;

        /**
         * Creates a new ModifyNameArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ModifyNameArg instance
         */
        public static create(properties?: pb.IModifyNameArg): pb.ModifyNameArg;

        /**
         * Encodes the specified ModifyNameArg message. Does not implicitly {@link pb.ModifyNameArg.verify|verify} messages.
         * @param message ModifyNameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IModifyNameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ModifyNameArg message, length delimited. Does not implicitly {@link pb.ModifyNameArg.verify|verify} messages.
         * @param message ModifyNameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IModifyNameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ModifyNameArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ModifyNameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ModifyNameArg;

        /**
         * Decodes a ModifyNameArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ModifyNameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ModifyNameArg;

        /**
         * Verifies a ModifyNameArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateNameArg. */
    interface IUpdateNameArg {

        /** UpdateNameArg Name */
        Name?: (string|null);
    }

    /** Represents an UpdateNameArg. */
    class UpdateNameArg implements IUpdateNameArg {

        /**
         * Constructs a new UpdateNameArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateNameArg);

        /** UpdateNameArg Name. */
        public Name: string;

        /**
         * Creates a new UpdateNameArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateNameArg instance
         */
        public static create(properties?: pb.IUpdateNameArg): pb.UpdateNameArg;

        /**
         * Encodes the specified UpdateNameArg message. Does not implicitly {@link pb.UpdateNameArg.verify|verify} messages.
         * @param message UpdateNameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateNameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateNameArg message, length delimited. Does not implicitly {@link pb.UpdateNameArg.verify|verify} messages.
         * @param message UpdateNameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateNameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateNameArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateNameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateNameArg;

        /**
         * Decodes an UpdateNameArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateNameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateNameArg;

        /**
         * Verifies an UpdateNameArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a Version. */
    interface IVersion {

        /** Version V1 */
        V1?: (number|null);

        /** Version V2 */
        V2?: (number|null);

        /** Version V3 */
        V3?: (number|null);
    }

    /** Represents a Version. */
    class Version implements IVersion {

        /**
         * Constructs a new Version.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVersion);

        /** Version V1. */
        public V1: number;

        /** Version V2. */
        public V2: number;

        /** Version V3. */
        public V3: number;

        /**
         * Creates a new Version instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Version instance
         */
        public static create(properties?: pb.IVersion): pb.Version;

        /**
         * Encodes the specified Version message. Does not implicitly {@link pb.Version.verify|verify} messages.
         * @param message Version message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVersion, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Version message, length delimited. Does not implicitly {@link pb.Version.verify|verify} messages.
         * @param message Version message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVersion, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Version message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Version
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Version;

        /**
         * Decodes a Version message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Version
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Version;

        /**
         * Verifies a Version message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LoadPlayerArg. */
    interface ILoadPlayerArg {

        /** LoadPlayerArg Uid */
        Uid?: (number|Long|null);
    }

    /** Represents a LoadPlayerArg. */
    class LoadPlayerArg implements ILoadPlayerArg {

        /**
         * Constructs a new LoadPlayerArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILoadPlayerArg);

        /** LoadPlayerArg Uid. */
        public Uid: (number|Long);

        /**
         * Creates a new LoadPlayerArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoadPlayerArg instance
         */
        public static create(properties?: pb.ILoadPlayerArg): pb.LoadPlayerArg;

        /**
         * Encodes the specified LoadPlayerArg message. Does not implicitly {@link pb.LoadPlayerArg.verify|verify} messages.
         * @param message LoadPlayerArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILoadPlayerArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LoadPlayerArg message, length delimited. Does not implicitly {@link pb.LoadPlayerArg.verify|verify} messages.
         * @param message LoadPlayerArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILoadPlayerArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LoadPlayerArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoadPlayerArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LoadPlayerArg;

        /**
         * Decodes a LoadPlayerArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoadPlayerArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LoadPlayerArg;

        /**
         * Verifies a LoadPlayerArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SimplePlayerInfo. */
    interface ISimplePlayerInfo {

        /** SimplePlayerInfo Name */
        Name?: (string|null);

        /** SimplePlayerInfo PvpScore */
        PvpScore?: (number|null);

        /** SimplePlayerInfo HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** SimplePlayerInfo FirstHandAmount */
        FirstHandAmount?: (number|null);

        /** SimplePlayerInfo BackHandAmount */
        BackHandAmount?: (number|null);

        /** SimplePlayerInfo FirstHandWinAmount */
        FirstHandWinAmount?: (number|null);

        /** SimplePlayerInfo BackHandWinAmount */
        BackHandWinAmount?: (number|null);

        /** SimplePlayerInfo RankScore */
        RankScore?: (number|null);

        /** SimplePlayerInfo FavoriteCards */
        FavoriteCards?: (pb.ISkinGCard[]|null);

        /** SimplePlayerInfo FightCards */
        FightCards?: (pb.ISkinGCard[]|null);

        /** SimplePlayerInfo IsWechatFriend */
        IsWechatFriend?: (boolean|null);

        /** SimplePlayerInfo IsOnline */
        IsOnline?: (boolean|null);

        /** SimplePlayerInfo IsInBattle */
        IsInBattle?: (boolean|null);

        /** SimplePlayerInfo LastOnlineTime */
        LastOnlineTime?: (number|null);

        /** SimplePlayerInfo Uid */
        Uid?: (number|Long|null);

        /** SimplePlayerInfo PvpCamp */
        PvpCamp?: (number|null);

        /** SimplePlayerInfo Country */
        Country?: (string|null);

        /** SimplePlayerInfo HeadFrame */
        HeadFrame?: (string|null);

        /** SimplePlayerInfo RebornCnt */
        RebornCnt?: (number|null);
    }

    /** Represents a SimplePlayerInfo. */
    class SimplePlayerInfo implements ISimplePlayerInfo {

        /**
         * Constructs a new SimplePlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISimplePlayerInfo);

        /** SimplePlayerInfo Name. */
        public Name: string;

        /** SimplePlayerInfo PvpScore. */
        public PvpScore: number;

        /** SimplePlayerInfo HeadImgUrl. */
        public HeadImgUrl: string;

        /** SimplePlayerInfo FirstHandAmount. */
        public FirstHandAmount: number;

        /** SimplePlayerInfo BackHandAmount. */
        public BackHandAmount: number;

        /** SimplePlayerInfo FirstHandWinAmount. */
        public FirstHandWinAmount: number;

        /** SimplePlayerInfo BackHandWinAmount. */
        public BackHandWinAmount: number;

        /** SimplePlayerInfo RankScore. */
        public RankScore: number;

        /** SimplePlayerInfo FavoriteCards. */
        public FavoriteCards: pb.ISkinGCard[];

        /** SimplePlayerInfo FightCards. */
        public FightCards: pb.ISkinGCard[];

        /** SimplePlayerInfo IsWechatFriend. */
        public IsWechatFriend: boolean;

        /** SimplePlayerInfo IsOnline. */
        public IsOnline: boolean;

        /** SimplePlayerInfo IsInBattle. */
        public IsInBattle: boolean;

        /** SimplePlayerInfo LastOnlineTime. */
        public LastOnlineTime: number;

        /** SimplePlayerInfo Uid. */
        public Uid: (number|Long);

        /** SimplePlayerInfo PvpCamp. */
        public PvpCamp: number;

        /** SimplePlayerInfo Country. */
        public Country: string;

        /** SimplePlayerInfo HeadFrame. */
        public HeadFrame: string;

        /** SimplePlayerInfo RebornCnt. */
        public RebornCnt: number;

        /**
         * Creates a new SimplePlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SimplePlayerInfo instance
         */
        public static create(properties?: pb.ISimplePlayerInfo): pb.SimplePlayerInfo;

        /**
         * Encodes the specified SimplePlayerInfo message. Does not implicitly {@link pb.SimplePlayerInfo.verify|verify} messages.
         * @param message SimplePlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISimplePlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SimplePlayerInfo message, length delimited. Does not implicitly {@link pb.SimplePlayerInfo.verify|verify} messages.
         * @param message SimplePlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISimplePlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SimplePlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SimplePlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SimplePlayerInfo;

        /**
         * Decodes a SimplePlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SimplePlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SimplePlayerInfo;

        /**
         * Verifies a SimplePlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SdkUserInfo. */
    interface ISdkUserInfo {

        /** SdkUserInfo NickName */
        NickName?: (string|null);

        /** SdkUserInfo HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** SdkUserInfo InviterUid */
        InviterUid?: (number|Long|null);
    }

    /** Represents a SdkUserInfo. */
    class SdkUserInfo implements ISdkUserInfo {

        /**
         * Constructs a new SdkUserInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISdkUserInfo);

        /** SdkUserInfo NickName. */
        public NickName: string;

        /** SdkUserInfo HeadImgUrl. */
        public HeadImgUrl: string;

        /** SdkUserInfo InviterUid. */
        public InviterUid: (number|Long);

        /**
         * Creates a new SdkUserInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SdkUserInfo instance
         */
        public static create(properties?: pb.ISdkUserInfo): pb.SdkUserInfo;

        /**
         * Encodes the specified SdkUserInfo message. Does not implicitly {@link pb.SdkUserInfo.verify|verify} messages.
         * @param message SdkUserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISdkUserInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SdkUserInfo message, length delimited. Does not implicitly {@link pb.SdkUserInfo.verify|verify} messages.
         * @param message SdkUserInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISdkUserInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SdkUserInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SdkUserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SdkUserInfo;

        /**
         * Decodes a SdkUserInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SdkUserInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SdkUserInfo;

        /**
         * Verifies a SdkUserInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateHeadImgArg. */
    interface IUpdateHeadImgArg {

        /** UpdateHeadImgArg HeadImg */
        HeadImg?: (string|null);
    }

    /** Represents an UpdateHeadImgArg. */
    class UpdateHeadImgArg implements IUpdateHeadImgArg {

        /**
         * Constructs a new UpdateHeadImgArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateHeadImgArg);

        /** UpdateHeadImgArg HeadImg. */
        public HeadImg: string;

        /**
         * Creates a new UpdateHeadImgArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateHeadImgArg instance
         */
        public static create(properties?: pb.IUpdateHeadImgArg): pb.UpdateHeadImgArg;

        /**
         * Encodes the specified UpdateHeadImgArg message. Does not implicitly {@link pb.UpdateHeadImgArg.verify|verify} messages.
         * @param message UpdateHeadImgArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateHeadImgArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateHeadImgArg message, length delimited. Does not implicitly {@link pb.UpdateHeadImgArg.verify|verify} messages.
         * @param message UpdateHeadImgArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateHeadImgArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateHeadImgArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateHeadImgArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateHeadImgArg;

        /**
         * Decodes an UpdateHeadImgArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateHeadImgArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateHeadImgArg;

        /**
         * Verifies an UpdateHeadImgArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TouristRegisterAccountArg. */
    interface ITouristRegisterAccountArg {

        /** TouristRegisterAccountArg Channel */
        Channel?: (string|null);
    }

    /** Represents a TouristRegisterAccountArg. */
    class TouristRegisterAccountArg implements ITouristRegisterAccountArg {

        /**
         * Constructs a new TouristRegisterAccountArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITouristRegisterAccountArg);

        /** TouristRegisterAccountArg Channel. */
        public Channel: string;

        /**
         * Creates a new TouristRegisterAccountArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TouristRegisterAccountArg instance
         */
        public static create(properties?: pb.ITouristRegisterAccountArg): pb.TouristRegisterAccountArg;

        /**
         * Encodes the specified TouristRegisterAccountArg message. Does not implicitly {@link pb.TouristRegisterAccountArg.verify|verify} messages.
         * @param message TouristRegisterAccountArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITouristRegisterAccountArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TouristRegisterAccountArg message, length delimited. Does not implicitly {@link pb.TouristRegisterAccountArg.verify|verify} messages.
         * @param message TouristRegisterAccountArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITouristRegisterAccountArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TouristRegisterAccountArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TouristRegisterAccountArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TouristRegisterAccountArg;

        /**
         * Decodes a TouristRegisterAccountArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TouristRegisterAccountArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TouristRegisterAccountArg;

        /**
         * Verifies a TouristRegisterAccountArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TouristRegisterAccountRelpy. */
    interface ITouristRegisterAccountRelpy {

        /** TouristRegisterAccountRelpy Account */
        Account?: (string|null);

        /** TouristRegisterAccountRelpy Password */
        Password?: (string|null);
    }

    /** Represents a TouristRegisterAccountRelpy. */
    class TouristRegisterAccountRelpy implements ITouristRegisterAccountRelpy {

        /**
         * Constructs a new TouristRegisterAccountRelpy.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITouristRegisterAccountRelpy);

        /** TouristRegisterAccountRelpy Account. */
        public Account: string;

        /** TouristRegisterAccountRelpy Password. */
        public Password: string;

        /**
         * Creates a new TouristRegisterAccountRelpy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TouristRegisterAccountRelpy instance
         */
        public static create(properties?: pb.ITouristRegisterAccountRelpy): pb.TouristRegisterAccountRelpy;

        /**
         * Encodes the specified TouristRegisterAccountRelpy message. Does not implicitly {@link pb.TouristRegisterAccountRelpy.verify|verify} messages.
         * @param message TouristRegisterAccountRelpy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITouristRegisterAccountRelpy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TouristRegisterAccountRelpy message, length delimited. Does not implicitly {@link pb.TouristRegisterAccountRelpy.verify|verify} messages.
         * @param message TouristRegisterAccountRelpy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITouristRegisterAccountRelpy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TouristRegisterAccountRelpy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TouristRegisterAccountRelpy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TouristRegisterAccountRelpy;

        /**
         * Decodes a TouristRegisterAccountRelpy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TouristRegisterAccountRelpy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TouristRegisterAccountRelpy;

        /**
         * Verifies a TouristRegisterAccountRelpy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TouristBindAccountArg. */
    interface ITouristBindAccountArg {

        /** TouristBindAccountArg Channel */
        Channel?: (string|null);

        /** TouristBindAccountArg TouristAccount */
        TouristAccount?: (string|null);

        /** TouristBindAccountArg TouristPassword */
        TouristPassword?: (string|null);

        /** TouristBindAccountArg BindAccount */
        BindAccount?: (pb.IAccountLoginArg|null);
    }

    /** Represents a TouristBindAccountArg. */
    class TouristBindAccountArg implements ITouristBindAccountArg {

        /**
         * Constructs a new TouristBindAccountArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITouristBindAccountArg);

        /** TouristBindAccountArg Channel. */
        public Channel: string;

        /** TouristBindAccountArg TouristAccount. */
        public TouristAccount: string;

        /** TouristBindAccountArg TouristPassword. */
        public TouristPassword: string;

        /** TouristBindAccountArg BindAccount. */
        public BindAccount?: (pb.IAccountLoginArg|null);

        /**
         * Creates a new TouristBindAccountArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TouristBindAccountArg instance
         */
        public static create(properties?: pb.ITouristBindAccountArg): pb.TouristBindAccountArg;

        /**
         * Encodes the specified TouristBindAccountArg message. Does not implicitly {@link pb.TouristBindAccountArg.verify|verify} messages.
         * @param message TouristBindAccountArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITouristBindAccountArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TouristBindAccountArg message, length delimited. Does not implicitly {@link pb.TouristBindAccountArg.verify|verify} messages.
         * @param message TouristBindAccountArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITouristBindAccountArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TouristBindAccountArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TouristBindAccountArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TouristBindAccountArg;

        /**
         * Decodes a TouristBindAccountArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TouristBindAccountArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TouristBindAccountArg;

        /**
         * Verifies a TouristBindAccountArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchHeadFrameReply. */
    interface IFetchHeadFrameReply {

        /** FetchHeadFrameReply HeadFrames */
        HeadFrames?: (string[]|null);
    }

    /** Represents a FetchHeadFrameReply. */
    class FetchHeadFrameReply implements IFetchHeadFrameReply {

        /**
         * Constructs a new FetchHeadFrameReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchHeadFrameReply);

        /** FetchHeadFrameReply HeadFrames. */
        public HeadFrames: string[];

        /**
         * Creates a new FetchHeadFrameReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchHeadFrameReply instance
         */
        public static create(properties?: pb.IFetchHeadFrameReply): pb.FetchHeadFrameReply;

        /**
         * Encodes the specified FetchHeadFrameReply message. Does not implicitly {@link pb.FetchHeadFrameReply.verify|verify} messages.
         * @param message FetchHeadFrameReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchHeadFrameReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchHeadFrameReply message, length delimited. Does not implicitly {@link pb.FetchHeadFrameReply.verify|verify} messages.
         * @param message FetchHeadFrameReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchHeadFrameReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchHeadFrameReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchHeadFrameReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchHeadFrameReply;

        /**
         * Decodes a FetchHeadFrameReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchHeadFrameReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchHeadFrameReply;

        /**
         * Verifies a FetchHeadFrameReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateHeadFrameArg. */
    interface IUpdateHeadFrameArg {

        /** UpdateHeadFrameArg HeadFrame */
        HeadFrame?: (string|null);
    }

    /** Represents an UpdateHeadFrameArg. */
    class UpdateHeadFrameArg implements IUpdateHeadFrameArg {

        /**
         * Constructs a new UpdateHeadFrameArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateHeadFrameArg);

        /** UpdateHeadFrameArg HeadFrame. */
        public HeadFrame: string;

        /**
         * Creates a new UpdateHeadFrameArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateHeadFrameArg instance
         */
        public static create(properties?: pb.IUpdateHeadFrameArg): pb.UpdateHeadFrameArg;

        /**
         * Encodes the specified UpdateHeadFrameArg message. Does not implicitly {@link pb.UpdateHeadFrameArg.verify|verify} messages.
         * @param message UpdateHeadFrameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateHeadFrameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateHeadFrameArg message, length delimited. Does not implicitly {@link pb.UpdateHeadFrameArg.verify|verify} messages.
         * @param message UpdateHeadFrameArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateHeadFrameArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateHeadFrameArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateHeadFrameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateHeadFrameArg;

        /**
         * Decodes an UpdateHeadFrameArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateHeadFrameArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateHeadFrameArg;

        /**
         * Verifies an UpdateHeadFrameArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a HeadData. */
    interface IHeadData {

        /** HeadData OnceCards */
        OnceCards?: (number[]|null);
    }

    /** Represents a HeadData. */
    class HeadData implements IHeadData {

        /**
         * Constructs a new HeadData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IHeadData);

        /** HeadData OnceCards. */
        public OnceCards: number[];

        /**
         * Creates a new HeadData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeadData instance
         */
        public static create(properties?: pb.IHeadData): pb.HeadData;

        /**
         * Encodes the specified HeadData message. Does not implicitly {@link pb.HeadData.verify|verify} messages.
         * @param message HeadData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IHeadData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified HeadData message, length delimited. Does not implicitly {@link pb.HeadData.verify|verify} messages.
         * @param message HeadData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IHeadData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HeadData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeadData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.HeadData;

        /**
         * Decodes a HeadData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeadData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.HeadData;

        /**
         * Verifies a HeadData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an EmojiData. */
    interface IEmojiData {

        /** EmojiData EmojiTeams */
        EmojiTeams?: (number[]|null);
    }

    /** Represents an EmojiData. */
    class EmojiData implements IEmojiData {

        /**
         * Constructs a new EmojiData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEmojiData);

        /** EmojiData EmojiTeams. */
        public EmojiTeams: number[];

        /**
         * Creates a new EmojiData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EmojiData instance
         */
        public static create(properties?: pb.IEmojiData): pb.EmojiData;

        /**
         * Encodes the specified EmojiData message. Does not implicitly {@link pb.EmojiData.verify|verify} messages.
         * @param message EmojiData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEmojiData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified EmojiData message, length delimited. Does not implicitly {@link pb.EmojiData.verify|verify} messages.
         * @param message EmojiData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEmojiData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EmojiData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EmojiData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.EmojiData;

        /**
         * Decodes an EmojiData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EmojiData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.EmojiData;

        /**
         * Verifies an EmojiData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TellMe. */
    interface ITellMe {

        /** TellMe Msg */
        Msg?: (string|null);

        /** TellMe Text */
        Text?: (number|null);
    }

    /** Represents a TellMe. */
    class TellMe implements ITellMe {

        /**
         * Constructs a new TellMe.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITellMe);

        /** TellMe Msg. */
        public Msg: string;

        /** TellMe Text. */
        public Text: number;

        /**
         * Creates a new TellMe instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TellMe instance
         */
        public static create(properties?: pb.ITellMe): pb.TellMe;

        /**
         * Encodes the specified TellMe message. Does not implicitly {@link pb.TellMe.verify|verify} messages.
         * @param message TellMe message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITellMe, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TellMe message, length delimited. Does not implicitly {@link pb.TellMe.verify|verify} messages.
         * @param message TellMe message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITellMe, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TellMe message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TellMe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TellMe;

        /**
         * Decodes a TellMe message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TellMe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TellMe;

        /**
         * Verifies a TellMe message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UnlockEmojiArg. */
    interface IUnlockEmojiArg {

        /** UnlockEmojiArg EmojiTeam */
        EmojiTeam?: (number|null);
    }

    /** Represents an UnlockEmojiArg. */
    class UnlockEmojiArg implements IUnlockEmojiArg {

        /**
         * Constructs a new UnlockEmojiArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUnlockEmojiArg);

        /** UnlockEmojiArg EmojiTeam. */
        public EmojiTeam: number;

        /**
         * Creates a new UnlockEmojiArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnlockEmojiArg instance
         */
        public static create(properties?: pb.IUnlockEmojiArg): pb.UnlockEmojiArg;

        /**
         * Encodes the specified UnlockEmojiArg message. Does not implicitly {@link pb.UnlockEmojiArg.verify|verify} messages.
         * @param message UnlockEmojiArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUnlockEmojiArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnlockEmojiArg message, length delimited. Does not implicitly {@link pb.UnlockEmojiArg.verify|verify} messages.
         * @param message UnlockEmojiArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUnlockEmojiArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnlockEmojiArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnlockEmojiArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UnlockEmojiArg;

        /**
         * Decodes an UnlockEmojiArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnlockEmojiArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UnlockEmojiArg;

        /**
         * Verifies an UnlockEmojiArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VipRemainTime. */
    interface IVipRemainTime {

        /** VipRemainTime RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents a VipRemainTime. */
    class VipRemainTime implements IVipRemainTime {

        /**
         * Constructs a new VipRemainTime.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVipRemainTime);

        /** VipRemainTime RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new VipRemainTime instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VipRemainTime instance
         */
        public static create(properties?: pb.IVipRemainTime): pb.VipRemainTime;

        /**
         * Encodes the specified VipRemainTime message. Does not implicitly {@link pb.VipRemainTime.verify|verify} messages.
         * @param message VipRemainTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVipRemainTime, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VipRemainTime message, length delimited. Does not implicitly {@link pb.VipRemainTime.verify|verify} messages.
         * @param message VipRemainTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVipRemainTime, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VipRemainTime message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VipRemainTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VipRemainTime;

        /**
         * Decodes a VipRemainTime message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VipRemainTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VipRemainTime;

        /**
         * Verifies a VipRemainTime message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MinVipRemainTime. */
    interface IMinVipRemainTime {

        /** MinVipRemainTime RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents a MinVipRemainTime. */
    class MinVipRemainTime implements IMinVipRemainTime {

        /**
         * Constructs a new MinVipRemainTime.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMinVipRemainTime);

        /** MinVipRemainTime RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new MinVipRemainTime instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MinVipRemainTime instance
         */
        public static create(properties?: pb.IMinVipRemainTime): pb.MinVipRemainTime;

        /**
         * Encodes the specified MinVipRemainTime message. Does not implicitly {@link pb.MinVipRemainTime.verify|verify} messages.
         * @param message MinVipRemainTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMinVipRemainTime, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MinVipRemainTime message, length delimited. Does not implicitly {@link pb.MinVipRemainTime.verify|verify} messages.
         * @param message MinVipRemainTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMinVipRemainTime, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MinVipRemainTime message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MinVipRemainTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MinVipRemainTime;

        /**
         * Decodes a MinVipRemainTime message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MinVipRemainTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MinVipRemainTime;

        /**
         * Verifies a MinVipRemainTime message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MatchPlayer. */
    interface IMatchPlayer {

        /** MatchPlayer Uid */
        Uid?: (number|Long|null);

        /** MatchPlayer Name */
        Name?: (string|null);

        /** MatchPlayer Camp */
        Camp?: (number|null);
    }

    /** Represents a MatchPlayer. */
    class MatchPlayer implements IMatchPlayer {

        /**
         * Constructs a new MatchPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMatchPlayer);

        /** MatchPlayer Uid. */
        public Uid: (number|Long);

        /** MatchPlayer Name. */
        public Name: string;

        /** MatchPlayer Camp. */
        public Camp: number;

        /**
         * Creates a new MatchPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MatchPlayer instance
         */
        public static create(properties?: pb.IMatchPlayer): pb.MatchPlayer;

        /**
         * Encodes the specified MatchPlayer message. Does not implicitly {@link pb.MatchPlayer.verify|verify} messages.
         * @param message MatchPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMatchPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MatchPlayer message, length delimited. Does not implicitly {@link pb.MatchPlayer.verify|verify} messages.
         * @param message MatchPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMatchPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MatchPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MatchPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MatchPlayer;

        /**
         * Decodes a MatchPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MatchPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MatchPlayer;

        /**
         * Verifies a MatchPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MatchArg. */
    interface IMatchArg {

        /** MatchArg Camp */
        Camp?: (number|null);

        /** MatchArg Type */
        Type?: (pb.MatchArg.MatchType|null);
    }

    /** Represents a MatchArg. */
    class MatchArg implements IMatchArg {

        /**
         * Constructs a new MatchArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMatchArg);

        /** MatchArg Camp. */
        public Camp: number;

        /** MatchArg Type. */
        public Type: pb.MatchArg.MatchType;

        /**
         * Creates a new MatchArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MatchArg instance
         */
        public static create(properties?: pb.IMatchArg): pb.MatchArg;

        /**
         * Encodes the specified MatchArg message. Does not implicitly {@link pb.MatchArg.verify|verify} messages.
         * @param message MatchArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMatchArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MatchArg message, length delimited. Does not implicitly {@link pb.MatchArg.verify|verify} messages.
         * @param message MatchArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMatchArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MatchArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MatchArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MatchArg;

        /**
         * Decodes a MatchArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MatchArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MatchArg;

        /**
         * Verifies a MatchArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace MatchArg {

        /** MatchType enum. */
        enum MatchType {
            Ladder = 0,
            Training = 1
        }
    }

    /** Properties of a MatchReply. */
    interface IMatchReply {

        /** MatchReply NeedChooseCamp */
        NeedChooseCamp?: (boolean|null);

        /** MatchReply LastCamp */
        LastCamp?: (number|null);

        /** MatchReply ChooseCardData */
        ChooseCardData?: (pb.ISeasonPvpChooseCardData|null);
    }

    /** Represents a MatchReply. */
    class MatchReply implements IMatchReply {

        /**
         * Constructs a new MatchReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMatchReply);

        /** MatchReply NeedChooseCamp. */
        public NeedChooseCamp: boolean;

        /** MatchReply LastCamp. */
        public LastCamp: number;

        /** MatchReply ChooseCardData. */
        public ChooseCardData?: (pb.ISeasonPvpChooseCardData|null);

        /**
         * Creates a new MatchReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MatchReply instance
         */
        public static create(properties?: pb.IMatchReply): pb.MatchReply;

        /**
         * Encodes the specified MatchReply message. Does not implicitly {@link pb.MatchReply.verify|verify} messages.
         * @param message MatchReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMatchReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MatchReply message, length delimited. Does not implicitly {@link pb.MatchReply.verify|verify} messages.
         * @param message MatchReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMatchReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MatchReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MatchReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MatchReply;

        /**
         * Decodes a MatchReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MatchReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MatchReply;

        /**
         * Verifies a MatchReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MatchInfo. */
    interface IMatchInfo {

        /** MatchInfo RoomId */
        RoomId?: (number|null);

        /** MatchInfo Player1 */
        Player1?: (pb.IMatchPlayer|null);

        /** MatchInfo Player2 */
        Player2?: (pb.IMatchPlayer|null);
    }

    /** Represents a MatchInfo. */
    class MatchInfo implements IMatchInfo {

        /**
         * Constructs a new MatchInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMatchInfo);

        /** MatchInfo RoomId. */
        public RoomId: number;

        /** MatchInfo Player1. */
        public Player1?: (pb.IMatchPlayer|null);

        /** MatchInfo Player2. */
        public Player2?: (pb.IMatchPlayer|null);

        /**
         * Creates a new MatchInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MatchInfo instance
         */
        public static create(properties?: pb.IMatchInfo): pb.MatchInfo;

        /**
         * Encodes the specified MatchInfo message. Does not implicitly {@link pb.MatchInfo.verify|verify} messages.
         * @param message MatchInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMatchInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MatchInfo message, length delimited. Does not implicitly {@link pb.MatchInfo.verify|verify} messages.
         * @param message MatchInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMatchInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MatchInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MatchInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MatchInfo;

        /**
         * Decodes a MatchInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MatchInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MatchInfo;

        /**
         * Verifies a MatchInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MatchDoneArg. */
    interface IMatchDoneArg {

        /** MatchDoneArg RoomId */
        RoomId?: (number|null);
    }

    /** Represents a MatchDoneArg. */
    class MatchDoneArg implements IMatchDoneArg {

        /**
         * Constructs a new MatchDoneArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMatchDoneArg);

        /** MatchDoneArg RoomId. */
        public RoomId: number;

        /**
         * Creates a new MatchDoneArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MatchDoneArg instance
         */
        public static create(properties?: pb.IMatchDoneArg): pb.MatchDoneArg;

        /**
         * Encodes the specified MatchDoneArg message. Does not implicitly {@link pb.MatchDoneArg.verify|verify} messages.
         * @param message MatchDoneArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMatchDoneArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MatchDoneArg message, length delimited. Does not implicitly {@link pb.MatchDoneArg.verify|verify} messages.
         * @param message MatchDoneArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMatchDoneArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MatchDoneArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MatchDoneArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MatchDoneArg;

        /**
         * Decodes a MatchDoneArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MatchDoneArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MatchDoneArg;

        /**
         * Verifies a MatchDoneArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BeginMatchArg. */
    interface IBeginMatchArg {

        /** BeginMatchArg Name */
        Name?: (string|null);

        /** BeginMatchArg Camp */
        Camp?: (number|null);

        /** BeginMatchArg PvpScore */
        PvpScore?: (number|null);

        /** BeginMatchArg Mmr */
        Mmr?: (number|null);

        /** BeginMatchArg StreakLoseCnt */
        StreakLoseCnt?: (number|null);

        /** BeginMatchArg HandCards */
        HandCards?: (pb.ISkinGCard[]|null);

        /** BeginMatchArg DrawCards */
        DrawCards?: (pb.ISkinGCard[]|null);

        /** BeginMatchArg CardStrength */
        CardStrength?: (number|null);

        /** BeginMatchArg HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** BeginMatchArg HeadFrame */
        HeadFrame?: (string|null);

        /** BeginMatchArg SeasonPvpSession */
        SeasonPvpSession?: (number|null);

        /** BeginMatchArg RebornRemainDay */
        RebornRemainDay?: (number|null);
    }

    /** Represents a BeginMatchArg. */
    class BeginMatchArg implements IBeginMatchArg {

        /**
         * Constructs a new BeginMatchArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBeginMatchArg);

        /** BeginMatchArg Name. */
        public Name: string;

        /** BeginMatchArg Camp. */
        public Camp: number;

        /** BeginMatchArg PvpScore. */
        public PvpScore: number;

        /** BeginMatchArg Mmr. */
        public Mmr: number;

        /** BeginMatchArg StreakLoseCnt. */
        public StreakLoseCnt: number;

        /** BeginMatchArg HandCards. */
        public HandCards: pb.ISkinGCard[];

        /** BeginMatchArg DrawCards. */
        public DrawCards: pb.ISkinGCard[];

        /** BeginMatchArg CardStrength. */
        public CardStrength: number;

        /** BeginMatchArg HeadImgUrl. */
        public HeadImgUrl: string;

        /** BeginMatchArg HeadFrame. */
        public HeadFrame: string;

        /** BeginMatchArg SeasonPvpSession. */
        public SeasonPvpSession: number;

        /** BeginMatchArg RebornRemainDay. */
        public RebornRemainDay: number;

        /**
         * Creates a new BeginMatchArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginMatchArg instance
         */
        public static create(properties?: pb.IBeginMatchArg): pb.BeginMatchArg;

        /**
         * Encodes the specified BeginMatchArg message. Does not implicitly {@link pb.BeginMatchArg.verify|verify} messages.
         * @param message BeginMatchArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBeginMatchArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BeginMatchArg message, length delimited. Does not implicitly {@link pb.BeginMatchArg.verify|verify} messages.
         * @param message BeginMatchArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBeginMatchArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeginMatchArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginMatchArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BeginMatchArg;

        /**
         * Decodes a BeginMatchArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginMatchArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BeginMatchArg;

        /**
         * Verifies a BeginMatchArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BeginNewbiePvpMatchArg. */
    interface IBeginNewbiePvpMatchArg {

        /** BeginNewbiePvpMatchArg Name */
        Name?: (string|null);

        /** BeginNewbiePvpMatchArg Camp */
        Camp?: (number|null);

        /** BeginNewbiePvpMatchArg PvpScore */
        PvpScore?: (number|null);

        /** BeginNewbiePvpMatchArg Mmr */
        Mmr?: (number|null);

        /** BeginNewbiePvpMatchArg EnemyCamp */
        EnemyCamp?: (number|null);

        /** BeginNewbiePvpMatchArg HandCards */
        HandCards?: (pb.ISkinGCard[]|null);

        /** BeginNewbiePvpMatchArg DrawCards */
        DrawCards?: (pb.ISkinGCard[]|null);

        /** BeginNewbiePvpMatchArg IsFirstBattle */
        IsFirstBattle?: (boolean|null);

        /** BeginNewbiePvpMatchArg HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** BeginNewbiePvpMatchArg HeadFrame */
        HeadFrame?: (string|null);
    }

    /** Represents a BeginNewbiePvpMatchArg. */
    class BeginNewbiePvpMatchArg implements IBeginNewbiePvpMatchArg {

        /**
         * Constructs a new BeginNewbiePvpMatchArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBeginNewbiePvpMatchArg);

        /** BeginNewbiePvpMatchArg Name. */
        public Name: string;

        /** BeginNewbiePvpMatchArg Camp. */
        public Camp: number;

        /** BeginNewbiePvpMatchArg PvpScore. */
        public PvpScore: number;

        /** BeginNewbiePvpMatchArg Mmr. */
        public Mmr: number;

        /** BeginNewbiePvpMatchArg EnemyCamp. */
        public EnemyCamp: number;

        /** BeginNewbiePvpMatchArg HandCards. */
        public HandCards: pb.ISkinGCard[];

        /** BeginNewbiePvpMatchArg DrawCards. */
        public DrawCards: pb.ISkinGCard[];

        /** BeginNewbiePvpMatchArg IsFirstBattle. */
        public IsFirstBattle: boolean;

        /** BeginNewbiePvpMatchArg HeadImgUrl. */
        public HeadImgUrl: string;

        /** BeginNewbiePvpMatchArg HeadFrame. */
        public HeadFrame: string;

        /**
         * Creates a new BeginNewbiePvpMatchArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginNewbiePvpMatchArg instance
         */
        public static create(properties?: pb.IBeginNewbiePvpMatchArg): pb.BeginNewbiePvpMatchArg;

        /**
         * Encodes the specified BeginNewbiePvpMatchArg message. Does not implicitly {@link pb.BeginNewbiePvpMatchArg.verify|verify} messages.
         * @param message BeginNewbiePvpMatchArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBeginNewbiePvpMatchArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BeginNewbiePvpMatchArg message, length delimited. Does not implicitly {@link pb.BeginNewbiePvpMatchArg.verify|verify} messages.
         * @param message BeginNewbiePvpMatchArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBeginNewbiePvpMatchArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeginNewbiePvpMatchArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginNewbiePvpMatchArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BeginNewbiePvpMatchArg;

        /**
         * Decodes a BeginNewbiePvpMatchArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginNewbiePvpMatchArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BeginNewbiePvpMatchArg;

        /**
         * Verifies a BeginNewbiePvpMatchArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonPvpLimitTime. */
    interface ISeasonPvpLimitTime {

        /** SeasonPvpLimitTime LimitTime */
        LimitTime?: (number|null);
    }

    /** Represents a SeasonPvpLimitTime. */
    class SeasonPvpLimitTime implements ISeasonPvpLimitTime {

        /**
         * Constructs a new SeasonPvpLimitTime.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonPvpLimitTime);

        /** SeasonPvpLimitTime LimitTime. */
        public LimitTime: number;

        /**
         * Creates a new SeasonPvpLimitTime instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonPvpLimitTime instance
         */
        public static create(properties?: pb.ISeasonPvpLimitTime): pb.SeasonPvpLimitTime;

        /**
         * Encodes the specified SeasonPvpLimitTime message. Does not implicitly {@link pb.SeasonPvpLimitTime.verify|verify} messages.
         * @param message SeasonPvpLimitTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonPvpLimitTime, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonPvpLimitTime message, length delimited. Does not implicitly {@link pb.SeasonPvpLimitTime.verify|verify} messages.
         * @param message SeasonPvpLimitTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonPvpLimitTime, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonPvpLimitTime message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonPvpLimitTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonPvpLimitTime;

        /**
         * Decodes a SeasonPvpLimitTime message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonPvpLimitTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonPvpLimitTime;

        /**
         * Verifies a SeasonPvpLimitTime message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonPvpInfo. */
    interface ISeasonPvpInfo {

        /** SeasonPvpInfo LimitTime */
        LimitTime?: (number|null);

        /** SeasonPvpInfo FirstHandAmount */
        FirstHandAmount?: (number|null);

        /** SeasonPvpInfo BackHandAmount */
        BackHandAmount?: (number|null);

        /** SeasonPvpInfo FirstHandWinAmount */
        FirstHandWinAmount?: (number|null);

        /** SeasonPvpInfo BackHandWinAmount */
        BackHandWinAmount?: (number|null);
    }

    /** Represents a SeasonPvpInfo. */
    class SeasonPvpInfo implements ISeasonPvpInfo {

        /**
         * Constructs a new SeasonPvpInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonPvpInfo);

        /** SeasonPvpInfo LimitTime. */
        public LimitTime: number;

        /** SeasonPvpInfo FirstHandAmount. */
        public FirstHandAmount: number;

        /** SeasonPvpInfo BackHandAmount. */
        public BackHandAmount: number;

        /** SeasonPvpInfo FirstHandWinAmount. */
        public FirstHandWinAmount: number;

        /** SeasonPvpInfo BackHandWinAmount. */
        public BackHandWinAmount: number;

        /**
         * Creates a new SeasonPvpInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonPvpInfo instance
         */
        public static create(properties?: pb.ISeasonPvpInfo): pb.SeasonPvpInfo;

        /**
         * Encodes the specified SeasonPvpInfo message. Does not implicitly {@link pb.SeasonPvpInfo.verify|verify} messages.
         * @param message SeasonPvpInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonPvpInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonPvpInfo message, length delimited. Does not implicitly {@link pb.SeasonPvpInfo.verify|verify} messages.
         * @param message SeasonPvpInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonPvpInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonPvpInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonPvpInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonPvpInfo;

        /**
         * Decodes a SeasonPvpInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonPvpInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonPvpInfo;

        /**
         * Verifies a SeasonPvpInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonPvpChooseCampArg. */
    interface ISeasonPvpChooseCampArg {

        /** SeasonPvpChooseCampArg Camp */
        Camp?: (number|null);
    }

    /** Represents a SeasonPvpChooseCampArg. */
    class SeasonPvpChooseCampArg implements ISeasonPvpChooseCampArg {

        /**
         * Constructs a new SeasonPvpChooseCampArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonPvpChooseCampArg);

        /** SeasonPvpChooseCampArg Camp. */
        public Camp: number;

        /**
         * Creates a new SeasonPvpChooseCampArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonPvpChooseCampArg instance
         */
        public static create(properties?: pb.ISeasonPvpChooseCampArg): pb.SeasonPvpChooseCampArg;

        /**
         * Encodes the specified SeasonPvpChooseCampArg message. Does not implicitly {@link pb.SeasonPvpChooseCampArg.verify|verify} messages.
         * @param message SeasonPvpChooseCampArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonPvpChooseCampArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonPvpChooseCampArg message, length delimited. Does not implicitly {@link pb.SeasonPvpChooseCampArg.verify|verify} messages.
         * @param message SeasonPvpChooseCampArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonPvpChooseCampArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonPvpChooseCampArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonPvpChooseCampArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonPvpChooseCampArg;

        /**
         * Decodes a SeasonPvpChooseCampArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonPvpChooseCampArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonPvpChooseCampArg;

        /**
         * Verifies a SeasonPvpChooseCampArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonPvpChooseCardData. */
    interface ISeasonPvpChooseCardData {

        /** SeasonPvpChooseCardData CardIDs */
        CardIDs?: (number[]|null);

        /** SeasonPvpChooseCardData NeedChooseAmount */
        NeedChooseAmount?: (number|null);

        /** SeasonPvpChooseCardData FreeRefreshCnt */
        FreeRefreshCnt?: (number|null);

        /** SeasonPvpChooseCardData JadeRefreshCnt */
        JadeRefreshCnt?: (number|null);
    }

    /** Represents a SeasonPvpChooseCardData. */
    class SeasonPvpChooseCardData implements ISeasonPvpChooseCardData {

        /**
         * Constructs a new SeasonPvpChooseCardData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonPvpChooseCardData);

        /** SeasonPvpChooseCardData CardIDs. */
        public CardIDs: number[];

        /** SeasonPvpChooseCardData NeedChooseAmount. */
        public NeedChooseAmount: number;

        /** SeasonPvpChooseCardData FreeRefreshCnt. */
        public FreeRefreshCnt: number;

        /** SeasonPvpChooseCardData JadeRefreshCnt. */
        public JadeRefreshCnt: number;

        /**
         * Creates a new SeasonPvpChooseCardData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonPvpChooseCardData instance
         */
        public static create(properties?: pb.ISeasonPvpChooseCardData): pb.SeasonPvpChooseCardData;

        /**
         * Encodes the specified SeasonPvpChooseCardData message. Does not implicitly {@link pb.SeasonPvpChooseCardData.verify|verify} messages.
         * @param message SeasonPvpChooseCardData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonPvpChooseCardData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonPvpChooseCardData message, length delimited. Does not implicitly {@link pb.SeasonPvpChooseCardData.verify|verify} messages.
         * @param message SeasonPvpChooseCardData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonPvpChooseCardData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonPvpChooseCardData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonPvpChooseCardData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonPvpChooseCardData;

        /**
         * Decodes a SeasonPvpChooseCardData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonPvpChooseCardData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonPvpChooseCardData;

        /**
         * Verifies a SeasonPvpChooseCardData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonPvpChooseCardArg. */
    interface ISeasonPvpChooseCardArg {

        /** SeasonPvpChooseCardArg CardIDs */
        CardIDs?: (number[]|null);
    }

    /** Represents a SeasonPvpChooseCardArg. */
    class SeasonPvpChooseCardArg implements ISeasonPvpChooseCardArg {

        /**
         * Constructs a new SeasonPvpChooseCardArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonPvpChooseCardArg);

        /** SeasonPvpChooseCardArg CardIDs. */
        public CardIDs: number[];

        /**
         * Creates a new SeasonPvpChooseCardArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonPvpChooseCardArg instance
         */
        public static create(properties?: pb.ISeasonPvpChooseCardArg): pb.SeasonPvpChooseCardArg;

        /**
         * Encodes the specified SeasonPvpChooseCardArg message. Does not implicitly {@link pb.SeasonPvpChooseCardArg.verify|verify} messages.
         * @param message SeasonPvpChooseCardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonPvpChooseCardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonPvpChooseCardArg message, length delimited. Does not implicitly {@link pb.SeasonPvpChooseCardArg.verify|verify} messages.
         * @param message SeasonPvpChooseCardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonPvpChooseCardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonPvpChooseCardArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonPvpChooseCardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonPvpChooseCardArg;

        /**
         * Decodes a SeasonPvpChooseCardArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonPvpChooseCardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonPvpChooseCardArg;

        /**
         * Verifies a SeasonPvpChooseCardArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SeasonPvpChooseCardReply. */
    interface ISeasonPvpChooseCardReply {

        /** SeasonPvpChooseCardReply CardIDs */
        CardIDs?: (number[]|null);
    }

    /** Represents a SeasonPvpChooseCardReply. */
    class SeasonPvpChooseCardReply implements ISeasonPvpChooseCardReply {

        /**
         * Constructs a new SeasonPvpChooseCardReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonPvpChooseCardReply);

        /** SeasonPvpChooseCardReply CardIDs. */
        public CardIDs: number[];

        /**
         * Creates a new SeasonPvpChooseCardReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonPvpChooseCardReply instance
         */
        public static create(properties?: pb.ISeasonPvpChooseCardReply): pb.SeasonPvpChooseCardReply;

        /**
         * Encodes the specified SeasonPvpChooseCardReply message. Does not implicitly {@link pb.SeasonPvpChooseCardReply.verify|verify} messages.
         * @param message SeasonPvpChooseCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonPvpChooseCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeasonPvpChooseCardReply message, length delimited. Does not implicitly {@link pb.SeasonPvpChooseCardReply.verify|verify} messages.
         * @param message SeasonPvpChooseCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonPvpChooseCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeasonPvpChooseCardReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonPvpChooseCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SeasonPvpChooseCardReply;

        /**
         * Decodes a SeasonPvpChooseCardReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonPvpChooseCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SeasonPvpChooseCardReply;

        /**
         * Verifies a SeasonPvpChooseCardReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchSeasonHandCardReply. */
    interface IFetchSeasonHandCardReply {

        /** FetchSeasonHandCardReply CardIDs */
        CardIDs?: (number[]|null);

        /** FetchSeasonHandCardReply ChangeType */
        ChangeType?: (pb.FetchSeasonHandCardReply.ChangeTypeEnum|null);

        /** FetchSeasonHandCardReply ChangeMaxPro */
        ChangeMaxPro?: (number|null);

        /** FetchSeasonHandCardReply ChangeCurPro */
        ChangeCurPro?: (number|null);

        /** FetchSeasonHandCardReply WinCnt */
        WinCnt?: (number|null);
    }

    /** Represents a FetchSeasonHandCardReply. */
    class FetchSeasonHandCardReply implements IFetchSeasonHandCardReply {

        /**
         * Constructs a new FetchSeasonHandCardReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchSeasonHandCardReply);

        /** FetchSeasonHandCardReply CardIDs. */
        public CardIDs: number[];

        /** FetchSeasonHandCardReply ChangeType. */
        public ChangeType: pb.FetchSeasonHandCardReply.ChangeTypeEnum;

        /** FetchSeasonHandCardReply ChangeMaxPro. */
        public ChangeMaxPro: number;

        /** FetchSeasonHandCardReply ChangeCurPro. */
        public ChangeCurPro: number;

        /** FetchSeasonHandCardReply WinCnt. */
        public WinCnt: number;

        /**
         * Creates a new FetchSeasonHandCardReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchSeasonHandCardReply instance
         */
        public static create(properties?: pb.IFetchSeasonHandCardReply): pb.FetchSeasonHandCardReply;

        /**
         * Encodes the specified FetchSeasonHandCardReply message. Does not implicitly {@link pb.FetchSeasonHandCardReply.verify|verify} messages.
         * @param message FetchSeasonHandCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchSeasonHandCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchSeasonHandCardReply message, length delimited. Does not implicitly {@link pb.FetchSeasonHandCardReply.verify|verify} messages.
         * @param message FetchSeasonHandCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchSeasonHandCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchSeasonHandCardReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchSeasonHandCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchSeasonHandCardReply;

        /**
         * Decodes a FetchSeasonHandCardReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchSeasonHandCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchSeasonHandCardReply;

        /**
         * Verifies a FetchSeasonHandCardReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace FetchSeasonHandCardReply {

        /** ChangeTypeEnum enum. */
        enum ChangeTypeEnum {
            Unknow = 0,
            Fight = 1,
            Win = 2,
            Lose = 3
        }
    }

    /** Properties of a GetFighterDataArg. */
    interface IGetFighterDataArg {

        /** GetFighterDataArg CardIDs */
        CardIDs?: (number[]|null);
    }

    /** Represents a GetFighterDataArg. */
    class GetFighterDataArg implements IGetFighterDataArg {

        /**
         * Constructs a new GetFighterDataArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetFighterDataArg);

        /** GetFighterDataArg CardIDs. */
        public CardIDs: number[];

        /**
         * Creates a new GetFighterDataArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetFighterDataArg instance
         */
        public static create(properties?: pb.IGetFighterDataArg): pb.GetFighterDataArg;

        /**
         * Encodes the specified GetFighterDataArg message. Does not implicitly {@link pb.GetFighterDataArg.verify|verify} messages.
         * @param message GetFighterDataArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetFighterDataArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetFighterDataArg message, length delimited. Does not implicitly {@link pb.GetFighterDataArg.verify|verify} messages.
         * @param message GetFighterDataArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetFighterDataArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetFighterDataArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetFighterDataArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetFighterDataArg;

        /**
         * Decodes a GetFighterDataArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetFighterDataArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetFighterDataArg;

        /**
         * Verifies a GetFighterDataArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** HuodongTypeEnum enum. */
    enum HuodongTypeEnum {
        HUnknow = 0,
        HSeasonPvp = 1,
        HSpringExchange = 2
    }

    /** Properties of a HuodongData. */
    interface IHuodongData {

        /** HuodongData Type */
        Type?: (pb.HuodongTypeEnum|null);

        /** HuodongData RemainTime */
        RemainTime?: (number|null);

        /** HuodongData RemainExchangeTime */
        RemainExchangeTime?: (number|null);
    }

    /** Represents a HuodongData. */
    class HuodongData implements IHuodongData {

        /**
         * Constructs a new HuodongData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IHuodongData);

        /** HuodongData Type. */
        public Type: pb.HuodongTypeEnum;

        /** HuodongData RemainTime. */
        public RemainTime: number;

        /** HuodongData RemainExchangeTime. */
        public RemainExchangeTime: number;

        /**
         * Creates a new HuodongData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HuodongData instance
         */
        public static create(properties?: pb.IHuodongData): pb.HuodongData;

        /**
         * Encodes the specified HuodongData message. Does not implicitly {@link pb.HuodongData.verify|verify} messages.
         * @param message HuodongData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IHuodongData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified HuodongData message, length delimited. Does not implicitly {@link pb.HuodongData.verify|verify} messages.
         * @param message HuodongData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IHuodongData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HuodongData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HuodongData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.HuodongData;

        /**
         * Decodes a HuodongData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HuodongData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.HuodongData;

        /**
         * Verifies a HuodongData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TargetHuodong. */
    interface ITargetHuodong {

        /** TargetHuodong Type */
        Type?: (pb.HuodongTypeEnum|null);
    }

    /** Represents a TargetHuodong. */
    class TargetHuodong implements ITargetHuodong {

        /**
         * Constructs a new TargetHuodong.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetHuodong);

        /** TargetHuodong Type. */
        public Type: pb.HuodongTypeEnum;

        /**
         * Creates a new TargetHuodong instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetHuodong instance
         */
        public static create(properties?: pb.ITargetHuodong): pb.TargetHuodong;

        /**
         * Encodes the specified TargetHuodong message. Does not implicitly {@link pb.TargetHuodong.verify|verify} messages.
         * @param message TargetHuodong message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetHuodong, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetHuodong message, length delimited. Does not implicitly {@link pb.TargetHuodong.verify|verify} messages.
         * @param message TargetHuodong message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetHuodong, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetHuodong message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetHuodong
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetHuodong;

        /**
         * Decodes a TargetHuodong message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetHuodong
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetHuodong;

        /**
         * Verifies a TargetHuodong message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a HuodongDetail. */
    interface IHuodongDetail {

        /** HuodongDetail Data */
        Data?: (Uint8Array|null);
    }

    /** Represents a HuodongDetail. */
    class HuodongDetail implements IHuodongDetail {

        /**
         * Constructs a new HuodongDetail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IHuodongDetail);

        /** HuodongDetail Data. */
        public Data: Uint8Array;

        /**
         * Creates a new HuodongDetail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HuodongDetail instance
         */
        public static create(properties?: pb.IHuodongDetail): pb.HuodongDetail;

        /**
         * Encodes the specified HuodongDetail message. Does not implicitly {@link pb.HuodongDetail.verify|verify} messages.
         * @param message HuodongDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IHuodongDetail, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified HuodongDetail message, length delimited. Does not implicitly {@link pb.HuodongDetail.verify|verify} messages.
         * @param message HuodongDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IHuodongDetail, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HuodongDetail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HuodongDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.HuodongDetail;

        /**
         * Decodes a HuodongDetail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HuodongDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.HuodongDetail;

        /**
         * Verifies a HuodongDetail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SpringExchangeData. */
    interface ISpringExchangeData {

        /** SpringExchangeData GoodsID */
        GoodsID?: (number|null);

        /** SpringExchangeData ExchangeCnt */
        ExchangeCnt?: (number|null);
    }

    /** Represents a SpringExchangeData. */
    class SpringExchangeData implements ISpringExchangeData {

        /**
         * Constructs a new SpringExchangeData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISpringExchangeData);

        /** SpringExchangeData GoodsID. */
        public GoodsID: number;

        /** SpringExchangeData ExchangeCnt. */
        public ExchangeCnt: number;

        /**
         * Creates a new SpringExchangeData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SpringExchangeData instance
         */
        public static create(properties?: pb.ISpringExchangeData): pb.SpringExchangeData;

        /**
         * Encodes the specified SpringExchangeData message. Does not implicitly {@link pb.SpringExchangeData.verify|verify} messages.
         * @param message SpringExchangeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISpringExchangeData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SpringExchangeData message, length delimited. Does not implicitly {@link pb.SpringExchangeData.verify|verify} messages.
         * @param message SpringExchangeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISpringExchangeData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SpringExchangeData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SpringExchangeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SpringExchangeData;

        /**
         * Decodes a SpringExchangeData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SpringExchangeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SpringExchangeData;

        /**
         * Verifies a SpringExchangeData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SpringHuodong. */
    interface ISpringHuodong {

        /** SpringHuodong ExchangeDatas */
        ExchangeDatas?: (pb.ISpringExchangeData[]|null);
    }

    /** Represents a SpringHuodong. */
    class SpringHuodong implements ISpringHuodong {

        /**
         * Constructs a new SpringHuodong.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISpringHuodong);

        /** SpringHuodong ExchangeDatas. */
        public ExchangeDatas: pb.ISpringExchangeData[];

        /**
         * Creates a new SpringHuodong instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SpringHuodong instance
         */
        public static create(properties?: pb.ISpringHuodong): pb.SpringHuodong;

        /**
         * Encodes the specified SpringHuodong message. Does not implicitly {@link pb.SpringHuodong.verify|verify} messages.
         * @param message SpringHuodong message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISpringHuodong, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SpringHuodong message, length delimited. Does not implicitly {@link pb.SpringHuodong.verify|verify} messages.
         * @param message SpringHuodong message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISpringHuodong, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SpringHuodong message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SpringHuodong
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SpringHuodong;

        /**
         * Decodes a SpringHuodong message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SpringHuodong
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SpringHuodong;

        /**
         * Verifies a SpringHuodong message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a HuodongExchangeArg. */
    interface IHuodongExchangeArg {

        /** HuodongExchangeArg Type */
        Type?: (pb.HuodongTypeEnum|null);

        /** HuodongExchangeArg GoodsID */
        GoodsID?: (number|null);
    }

    /** Represents a HuodongExchangeArg. */
    class HuodongExchangeArg implements IHuodongExchangeArg {

        /**
         * Constructs a new HuodongExchangeArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IHuodongExchangeArg);

        /** HuodongExchangeArg Type. */
        public Type: pb.HuodongTypeEnum;

        /** HuodongExchangeArg GoodsID. */
        public GoodsID: number;

        /**
         * Creates a new HuodongExchangeArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HuodongExchangeArg instance
         */
        public static create(properties?: pb.IHuodongExchangeArg): pb.HuodongExchangeArg;

        /**
         * Encodes the specified HuodongExchangeArg message. Does not implicitly {@link pb.HuodongExchangeArg.verify|verify} messages.
         * @param message HuodongExchangeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IHuodongExchangeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified HuodongExchangeArg message, length delimited. Does not implicitly {@link pb.HuodongExchangeArg.verify|verify} messages.
         * @param message HuodongExchangeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IHuodongExchangeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HuodongExchangeArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HuodongExchangeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.HuodongExchangeArg;

        /**
         * Decodes a HuodongExchangeArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HuodongExchangeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.HuodongExchangeArg;

        /**
         * Verifies a HuodongExchangeArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a HuodongExchangeReply. */
    interface IHuodongExchangeReply {

        /** HuodongExchangeReply Treasure */
        Treasure?: (pb.IOpenTreasureReply|null);
    }

    /** Represents a HuodongExchangeReply. */
    class HuodongExchangeReply implements IHuodongExchangeReply {

        /**
         * Constructs a new HuodongExchangeReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IHuodongExchangeReply);

        /** HuodongExchangeReply Treasure. */
        public Treasure?: (pb.IOpenTreasureReply|null);

        /**
         * Creates a new HuodongExchangeReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HuodongExchangeReply instance
         */
        public static create(properties?: pb.IHuodongExchangeReply): pb.HuodongExchangeReply;

        /**
         * Encodes the specified HuodongExchangeReply message. Does not implicitly {@link pb.HuodongExchangeReply.verify|verify} messages.
         * @param message HuodongExchangeReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IHuodongExchangeReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified HuodongExchangeReply message, length delimited. Does not implicitly {@link pb.HuodongExchangeReply.verify|verify} messages.
         * @param message HuodongExchangeReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IHuodongExchangeReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HuodongExchangeReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HuodongExchangeReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.HuodongExchangeReply;

        /**
         * Decodes a HuodongExchangeReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HuodongExchangeReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.HuodongExchangeReply;

        /**
         * Verifies a HuodongExchangeReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LevelInfo. */
    interface ILevelInfo {

        /** LevelInfo CurLevel */
        CurLevel?: (number|null);

        /** LevelInfo OpenedTreasureChapters */
        OpenedTreasureChapters?: (number[]|null);

        /** LevelInfo AskHelpLevels */
        AskHelpLevels?: (number[]|null);
    }

    /** Represents a LevelInfo. */
    class LevelInfo implements ILevelInfo {

        /**
         * Constructs a new LevelInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILevelInfo);

        /** LevelInfo CurLevel. */
        public CurLevel: number;

        /** LevelInfo OpenedTreasureChapters. */
        public OpenedTreasureChapters: number[];

        /** LevelInfo AskHelpLevels. */
        public AskHelpLevels: number[];

        /**
         * Creates a new LevelInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LevelInfo instance
         */
        public static create(properties?: pb.ILevelInfo): pb.LevelInfo;

        /**
         * Encodes the specified LevelInfo message. Does not implicitly {@link pb.LevelInfo.verify|verify} messages.
         * @param message LevelInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILevelInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LevelInfo message, length delimited. Does not implicitly {@link pb.LevelInfo.verify|verify} messages.
         * @param message LevelInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILevelInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LevelInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LevelInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LevelInfo;

        /**
         * Decodes a LevelInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LevelInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LevelInfo;

        /**
         * Verifies a LevelInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LevelHelpRecordItem. */
    interface ILevelHelpRecordItem {

        /** LevelHelpRecordItem HelperHeadImgUrl */
        HelperHeadImgUrl?: (string|null);

        /** LevelHelpRecordItem HelperName */
        HelperName?: (string|null);

        /** LevelHelpRecordItem HelpCnt */
        HelpCnt?: (number|null);

        /** LevelHelpRecordItem IsWin */
        IsWin?: (boolean|null);

        /** LevelHelpRecordItem VideoID */
        VideoID?: (number|Long|null);

        /** LevelHelpRecordItem HelperHeadFrame */
        HelperHeadFrame?: (string|null);
    }

    /** Represents a LevelHelpRecordItem. */
    class LevelHelpRecordItem implements ILevelHelpRecordItem {

        /**
         * Constructs a new LevelHelpRecordItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILevelHelpRecordItem);

        /** LevelHelpRecordItem HelperHeadImgUrl. */
        public HelperHeadImgUrl: string;

        /** LevelHelpRecordItem HelperName. */
        public HelperName: string;

        /** LevelHelpRecordItem HelpCnt. */
        public HelpCnt: number;

        /** LevelHelpRecordItem IsWin. */
        public IsWin: boolean;

        /** LevelHelpRecordItem VideoID. */
        public VideoID: (number|Long);

        /** LevelHelpRecordItem HelperHeadFrame. */
        public HelperHeadFrame: string;

        /**
         * Creates a new LevelHelpRecordItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LevelHelpRecordItem instance
         */
        public static create(properties?: pb.ILevelHelpRecordItem): pb.LevelHelpRecordItem;

        /**
         * Encodes the specified LevelHelpRecordItem message. Does not implicitly {@link pb.LevelHelpRecordItem.verify|verify} messages.
         * @param message LevelHelpRecordItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILevelHelpRecordItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LevelHelpRecordItem message, length delimited. Does not implicitly {@link pb.LevelHelpRecordItem.verify|verify} messages.
         * @param message LevelHelpRecordItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILevelHelpRecordItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LevelHelpRecordItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LevelHelpRecordItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LevelHelpRecordItem;

        /**
         * Decodes a LevelHelpRecordItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LevelHelpRecordItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LevelHelpRecordItem;

        /**
         * Verifies a LevelHelpRecordItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LevelHelpRecord. */
    interface ILevelHelpRecord {

        /** LevelHelpRecord Records */
        Records?: (pb.ILevelHelpRecordItem[]|null);
    }

    /** Represents a LevelHelpRecord. */
    class LevelHelpRecord implements ILevelHelpRecord {

        /**
         * Constructs a new LevelHelpRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILevelHelpRecord);

        /** LevelHelpRecord Records. */
        public Records: pb.ILevelHelpRecordItem[];

        /**
         * Creates a new LevelHelpRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LevelHelpRecord instance
         */
        public static create(properties?: pb.ILevelHelpRecord): pb.LevelHelpRecord;

        /**
         * Encodes the specified LevelHelpRecord message. Does not implicitly {@link pb.LevelHelpRecord.verify|verify} messages.
         * @param message LevelHelpRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILevelHelpRecord, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LevelHelpRecord message, length delimited. Does not implicitly {@link pb.LevelHelpRecord.verify|verify} messages.
         * @param message LevelHelpRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILevelHelpRecord, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LevelHelpRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LevelHelpRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LevelHelpRecord;

        /**
         * Decodes a LevelHelpRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LevelHelpRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LevelHelpRecord;

        /**
         * Verifies a LevelHelpRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an OpenLevelTreasureArg. */
    interface IOpenLevelTreasureArg {

        /** OpenLevelTreasureArg ChapterID */
        ChapterID?: (number|null);
    }

    /** Represents an OpenLevelTreasureArg. */
    class OpenLevelTreasureArg implements IOpenLevelTreasureArg {

        /**
         * Constructs a new OpenLevelTreasureArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IOpenLevelTreasureArg);

        /** OpenLevelTreasureArg ChapterID. */
        public ChapterID: number;

        /**
         * Creates a new OpenLevelTreasureArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OpenLevelTreasureArg instance
         */
        public static create(properties?: pb.IOpenLevelTreasureArg): pb.OpenLevelTreasureArg;

        /**
         * Encodes the specified OpenLevelTreasureArg message. Does not implicitly {@link pb.OpenLevelTreasureArg.verify|verify} messages.
         * @param message OpenLevelTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IOpenLevelTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified OpenLevelTreasureArg message, length delimited. Does not implicitly {@link pb.OpenLevelTreasureArg.verify|verify} messages.
         * @param message OpenLevelTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IOpenLevelTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OpenLevelTreasureArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OpenLevelTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.OpenLevelTreasureArg;

        /**
         * Decodes an OpenLevelTreasureArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OpenLevelTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.OpenLevelTreasureArg;

        /**
         * Verifies an OpenLevelTreasureArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BeginLevelBattle. */
    interface IBeginLevelBattle {

        /** BeginLevelBattle LevelId */
        LevelId?: (number|null);
    }

    /** Represents a BeginLevelBattle. */
    class BeginLevelBattle implements IBeginLevelBattle {

        /**
         * Constructs a new BeginLevelBattle.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBeginLevelBattle);

        /** BeginLevelBattle LevelId. */
        public LevelId: number;

        /**
         * Creates a new BeginLevelBattle instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginLevelBattle instance
         */
        public static create(properties?: pb.IBeginLevelBattle): pb.BeginLevelBattle;

        /**
         * Encodes the specified BeginLevelBattle message. Does not implicitly {@link pb.BeginLevelBattle.verify|verify} messages.
         * @param message BeginLevelBattle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBeginLevelBattle, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BeginLevelBattle message, length delimited. Does not implicitly {@link pb.BeginLevelBattle.verify|verify} messages.
         * @param message BeginLevelBattle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBeginLevelBattle, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeginLevelBattle message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginLevelBattle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BeginLevelBattle;

        /**
         * Decodes a BeginLevelBattle message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginLevelBattle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BeginLevelBattle;

        /**
         * Verifies a BeginLevelBattle message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LevelFightResult. */
    interface ILevelFightResult {

        /** LevelFightResult IsWin */
        IsWin?: (boolean|null);

        /** LevelFightResult UnlockLevel */
        UnlockLevel?: (number|null);

        /** LevelFightResult ChangeCards */
        ChangeCards?: (pb.IChangeCardInfo[]|null);

        /** LevelFightResult Gold */
        Gold?: (number|null);
    }

    /** Represents a LevelFightResult. */
    class LevelFightResult implements ILevelFightResult {

        /**
         * Constructs a new LevelFightResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILevelFightResult);

        /** LevelFightResult IsWin. */
        public IsWin: boolean;

        /** LevelFightResult UnlockLevel. */
        public UnlockLevel: number;

        /** LevelFightResult ChangeCards. */
        public ChangeCards: pb.IChangeCardInfo[];

        /** LevelFightResult Gold. */
        public Gold: number;

        /**
         * Creates a new LevelFightResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LevelFightResult instance
         */
        public static create(properties?: pb.ILevelFightResult): pb.LevelFightResult;

        /**
         * Encodes the specified LevelFightResult message. Does not implicitly {@link pb.LevelFightResult.verify|verify} messages.
         * @param message LevelFightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILevelFightResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LevelFightResult message, length delimited. Does not implicitly {@link pb.LevelFightResult.verify|verify} messages.
         * @param message LevelFightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILevelFightResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LevelFightResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LevelFightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LevelFightResult;

        /**
         * Decodes a LevelFightResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LevelFightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LevelFightResult;

        /**
         * Verifies a LevelFightResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LevelChooseCard. */
    interface ILevelChooseCard {

        /** LevelChooseCard Cards */
        Cards?: (number[]|null);
    }

    /** Represents a LevelChooseCard. */
    class LevelChooseCard implements ILevelChooseCard {

        /**
         * Constructs a new LevelChooseCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILevelChooseCard);

        /** LevelChooseCard Cards. */
        public Cards: number[];

        /**
         * Creates a new LevelChooseCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LevelChooseCard instance
         */
        public static create(properties?: pb.ILevelChooseCard): pb.LevelChooseCard;

        /**
         * Encodes the specified LevelChooseCard message. Does not implicitly {@link pb.LevelChooseCard.verify|verify} messages.
         * @param message LevelChooseCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILevelChooseCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LevelChooseCard message, length delimited. Does not implicitly {@link pb.LevelChooseCard.verify|verify} messages.
         * @param message LevelChooseCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILevelChooseCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LevelChooseCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LevelChooseCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LevelChooseCard;

        /**
         * Decodes a LevelChooseCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LevelChooseCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LevelChooseCard;

        /**
         * Verifies a LevelChooseCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LevelBattle. */
    interface ILevelBattle {

        /** LevelBattle Desk */
        Desk?: (pb.IFightDesk|null);

        /** LevelBattle ChoiceCards */
        ChoiceCards?: (pb.ICard[]|null);

        /** LevelBattle NeedChooseNum */
        NeedChooseNum?: (number|null);

        /** LevelBattle LevelID */
        LevelID?: (number|null);
    }

    /** Represents a LevelBattle. */
    class LevelBattle implements ILevelBattle {

        /**
         * Constructs a new LevelBattle.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILevelBattle);

        /** LevelBattle Desk. */
        public Desk?: (pb.IFightDesk|null);

        /** LevelBattle ChoiceCards. */
        public ChoiceCards: pb.ICard[];

        /** LevelBattle NeedChooseNum. */
        public NeedChooseNum: number;

        /** LevelBattle LevelID. */
        public LevelID: number;

        /**
         * Creates a new LevelBattle instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LevelBattle instance
         */
        public static create(properties?: pb.ILevelBattle): pb.LevelBattle;

        /**
         * Encodes the specified LevelBattle message. Does not implicitly {@link pb.LevelBattle.verify|verify} messages.
         * @param message LevelBattle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILevelBattle, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LevelBattle message, length delimited. Does not implicitly {@link pb.LevelBattle.verify|verify} messages.
         * @param message LevelBattle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILevelBattle, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LevelBattle message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LevelBattle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LevelBattle;

        /**
         * Decodes a LevelBattle message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LevelBattle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LevelBattle;

        /**
         * Verifies a LevelBattle message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ChapterUnlock. */
    interface IChapterUnlock {

        /** ChapterUnlock Chapter */
        Chapter?: (number|null);
    }

    /** Represents a ChapterUnlock. */
    class ChapterUnlock implements IChapterUnlock {

        /**
         * Constructs a new ChapterUnlock.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IChapterUnlock);

        /** ChapterUnlock Chapter. */
        public Chapter: number;

        /**
         * Creates a new ChapterUnlock instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChapterUnlock instance
         */
        public static create(properties?: pb.IChapterUnlock): pb.ChapterUnlock;

        /**
         * Encodes the specified ChapterUnlock message. Does not implicitly {@link pb.ChapterUnlock.verify|verify} messages.
         * @param message ChapterUnlock message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IChapterUnlock, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChapterUnlock message, length delimited. Does not implicitly {@link pb.ChapterUnlock.verify|verify} messages.
         * @param message ChapterUnlock message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IChapterUnlock, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChapterUnlock message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChapterUnlock
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ChapterUnlock;

        /**
         * Decodes a ChapterUnlock message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChapterUnlock
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ChapterUnlock;

        /**
         * Verifies a ChapterUnlock message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LevelHelpArg. */
    interface ILevelHelpArg {

        /** LevelHelpArg HelpUid */
        HelpUid?: (number|Long|null);

        /** LevelHelpArg LevelID */
        LevelID?: (number|null);
    }

    /** Represents a LevelHelpArg. */
    class LevelHelpArg implements ILevelHelpArg {

        /**
         * Constructs a new LevelHelpArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILevelHelpArg);

        /** LevelHelpArg HelpUid. */
        public HelpUid: (number|Long);

        /** LevelHelpArg LevelID. */
        public LevelID: number;

        /**
         * Creates a new LevelHelpArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LevelHelpArg instance
         */
        public static create(properties?: pb.ILevelHelpArg): pb.LevelHelpArg;

        /**
         * Encodes the specified LevelHelpArg message. Does not implicitly {@link pb.LevelHelpArg.verify|verify} messages.
         * @param message LevelHelpArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILevelHelpArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LevelHelpArg message, length delimited. Does not implicitly {@link pb.LevelHelpArg.verify|verify} messages.
         * @param message LevelHelpArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILevelHelpArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LevelHelpArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LevelHelpArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LevelHelpArg;

        /**
         * Decodes a LevelHelpArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LevelHelpArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LevelHelpArg;

        /**
         * Verifies a LevelHelpArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LevelBeHelpArg. */
    interface ILevelBeHelpArg {

        /** LevelBeHelpArg HelperName */
        HelperName?: (string|null);

        /** LevelBeHelpArg LevelID */
        LevelID?: (number|null);
    }

    /** Represents a LevelBeHelpArg. */
    class LevelBeHelpArg implements ILevelBeHelpArg {

        /**
         * Constructs a new LevelBeHelpArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILevelBeHelpArg);

        /** LevelBeHelpArg HelperName. */
        public HelperName: string;

        /** LevelBeHelpArg LevelID. */
        public LevelID: number;

        /**
         * Creates a new LevelBeHelpArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LevelBeHelpArg instance
         */
        public static create(properties?: pb.ILevelBeHelpArg): pb.LevelBeHelpArg;

        /**
         * Encodes the specified LevelBeHelpArg message. Does not implicitly {@link pb.LevelBeHelpArg.verify|verify} messages.
         * @param message LevelBeHelpArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILevelBeHelpArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LevelBeHelpArg message, length delimited. Does not implicitly {@link pb.LevelBeHelpArg.verify|verify} messages.
         * @param message LevelBeHelpArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILevelBeHelpArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LevelBeHelpArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LevelBeHelpArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LevelBeHelpArg;

        /**
         * Decodes a LevelBeHelpArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LevelBeHelpArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LevelBeHelpArg;

        /**
         * Verifies a LevelBeHelpArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TargetLevel. */
    interface ITargetLevel {

        /** TargetLevel LevelID */
        LevelID?: (number|null);
    }

    /** Represents a TargetLevel. */
    class TargetLevel implements ITargetLevel {

        /**
         * Constructs a new TargetLevel.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetLevel);

        /** TargetLevel LevelID. */
        public LevelID: number;

        /**
         * Creates a new TargetLevel instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetLevel instance
         */
        public static create(properties?: pb.ITargetLevel): pb.TargetLevel;

        /**
         * Encodes the specified TargetLevel message. Does not implicitly {@link pb.TargetLevel.verify|verify} messages.
         * @param message TargetLevel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetLevel, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetLevel message, length delimited. Does not implicitly {@link pb.TargetLevel.verify|verify} messages.
         * @param message TargetLevel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetLevel, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetLevel message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetLevel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetLevel;

        /**
         * Decodes a TargetLevel message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetLevel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetLevel;

        /**
         * Verifies a TargetLevel message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WatchHelpVideoArg. */
    interface IWatchHelpVideoArg {

        /** WatchHelpVideoArg VideoID */
        VideoID?: (number|Long|null);
    }

    /** Represents a WatchHelpVideoArg. */
    class WatchHelpVideoArg implements IWatchHelpVideoArg {

        /**
         * Constructs a new WatchHelpVideoArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWatchHelpVideoArg);

        /** WatchHelpVideoArg VideoID. */
        public VideoID: (number|Long);

        /**
         * Creates a new WatchHelpVideoArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchHelpVideoArg instance
         */
        public static create(properties?: pb.IWatchHelpVideoArg): pb.WatchHelpVideoArg;

        /**
         * Encodes the specified WatchHelpVideoArg message. Does not implicitly {@link pb.WatchHelpVideoArg.verify|verify} messages.
         * @param message WatchHelpVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWatchHelpVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WatchHelpVideoArg message, length delimited. Does not implicitly {@link pb.WatchHelpVideoArg.verify|verify} messages.
         * @param message WatchHelpVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWatchHelpVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WatchHelpVideoArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchHelpVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchHelpVideoArg;

        /**
         * Decodes a WatchHelpVideoArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchHelpVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchHelpVideoArg;

        /**
         * Verifies a WatchHelpVideoArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchLevelVideoIDArg. */
    interface IFetchLevelVideoIDArg {

        /** FetchLevelVideoIDArg LevelID */
        LevelID?: (number|null);
    }

    /** Represents a FetchLevelVideoIDArg. */
    class FetchLevelVideoIDArg implements IFetchLevelVideoIDArg {

        /**
         * Constructs a new FetchLevelVideoIDArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchLevelVideoIDArg);

        /** FetchLevelVideoIDArg LevelID. */
        public LevelID: number;

        /**
         * Creates a new FetchLevelVideoIDArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchLevelVideoIDArg instance
         */
        public static create(properties?: pb.IFetchLevelVideoIDArg): pb.FetchLevelVideoIDArg;

        /**
         * Encodes the specified FetchLevelVideoIDArg message. Does not implicitly {@link pb.FetchLevelVideoIDArg.verify|verify} messages.
         * @param message FetchLevelVideoIDArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchLevelVideoIDArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchLevelVideoIDArg message, length delimited. Does not implicitly {@link pb.FetchLevelVideoIDArg.verify|verify} messages.
         * @param message FetchLevelVideoIDArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchLevelVideoIDArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchLevelVideoIDArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchLevelVideoIDArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchLevelVideoIDArg;

        /**
         * Decodes a FetchLevelVideoIDArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchLevelVideoIDArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchLevelVideoIDArg;

        /**
         * Verifies a FetchLevelVideoIDArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchLevelVideoIDRely. */
    interface IFetchLevelVideoIDRely {

        /** FetchLevelVideoIDRely VideoID */
        VideoID?: (number|Long|null);
    }

    /** Represents a FetchLevelVideoIDRely. */
    class FetchLevelVideoIDRely implements IFetchLevelVideoIDRely {

        /**
         * Constructs a new FetchLevelVideoIDRely.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchLevelVideoIDRely);

        /** FetchLevelVideoIDRely VideoID. */
        public VideoID: (number|Long);

        /**
         * Creates a new FetchLevelVideoIDRely instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchLevelVideoIDRely instance
         */
        public static create(properties?: pb.IFetchLevelVideoIDRely): pb.FetchLevelVideoIDRely;

        /**
         * Encodes the specified FetchLevelVideoIDRely message. Does not implicitly {@link pb.FetchLevelVideoIDRely.verify|verify} messages.
         * @param message FetchLevelVideoIDRely message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchLevelVideoIDRely, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchLevelVideoIDRely message, length delimited. Does not implicitly {@link pb.FetchLevelVideoIDRely.verify|verify} messages.
         * @param message FetchLevelVideoIDRely message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchLevelVideoIDRely, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchLevelVideoIDRely message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchLevelVideoIDRely
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchLevelVideoIDRely;

        /**
         * Decodes a FetchLevelVideoIDRely message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchLevelVideoIDRely
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchLevelVideoIDRely;

        /**
         * Verifies a FetchLevelVideoIDRely message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchMailListArg. */
    interface IFetchMailListArg {

        /** FetchMailListArg MinMailID */
        MinMailID?: (number|null);
    }

    /** Represents a FetchMailListArg. */
    class FetchMailListArg implements IFetchMailListArg {

        /**
         * Constructs a new FetchMailListArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchMailListArg);

        /** FetchMailListArg MinMailID. */
        public MinMailID: number;

        /**
         * Creates a new FetchMailListArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchMailListArg instance
         */
        public static create(properties?: pb.IFetchMailListArg): pb.FetchMailListArg;

        /**
         * Encodes the specified FetchMailListArg message. Does not implicitly {@link pb.FetchMailListArg.verify|verify} messages.
         * @param message FetchMailListArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchMailListArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchMailListArg message, length delimited. Does not implicitly {@link pb.FetchMailListArg.verify|verify} messages.
         * @param message FetchMailListArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchMailListArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchMailListArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchMailListArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchMailListArg;

        /**
         * Decodes a FetchMailListArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchMailListArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchMailListArg;

        /**
         * Verifies a FetchMailListArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** MailRewardType enum. */
    enum MailRewardType {
        MrtGold = 0,
        MrtJade = 1,
        MrtCard = 2,
        MrtTreasure = 3,
        MrtCardSkin = 4,
        MrtHeadFrame = 5,
        MrtFeats = 6,
        MrtPrestige = 7,
        MrtEquip = 8,
        MrtEmoji = 9,
        MrtContribution = 10,
        MrtBowlder = 11
    }

    /** Properties of a MailReward. */
    interface IMailReward {

        /** MailReward Type */
        Type?: (pb.MailRewardType|null);

        /** MailReward Amount */
        Amount?: (number|null);

        /** MailReward CardID */
        CardID?: (number|null);

        /** MailReward ItemID */
        ItemID?: (string|null);

        /** MailReward EmojiTeam */
        EmojiTeam?: (number|null);
    }

    /** Represents a MailReward. */
    class MailReward implements IMailReward {

        /**
         * Constructs a new MailReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMailReward);

        /** MailReward Type. */
        public Type: pb.MailRewardType;

        /** MailReward Amount. */
        public Amount: number;

        /** MailReward CardID. */
        public CardID: number;

        /** MailReward ItemID. */
        public ItemID: string;

        /** MailReward EmojiTeam. */
        public EmojiTeam: number;

        /**
         * Creates a new MailReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailReward instance
         */
        public static create(properties?: pb.IMailReward): pb.MailReward;

        /**
         * Encodes the specified MailReward message. Does not implicitly {@link pb.MailReward.verify|verify} messages.
         * @param message MailReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMailReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MailReward message, length delimited. Does not implicitly {@link pb.MailReward.verify|verify} messages.
         * @param message MailReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMailReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MailReward;

        /**
         * Decodes a MailReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MailReward;

        /**
         * Verifies a MailReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** MailTypeEnum enum. */
    enum MailTypeEnum {
        CUSTOM = 0,
        SeasonPvpBegin = 1,
        SeasonPvpEnd = 2,
        FbAdvert = 3,
        KingReward = 4,
        ChristmasReward = 5,
        YuandanReward = 6,
        CampaignUnified = 7
    }

    /** Properties of a MailSeasonPvpBeginArg. */
    interface IMailSeasonPvpBeginArg {

        /** MailSeasonPvpBeginArg PvpLevel */
        PvpLevel?: (number|null);
    }

    /** Represents a MailSeasonPvpBeginArg. */
    class MailSeasonPvpBeginArg implements IMailSeasonPvpBeginArg {

        /**
         * Constructs a new MailSeasonPvpBeginArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMailSeasonPvpBeginArg);

        /** MailSeasonPvpBeginArg PvpLevel. */
        public PvpLevel: number;

        /**
         * Creates a new MailSeasonPvpBeginArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailSeasonPvpBeginArg instance
         */
        public static create(properties?: pb.IMailSeasonPvpBeginArg): pb.MailSeasonPvpBeginArg;

        /**
         * Encodes the specified MailSeasonPvpBeginArg message. Does not implicitly {@link pb.MailSeasonPvpBeginArg.verify|verify} messages.
         * @param message MailSeasonPvpBeginArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMailSeasonPvpBeginArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MailSeasonPvpBeginArg message, length delimited. Does not implicitly {@link pb.MailSeasonPvpBeginArg.verify|verify} messages.
         * @param message MailSeasonPvpBeginArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMailSeasonPvpBeginArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailSeasonPvpBeginArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailSeasonPvpBeginArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MailSeasonPvpBeginArg;

        /**
         * Decodes a MailSeasonPvpBeginArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailSeasonPvpBeginArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MailSeasonPvpBeginArg;

        /**
         * Verifies a MailSeasonPvpBeginArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MailSeasonPvpEndArg. */
    interface IMailSeasonPvpEndArg {

        /** MailSeasonPvpEndArg WinDiff */
        WinDiff?: (number|null);
    }

    /** Represents a MailSeasonPvpEndArg. */
    class MailSeasonPvpEndArg implements IMailSeasonPvpEndArg {

        /**
         * Constructs a new MailSeasonPvpEndArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMailSeasonPvpEndArg);

        /** MailSeasonPvpEndArg WinDiff. */
        public WinDiff: number;

        /**
         * Creates a new MailSeasonPvpEndArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailSeasonPvpEndArg instance
         */
        public static create(properties?: pb.IMailSeasonPvpEndArg): pb.MailSeasonPvpEndArg;

        /**
         * Encodes the specified MailSeasonPvpEndArg message. Does not implicitly {@link pb.MailSeasonPvpEndArg.verify|verify} messages.
         * @param message MailSeasonPvpEndArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMailSeasonPvpEndArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MailSeasonPvpEndArg message, length delimited. Does not implicitly {@link pb.MailSeasonPvpEndArg.verify|verify} messages.
         * @param message MailSeasonPvpEndArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMailSeasonPvpEndArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailSeasonPvpEndArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailSeasonPvpEndArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MailSeasonPvpEndArg;

        /**
         * Decodes a MailSeasonPvpEndArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailSeasonPvpEndArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MailSeasonPvpEndArg;

        /**
         * Verifies a MailSeasonPvpEndArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MailCampaignUnifiedArg. */
    interface IMailCampaignUnifiedArg {

        /** MailCampaignUnifiedArg YourMajestyName */
        YourMajestyName?: (string|null);

        /** MailCampaignUnifiedArg CountryName */
        CountryName?: (string|null);
    }

    /** Represents a MailCampaignUnifiedArg. */
    class MailCampaignUnifiedArg implements IMailCampaignUnifiedArg {

        /**
         * Constructs a new MailCampaignUnifiedArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMailCampaignUnifiedArg);

        /** MailCampaignUnifiedArg YourMajestyName. */
        public YourMajestyName: string;

        /** MailCampaignUnifiedArg CountryName. */
        public CountryName: string;

        /**
         * Creates a new MailCampaignUnifiedArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailCampaignUnifiedArg instance
         */
        public static create(properties?: pb.IMailCampaignUnifiedArg): pb.MailCampaignUnifiedArg;

        /**
         * Encodes the specified MailCampaignUnifiedArg message. Does not implicitly {@link pb.MailCampaignUnifiedArg.verify|verify} messages.
         * @param message MailCampaignUnifiedArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMailCampaignUnifiedArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MailCampaignUnifiedArg message, length delimited. Does not implicitly {@link pb.MailCampaignUnifiedArg.verify|verify} messages.
         * @param message MailCampaignUnifiedArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMailCampaignUnifiedArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailCampaignUnifiedArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailCampaignUnifiedArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MailCampaignUnifiedArg;

        /**
         * Decodes a MailCampaignUnifiedArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailCampaignUnifiedArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MailCampaignUnifiedArg;

        /**
         * Verifies a MailCampaignUnifiedArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a Mail. */
    interface IMail {

        /** Mail ID */
        ID?: (number|null);

        /** Mail Title */
        Title?: (string|null);

        /** Mail Content */
        Content?: (string|null);

        /** Mail Time */
        Time?: (number|null);

        /** Mail IsReward */
        IsReward?: (boolean|null);

        /** Mail SenderName */
        SenderName?: (string|null);

        /** Mail Rewards */
        Rewards?: (pb.IMailReward[]|null);

        /** Mail IsRead */
        IsRead?: (boolean|null);

        /** Mail MailType */
        MailType?: (pb.MailTypeEnum|null);

        /** Mail Arg */
        Arg?: (Uint8Array|null);
    }

    /** Represents a Mail. */
    class Mail implements IMail {

        /**
         * Constructs a new Mail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMail);

        /** Mail ID. */
        public ID: number;

        /** Mail Title. */
        public Title: string;

        /** Mail Content. */
        public Content: string;

        /** Mail Time. */
        public Time: number;

        /** Mail IsReward. */
        public IsReward: boolean;

        /** Mail SenderName. */
        public SenderName: string;

        /** Mail Rewards. */
        public Rewards: pb.IMailReward[];

        /** Mail IsRead. */
        public IsRead: boolean;

        /** Mail MailType. */
        public MailType: pb.MailTypeEnum;

        /** Mail Arg. */
        public Arg: Uint8Array;

        /**
         * Creates a new Mail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Mail instance
         */
        public static create(properties?: pb.IMail): pb.Mail;

        /**
         * Encodes the specified Mail message. Does not implicitly {@link pb.Mail.verify|verify} messages.
         * @param message Mail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMail, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Mail message, length delimited. Does not implicitly {@link pb.Mail.verify|verify} messages.
         * @param message Mail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMail, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Mail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Mail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Mail;

        /**
         * Decodes a Mail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Mail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Mail;

        /**
         * Verifies a Mail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MailList. */
    interface IMailList {

        /** MailList Mails */
        Mails?: (pb.IMail[]|null);

        /** MailList HasMore */
        HasMore?: (boolean|null);
    }

    /** Represents a MailList. */
    class MailList implements IMailList {

        /**
         * Constructs a new MailList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMailList);

        /** MailList Mails. */
        public Mails: pb.IMail[];

        /** MailList HasMore. */
        public HasMore: boolean;

        /**
         * Creates a new MailList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailList instance
         */
        public static create(properties?: pb.IMailList): pb.MailList;

        /**
         * Encodes the specified MailList message. Does not implicitly {@link pb.MailList.verify|verify} messages.
         * @param message MailList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMailList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MailList message, length delimited. Does not implicitly {@link pb.MailList.verify|verify} messages.
         * @param message MailList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMailList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MailList;

        /**
         * Decodes a MailList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MailList;

        /**
         * Verifies a MailList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetMailRewardArg. */
    interface IGetMailRewardArg {

        /** GetMailRewardArg ID */
        ID?: (number|null);
    }

    /** Represents a GetMailRewardArg. */
    class GetMailRewardArg implements IGetMailRewardArg {

        /**
         * Constructs a new GetMailRewardArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetMailRewardArg);

        /** GetMailRewardArg ID. */
        public ID: number;

        /**
         * Creates a new GetMailRewardArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetMailRewardArg instance
         */
        public static create(properties?: pb.IGetMailRewardArg): pb.GetMailRewardArg;

        /**
         * Encodes the specified GetMailRewardArg message. Does not implicitly {@link pb.GetMailRewardArg.verify|verify} messages.
         * @param message GetMailRewardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetMailRewardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetMailRewardArg message, length delimited. Does not implicitly {@link pb.GetMailRewardArg.verify|verify} messages.
         * @param message GetMailRewardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetMailRewardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetMailRewardArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetMailRewardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetMailRewardArg;

        /**
         * Decodes a GetMailRewardArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetMailRewardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetMailRewardArg;

        /**
         * Verifies a GetMailRewardArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ReadMailArg. */
    interface IReadMailArg {

        /** ReadMailArg ID */
        ID?: (number|null);
    }

    /** Represents a ReadMailArg. */
    class ReadMailArg implements IReadMailArg {

        /**
         * Constructs a new ReadMailArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IReadMailArg);

        /** ReadMailArg ID. */
        public ID: number;

        /**
         * Creates a new ReadMailArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReadMailArg instance
         */
        public static create(properties?: pb.IReadMailArg): pb.ReadMailArg;

        /**
         * Encodes the specified ReadMailArg message. Does not implicitly {@link pb.ReadMailArg.verify|verify} messages.
         * @param message ReadMailArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IReadMailArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReadMailArg message, length delimited. Does not implicitly {@link pb.ReadMailArg.verify|verify} messages.
         * @param message ReadMailArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IReadMailArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReadMailArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReadMailArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ReadMailArg;

        /**
         * Decodes a ReadMailArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReadMailArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ReadMailArg;

        /**
         * Verifies a ReadMailArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MailRewardCard. */
    interface IMailRewardCard {

        /** MailRewardCard CardID */
        CardID?: (number|null);

        /** MailRewardCard Amount */
        Amount?: (number|null);
    }

    /** Represents a MailRewardCard. */
    class MailRewardCard implements IMailRewardCard {

        /**
         * Constructs a new MailRewardCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMailRewardCard);

        /** MailRewardCard CardID. */
        public CardID: number;

        /** MailRewardCard Amount. */
        public Amount: number;

        /**
         * Creates a new MailRewardCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailRewardCard instance
         */
        public static create(properties?: pb.IMailRewardCard): pb.MailRewardCard;

        /**
         * Encodes the specified MailRewardCard message. Does not implicitly {@link pb.MailRewardCard.verify|verify} messages.
         * @param message MailRewardCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMailRewardCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MailRewardCard message, length delimited. Does not implicitly {@link pb.MailRewardCard.verify|verify} messages.
         * @param message MailRewardCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMailRewardCard, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailRewardCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailRewardCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MailRewardCard;

        /**
         * Decodes a MailRewardCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailRewardCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MailRewardCard;

        /**
         * Verifies a MailRewardCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MailRewardAmountArg. */
    interface IMailRewardAmountArg {

        /** MailRewardAmountArg Type */
        Type?: (pb.MailRewardType|null);

        /** MailRewardAmountArg Amount */
        Amount?: (number|null);
    }

    /** Represents a MailRewardAmountArg. */
    class MailRewardAmountArg implements IMailRewardAmountArg {

        /**
         * Constructs a new MailRewardAmountArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMailRewardAmountArg);

        /** MailRewardAmountArg Type. */
        public Type: pb.MailRewardType;

        /** MailRewardAmountArg Amount. */
        public Amount: number;

        /**
         * Creates a new MailRewardAmountArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailRewardAmountArg instance
         */
        public static create(properties?: pb.IMailRewardAmountArg): pb.MailRewardAmountArg;

        /**
         * Encodes the specified MailRewardAmountArg message. Does not implicitly {@link pb.MailRewardAmountArg.verify|verify} messages.
         * @param message MailRewardAmountArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMailRewardAmountArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MailRewardAmountArg message, length delimited. Does not implicitly {@link pb.MailRewardAmountArg.verify|verify} messages.
         * @param message MailRewardAmountArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMailRewardAmountArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailRewardAmountArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailRewardAmountArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MailRewardAmountArg;

        /**
         * Decodes a MailRewardAmountArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailRewardAmountArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MailRewardAmountArg;

        /**
         * Verifies a MailRewardAmountArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MailRewardItemArg. */
    interface IMailRewardItemArg {

        /** MailRewardItemArg Type */
        Type?: (pb.MailRewardType|null);

        /** MailRewardItemArg ItemID */
        ItemID?: (string|null);
    }

    /** Represents a MailRewardItemArg. */
    class MailRewardItemArg implements IMailRewardItemArg {

        /**
         * Constructs a new MailRewardItemArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMailRewardItemArg);

        /** MailRewardItemArg Type. */
        public Type: pb.MailRewardType;

        /** MailRewardItemArg ItemID. */
        public ItemID: string;

        /**
         * Creates a new MailRewardItemArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailRewardItemArg instance
         */
        public static create(properties?: pb.IMailRewardItemArg): pb.MailRewardItemArg;

        /**
         * Encodes the specified MailRewardItemArg message. Does not implicitly {@link pb.MailRewardItemArg.verify|verify} messages.
         * @param message MailRewardItemArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMailRewardItemArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MailRewardItemArg message, length delimited. Does not implicitly {@link pb.MailRewardItemArg.verify|verify} messages.
         * @param message MailRewardItemArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMailRewardItemArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailRewardItemArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailRewardItemArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MailRewardItemArg;

        /**
         * Decodes a MailRewardItemArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailRewardItemArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MailRewardItemArg;

        /**
         * Verifies a MailRewardItemArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MailRewardReply. */
    interface IMailRewardReply {

        /** MailRewardReply AmountRewards */
        AmountRewards?: (pb.IMailRewardAmountArg[]|null);

        /** MailRewardReply TreasureRewards */
        TreasureRewards?: (pb.IOpenTreasureReply[]|null);

        /** MailRewardReply Cards */
        Cards?: (pb.IMailRewardCard[]|null);

        /** MailRewardReply ItemRewards */
        ItemRewards?: (pb.IMailRewardItemArg[]|null);

        /** MailRewardReply EmojiTeams */
        EmojiTeams?: (number[]|null);
    }

    /** Represents a MailRewardReply. */
    class MailRewardReply implements IMailRewardReply {

        /**
         * Constructs a new MailRewardReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMailRewardReply);

        /** MailRewardReply AmountRewards. */
        public AmountRewards: pb.IMailRewardAmountArg[];

        /** MailRewardReply TreasureRewards. */
        public TreasureRewards: pb.IOpenTreasureReply[];

        /** MailRewardReply Cards. */
        public Cards: pb.IMailRewardCard[];

        /** MailRewardReply ItemRewards. */
        public ItemRewards: pb.IMailRewardItemArg[];

        /** MailRewardReply EmojiTeams. */
        public EmojiTeams: number[];

        /**
         * Creates a new MailRewardReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailRewardReply instance
         */
        public static create(properties?: pb.IMailRewardReply): pb.MailRewardReply;

        /**
         * Encodes the specified MailRewardReply message. Does not implicitly {@link pb.MailRewardReply.verify|verify} messages.
         * @param message MailRewardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMailRewardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MailRewardReply message, length delimited. Does not implicitly {@link pb.MailRewardReply.verify|verify} messages.
         * @param message MailRewardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMailRewardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailRewardReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailRewardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MailRewardReply;

        /**
         * Decodes a MailRewardReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailRewardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MailRewardReply;

        /**
         * Verifies a MailRewardReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a Mission. */
    interface IMission {

        /** Mission MissionID */
        MissionID?: (number|null);

        /** Mission CurCnt */
        CurCnt?: (number|null);

        /** Mission IsReward */
        IsReward?: (boolean|null);

        /** Mission ID */
        ID?: (number|null);
    }

    /** Represents a Mission. */
    class Mission implements IMission {

        /**
         * Constructs a new Mission.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMission);

        /** Mission MissionID. */
        public MissionID: number;

        /** Mission CurCnt. */
        public CurCnt: number;

        /** Mission IsReward. */
        public IsReward: boolean;

        /** Mission ID. */
        public ID: number;

        /**
         * Creates a new Mission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Mission instance
         */
        public static create(properties?: pb.IMission): pb.Mission;

        /**
         * Encodes the specified Mission message. Does not implicitly {@link pb.Mission.verify|verify} messages.
         * @param message Mission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Mission message, length delimited. Does not implicitly {@link pb.Mission.verify|verify} messages.
         * @param message Mission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Mission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Mission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Mission;

        /**
         * Decodes a Mission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Mission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Mission;

        /**
         * Verifies a Mission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MissionTreasure. */
    interface IMissionTreasure {

        /** MissionTreasure TreasureModelID */
        TreasureModelID?: (string|null);

        /** MissionTreasure CurCnt */
        CurCnt?: (number|null);
    }

    /** Represents a MissionTreasure. */
    class MissionTreasure implements IMissionTreasure {

        /**
         * Constructs a new MissionTreasure.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMissionTreasure);

        /** MissionTreasure TreasureModelID. */
        public TreasureModelID: string;

        /** MissionTreasure CurCnt. */
        public CurCnt: number;

        /**
         * Creates a new MissionTreasure instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MissionTreasure instance
         */
        public static create(properties?: pb.IMissionTreasure): pb.MissionTreasure;

        /**
         * Encodes the specified MissionTreasure message. Does not implicitly {@link pb.MissionTreasure.verify|verify} messages.
         * @param message MissionTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMissionTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MissionTreasure message, length delimited. Does not implicitly {@link pb.MissionTreasure.verify|verify} messages.
         * @param message MissionTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMissionTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MissionTreasure message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MissionTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MissionTreasure;

        /**
         * Decodes a MissionTreasure message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MissionTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MissionTreasure;

        /**
         * Verifies a MissionTreasure message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MissionInfo. */
    interface IMissionInfo {

        /** MissionInfo Missions */
        Missions?: (pb.IMission[]|null);

        /** MissionInfo Treasure */
        Treasure?: (pb.IMissionTreasure|null);

        /** MissionInfo CanRefresh */
        CanRefresh?: (boolean|null);

        /** MissionInfo RefreshRemainTime */
        RefreshRemainTime?: (number|null);
    }

    /** Represents a MissionInfo. */
    class MissionInfo implements IMissionInfo {

        /**
         * Constructs a new MissionInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMissionInfo);

        /** MissionInfo Missions. */
        public Missions: pb.IMission[];

        /** MissionInfo Treasure. */
        public Treasure?: (pb.IMissionTreasure|null);

        /** MissionInfo CanRefresh. */
        public CanRefresh: boolean;

        /** MissionInfo RefreshRemainTime. */
        public RefreshRemainTime: number;

        /**
         * Creates a new MissionInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MissionInfo instance
         */
        public static create(properties?: pb.IMissionInfo): pb.MissionInfo;

        /**
         * Encodes the specified MissionInfo message. Does not implicitly {@link pb.MissionInfo.verify|verify} messages.
         * @param message MissionInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMissionInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MissionInfo message, length delimited. Does not implicitly {@link pb.MissionInfo.verify|verify} messages.
         * @param message MissionInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMissionInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MissionInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MissionInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MissionInfo;

        /**
         * Decodes a MissionInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MissionInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MissionInfo;

        /**
         * Verifies a MissionInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TargetMission. */
    interface ITargetMission {

        /** TargetMission ID */
        ID?: (number|null);
    }

    /** Represents a TargetMission. */
    class TargetMission implements ITargetMission {

        /**
         * Constructs a new TargetMission.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetMission);

        /** TargetMission ID. */
        public ID: number;

        /**
         * Creates a new TargetMission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetMission instance
         */
        public static create(properties?: pb.ITargetMission): pb.TargetMission;

        /**
         * Encodes the specified TargetMission message. Does not implicitly {@link pb.TargetMission.verify|verify} messages.
         * @param message TargetMission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetMission message, length delimited. Does not implicitly {@link pb.TargetMission.verify|verify} messages.
         * @param message TargetMission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetMission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetMission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetMission;

        /**
         * Decodes a TargetMission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetMission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetMission;

        /**
         * Verifies a TargetMission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a MissionReward. */
    interface IMissionReward {

        /** MissionReward Jade */
        Jade?: (number|null);

        /** MissionReward Gold */
        Gold?: (number|null);

        /** MissionReward Bowlder */
        Bowlder?: (number|null);
    }

    /** Represents a MissionReward. */
    class MissionReward implements IMissionReward {

        /**
         * Constructs a new MissionReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMissionReward);

        /** MissionReward Jade. */
        public Jade: number;

        /** MissionReward Gold. */
        public Gold: number;

        /** MissionReward Bowlder. */
        public Bowlder: number;

        /**
         * Creates a new MissionReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MissionReward instance
         */
        public static create(properties?: pb.IMissionReward): pb.MissionReward;

        /**
         * Encodes the specified MissionReward message. Does not implicitly {@link pb.MissionReward.verify|verify} messages.
         * @param message MissionReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMissionReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MissionReward message, length delimited. Does not implicitly {@link pb.MissionReward.verify|verify} messages.
         * @param message MissionReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMissionReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MissionReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MissionReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.MissionReward;

        /**
         * Decodes a MissionReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MissionReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.MissionReward;

        /**
         * Verifies a MissionReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an OpenMissionTreasureReply. */
    interface IOpenMissionTreasureReply {

        /** OpenMissionTreasureReply TreasureReward */
        TreasureReward?: (pb.IOpenTreasureReply|null);

        /** OpenMissionTreasureReply NextTreasure */
        NextTreasure?: (pb.IMissionTreasure|null);
    }

    /** Represents an OpenMissionTreasureReply. */
    class OpenMissionTreasureReply implements IOpenMissionTreasureReply {

        /**
         * Constructs a new OpenMissionTreasureReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IOpenMissionTreasureReply);

        /** OpenMissionTreasureReply TreasureReward. */
        public TreasureReward?: (pb.IOpenTreasureReply|null);

        /** OpenMissionTreasureReply NextTreasure. */
        public NextTreasure?: (pb.IMissionTreasure|null);

        /**
         * Creates a new OpenMissionTreasureReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OpenMissionTreasureReply instance
         */
        public static create(properties?: pb.IOpenMissionTreasureReply): pb.OpenMissionTreasureReply;

        /**
         * Encodes the specified OpenMissionTreasureReply message. Does not implicitly {@link pb.OpenMissionTreasureReply.verify|verify} messages.
         * @param message OpenMissionTreasureReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IOpenMissionTreasureReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified OpenMissionTreasureReply message, length delimited. Does not implicitly {@link pb.OpenMissionTreasureReply.verify|verify} messages.
         * @param message OpenMissionTreasureReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IOpenMissionTreasureReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OpenMissionTreasureReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OpenMissionTreasureReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.OpenMissionTreasureReply;

        /**
         * Decodes an OpenMissionTreasureReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OpenMissionTreasureReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.OpenMissionTreasureReply;

        /**
         * Verifies an OpenMissionTreasureReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdateMissionProcessArg. */
    interface IUpdateMissionProcessArg {

        /** UpdateMissionProcessArg Missions */
        Missions?: (pb.IMission[]|null);
    }

    /** Represents an UpdateMissionProcessArg. */
    class UpdateMissionProcessArg implements IUpdateMissionProcessArg {

        /**
         * Constructs a new UpdateMissionProcessArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdateMissionProcessArg);

        /** UpdateMissionProcessArg Missions. */
        public Missions: pb.IMission[];

        /**
         * Creates a new UpdateMissionProcessArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdateMissionProcessArg instance
         */
        public static create(properties?: pb.IUpdateMissionProcessArg): pb.UpdateMissionProcessArg;

        /**
         * Encodes the specified UpdateMissionProcessArg message. Does not implicitly {@link pb.UpdateMissionProcessArg.verify|verify} messages.
         * @param message UpdateMissionProcessArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdateMissionProcessArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdateMissionProcessArg message, length delimited. Does not implicitly {@link pb.UpdateMissionProcessArg.verify|verify} messages.
         * @param message UpdateMissionProcessArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdateMissionProcessArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdateMissionProcessArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdateMissionProcessArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdateMissionProcessArg;

        /**
         * Decodes an UpdateMissionProcessArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdateMissionProcessArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdateMissionProcessArg;

        /**
         * Verifies an UpdateMissionProcessArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** MessageID enum. */
    enum MessageID {
        UNKNOW_MessageID = 0,
        C2S_LOGIN = 100,
        C2S_BEGIN_MATCH = 101,
        C2S_STOP_MATCH = 102,
        C2S_FIGHT_BOUT_READY_DONE = 103,
        C2S_FIGHT_BOUT_CMD = 104,
        C2S_FETCH_CARD_DATA = 105,
        C2S_MATCH_ADD_ROBOT = 106,
        C2S_POOL_ADD_CARD = 107,
        C2S_UPDATE_CARD_POOL = 108,
        C2S_UPLEVEL_CARD = 109,
        C2S_FETCH_LEVEL_INFO = 110,
        C2S_BEGIN_LEVEL_BATTLE = 111,
        C2S_LEVEL_READY_DONE = 112,
        C2S_FIGHT_SURRENDER = 113,
        C2S_GM_COMMAND = 114,
        C2S_FETCH_CAMPAIGN_INFO = 115,
        C2S_BEGIN_CAMPAIGN_FIGHT = 116,
        C2S_UPDATE_CAMPAIGN_GUARD = 118,
        C2S_CAMPAIGN_FETCH_VIDEO = 119,
        C2S_CAMPAIGN_MARCH = 120,
        C2S_CAMPAIGN_DISMISS = 121,
        C2S_CARD_RELIVE = 122,
        C2S_FIGHT_GM_WIN = 123,
        C2S_CARD_TREAT = 124,
        C2S_DIY_CARD = 125,
        C2S_FETCH_DIY_CARD_IMG = 126,
        C2S_EXCHANGE_RESOURCE = 127,
        C2S_DIY_CARD_AGAIN = 128,
        C2S_DECOMPOSE_DIY_CARD = 129,
        C2S_POOL_UPDATE_CARD = 130,
        C2S_LOAD_FIGHT = 131,
        C2S_ACCOUNT_LOGIN = 132,
        C2S_DEL_ARCHIVES = 133,
        C2S_PLAYER_LOGOUT = 134,
        C2S_EXCHANGE_EXPED_CARD = 135,
        C2S_FINISH_GUIDE = 136,
        C2S_FETCH_GUIDE = 137,
        C2S_CAMPAIGN_DEF_ENEMY = 138,
        C2S_PING = 139,
        C2S_GET_TREASURES = 140,
        C2S_OPEN_TREASURE = 141,
        C2S_ACTIVATE_REWARD_TREASURE = 142,
        C2S_GET_CAMP_ID = 143,
        C2S_SET_CAMP_ID = 144,
        C2S_START_TUTORIAL_BATTLE = 145,
        C2S_MATCH_READY_DONE = 146,
        C2S_FETCH_RANK = 147,
        C2S_FETCH_RANK_USER = 148,
        C2S_OPEN_LEVEL_TREASURE = 149,
        C2S_GET_BATTLE_VIDEO = 150,
        C2S_SEND_EMOJI = 151,
        C2S_REGISTER_ACCOUNT = 152,
        C2S_FETCH_VIDEO_LIST = 153,
        C2S_WATCH_VIDEO = 154,
        C2S_FETCH_SELF_VIDEO_LIST = 155,
        C2S_LIKE_VIDEO = 156,
        C2S_SHARE_VIDEO = 157,
        C2S_FETCH_SURVEY_INFO = 158,
        C2S_COMPLETE_SURVEY = 159,
        C2S_GET_SURVEY_REWARD = 160,
        C2S_MODIFY_NAME = 161,
        C2S_SDK_ACCOUNT_LOGIN = 162,
        C2S_EXCHANGE_GIFT_CODE = 163,
        C2S_FETCH_VERSION = 164,
        C2S_FETCH_FRIEND_LIST = 165,
        C2S_FETCH_PLAYER_INFO = 166,
        C2S_ADD_FRIEND_APPLY = 167,
        C2S_FETCH_FRIEND_APPLY_LIST = 168,
        C2S_REPLY_AFRIEND_APPLY = 169,
        C2S_DEL_FRIEND = 170,
        C2S_FETCH_PRIVATE_CHAT = 171,
        C2S_SEND_PRIVATE_CHAT = 172,
        C2S_SUBSCRIBE_CHAT = 173,
        C2S_UNSUBSCRIBE_CHAT = 174,
        C2S_SEND_CHAT = 175,
        C2S_INVITE_BATTLE = 176,
        C2S_CANCEL_INVITE_BATTLE = 177,
        C2S_REPLY_INVITE_BATTLE = 178,
        C2S_UPDATE_SDK_USER_INFO = 179,
        C2S_WX_INVITE_BATTLE = 180,
        C2S_WX_CANCEL_INVITE_BATTLE = 181,
        C2S_WX_REPLY_INVITE_BATTLE = 182,
        C2S_GET_SHARE_TREASURE_REWARD = 183,
        C2S_HELP_SHARE_TREASURE = 184,
        C2S_SHARE_TREASURE = 185,
        C2S_SHARE_BATTLE_LOSE = 186,
        C2S_END_SHARE_BATTLE_LOSE = 187,
        C2S_JADE_ACC_TREASURE = 188,
        C2S_FETCH_SHOP_DATA = 189,
        C2S_BUY_LIMIT_GITF = 190,
        C2S_BUY_JADE = 191,
        C2S_BUY_SOLDTREASURE = 192,
        C2S_BUY_GOLD = 193,
        C2S_DAILY_TREASURE_READ_ADS = 194,
        C2S_TREASURE_READ_ADS = 195,
        C2S_BATTLE_LOSE_READ_ADS = 196,
        C2S_RECORD_CUR_GUIDE_GROUP = 197,
        C2S_FETCH_CUR_GUIDE_GROUP = 198,
        C2S_UPDATE_HEADIMG = 199,
        C2S_FETCH_LEVEL_HELP_RECORD = 200,
        C2S_LEVEL_HELP_OTHER = 201,
        C2S_HELP_SHARE_BATTLE_LOSE = 202,
        C2S_WATCH_UP_TREASURE_RARE_ADS = 203,
        C2S_WATCH_SHOP_FREE_ADS = 204,
        C2S_WATCH_TREASURE_ADD_CARD_ADS = 205,
        C2S_WATCH_HELP_VIDEO = 206,
        C2S_FETCH_MISSION_INFO = 207,
        C2S_REFRESH_MISSION = 208,
        C2S_GET_MISSION_REWARD = 209,
        C2S_OPEN_MISSION_TREASURE = 210,
        C2S_WXGAME_SHARE = 211,
        C2S_WATCH_OUT_VIDEO = 212,
        C2S_FETCH_VIDEO_COMMENTS = 213,
        C2S_LIKE_VIDEO_COMMENTS = 214,
        C2S_COMMENTS_VIDEO = 215,
        C2S_FETCH_WX_INVITE_FRIENDS = 216,
        C2S_GET_WX_INVITE_REWARD = 217,
        C2S_CLICK_WXGAME_SHARE = 218,
        C2S_WATCH_ADS_BEGIN = 219,
        C2S_WATCH_ADS_END = 220,
        C2S_CANCEL_WX_SHARE = 221,
        C2S_FETCH_MAIL_LIST = 222,
        C2S_GET_MAIL_REWARD = 223,
        C2S_READ_MAIL = 224,
        C2S_GET_ALL_MAIL_REWARD = 225,
        C2S_SDK_CREATE_ORDER = 226,
        C2S_UPDATE_NAME = 227,
        C2S_IOS_PRE_PAY = 228,
        C2S_IOS_SHARE = 229,
        C2S_FETCH_LEVEL_VIDEO_ID = 230,
        C2S_BUY_LIMIT_GITF_BY_JADE = 231,
        C2S_TOURIST_REGISTER_ACCOUNT = 232,
        C2S_GOOGLE_PLAY_RECHARGE = 233,
        C2S_TOURIST_BIND_ACCOUNT = 234,
        C2S_FETCH_SEASON_PVP_LIMIT_TIME = 235,
        C2S_FETCH_SEASON_PVP_INFO = 236,
        C2S_BUY_VIP_CARD = 237,
        C2S_UPDATE_CARD_SKIN = 238,
        C2S_FETCH_HEAD_FRAME = 239,
        C2S_UPDATE_HEAD_FRAME = 240,
        C2S_GET_FBADVERT_REWARD = 241,
        C2S_REFINE_CARD = 242,
        C2S_REBORN = 243,
        C2S_BUY_REBORN_GOODS = 244,
        C2S_FETCH_REBORN_DATA = 245,
        C2S_FETCH_VIDEO_ITEM = 246,
        C2S_SEASON_BATTLE_READY_DONE = 247,
        C2S_FETCH_HEAD = 248,
        C2S_SEASON_PVP_CHOOSE_CAMP = 249,
        C2S_SEASON_PVP_CHOOSE_CARD = 250,
        C2S_FETCH_SEASON_HAND_CARD = 251,
        C2S_FETCH_EQUIP = 252,
        C2S_WEAR_EQUIP = 253,
        C2S_DE_EQUIP = 254,
        C2S_REFRESH_SEASON_PVP_CHOOSE_CARD = 255,
        C2S_FETCH_EMOJI = 256,
        C2S_FETCH_VIP_REMAIN_TIME = 257,
        C2S_SETTLE_CITY = 258,
        C2S_CREATE_COUNTRY = 259,
        C2S_FETCH_CITY_DATA = 260,
        C2S_FETCH_APPLY_CREATE_COUNTRY_INFO = 261,
        C2S_FETCH_APPLY_CREATE_COUNTRY_PLAYERS = 262,
        C2S_FETCH_CAMPAIGN_MISSION_INFO = 263,
        C2S_ACCEPT_CAMPAIGN_MISSION = 264,
        C2S_CANCEL_CAMPAIGN_MISSION = 265,
        C2S_GET_CAMPAIGN_MISSION_REWARD = 266,
        C2S_FETCH_PERSONAL_INFO = 267,
        C2S_FETCH_CITY_PLAYERS = 268,
        C2S_SET_FORAGE_PRICE = 270,
        C2S_FETCH_FORAGE_PRICE = 271,
        C2S_FETCH_CAMPAIGN_NOTICE = 273,
        C2S_FETCH_COUNTRY_PLAYERS = 274,
        C2S_APPOINT_JOB = 275,
        C2S_CAMPAIGN_PUBLISH_MISSION = 276,
        C2S_LEAVE_CAMPAIGN_SCENE = 278,
        C2S_FETCH_ALL_CITY_PLAYER_AMOUNT = 279,
        C2S_FETCH_COUNTRY_JOB_PLAYERS = 280,
        C2S_PATROL_CITY = 281,
        C2S_CITY_CAPITAL_INJECTION = 282,
        C2S_BEGIN_ATTACK_CITY = 284,
        C2S_MOVE_CITY = 285,
        C2S_QUIT_COUNTRY = 286,
        C2S_KICK_OUT_CITY_PLAYER = 287,
        C2S_CANCEL_KICK_OUT_CITY_PLAYER = 288,
        C2S_FETCH_AUTOCEPHALY_INFO = 289,
        C2S_AUTOCEPHALY = 290,
        C2S_VOTE_AUTOCEPHALY = 291,
        C2S_MY_TEAM_RETREAT = 293,
        C2S_ACC_DEF_CITY_LOSE_LOADING = 294,
        C2S_DEF_CITY = 295,
        C2S_ESCAPED_FROM_JAIL = 296,
        C2S_CAMPAIGN_SURRENDER = 297,
        C2S_CAMPAIGN_RETIRE = 298,
        C2S_COUNTRY_MODIFY_NAME = 299,
        C2S_CANCEL_PUBLISH_MISSION = 300,
        C2S_RECALL_JOB = 301,
        C2S_FETCH_SEASON_RANK = 302,
        C2S_COUNTRY_MODIFY_FLAG = 303,
        C2S_FETCH_CITY_CAPITAL_INJECTION_HISTORY = 304,
        C2S_UPDATE_CITY_NOTICE = 305,
        C2S_FETCH_CITY_NOTICE = 306,
        C2S_PUBLISH_MILITARY_ORDERS = 307,
        C2S_FETCH_MILITARY_ORDERS = 308,
        C2S_ACCEPT_MILITARY_ORDER = 309,
        C2S_CANCEL_MILITARY_ORDER = 310,
        C2S_CANCEL_DEF_CITY = 311,
        C2S_MY_TEAM_MARCH = 312,
        C2S_CAMPAIGN_BACK_CITY = 313,
        C2S_FETCH_IN_CITY_PLAYERS = 314,
        C2S_FETCH_CITY_CAPTIVES = 315,
        C2S_SURRENDER_CITY = 316,
        C2S_CAMPAIGN_BUY_GOODS = 317,
        C2S_FIRE233_BIND_ACCOUNT = 318,
        C2S_FETCH_FIRE233_BIND_ACCOUNT = 319,
        C2S_FETCH_HUODONG_DETAIL = 320,
        C2S_HUODONG_EXCHANGE = 321,
        M2B_BEGIN_BATTLE = 1000,
        L2B_BEGIN_LEVEL_BATTLE = 1001,
        G2M_BEGIN_MATCH = 1002,
        G2M_BEGIN_GUIDE_MATCH = 1003,
        L2CA_SEND_CHAT = 1004,
        G2G_LOAD_PLAYER = 1005,
        G2R_UPDATE_PVP_SCORE = 1006,
        B2V_SAVE_VIDEO = 1007,
        G2B_LOAD_BATTLE = 1008,
        G2G_WX_REPLY_INVITE_BATTLE = 1009,
        G2G_REPLY_INVITE_BATTLE = 1011,
        L2B_BEGIN_LEVEL_HELP_BATTLE = 1012,
        G2V_SHARE_VIDEO = 1013,
        G2M_BEGIN_NEWBIE_PVP_MATCH = 1014,
        G2V_COMMENTS_VIDEO = 1015,
        G2G_INVITE_BATTLE = 1016,
        G2R_SEASON_PVP_BEGIN = 1017,
        G2R_FETCH_CUR_RANK = 1018,
        G2CA_SETTLE_CITY = 1019,
        G2CA_CREATE_COUNTRY = 1020,
        G2CA_ACCEPT_CAMPAIGN_MISSION = 1021,
        G2CA_CANCEL_CAMPAIGN_MISSION = 1022,
        G2CA_GET_CAMPAIGN_MISSION_REWARD = 1023,
        G2CA_FETCH_CAMPAIGN_INFO = 1024,
        G2CA_CITY_CAPITAL_INJECTION = 1025,
        G2CA_GET_MY_COUNTRY = 1026,
        G2CA_MOVE_CITY = 1027,
        G2CA_COUNTRY_MODIFY_NAME = 1028,
        G2CA_CAMPAIGN_EXPEDITION = 1029,
        L2G_GET_PVP_FIGHTER_DATA = 1030,
        G2CA_CAMPAIGN_ON_BATTLE_END = 1031,
        G2CA_DEF_CITY = 1032,
        G2CA_FETCH_CAMPAIGN_PLAYER_INFO = 1033,
        CA2G_UPDATE_CAMPAIGN_PLAYER_INFO = 1034,
        L2CA_SUBSCRIBE_CHAT = 1035,
        G2R_SEASON_PVP_END = 1036,
        CA2G_CAMPAIGN_NOTICE_NOTIFY = 1037,
        G2CA_ACCEPT_MILITARY_ORDER = 1038,
        G2CA_GM_COMMAND = 1039,
        G2CA_ESCAPED_FROM_JAIL = 1040,
        G2CA_GET_CAMPAIGN_INFO = 1041,
        CA2G_UPDATE_CAMPAIGN_INFO = 1042,
        G2CA_IS_IN_CAMPAIGN_MATCH = 1043,
        G2CA_FETCH_CAMPAIGN_TARGET_PLAYER_INFO = 1044,
        G2CA_MODIFY_CONTRIBUTION = 1045,
        G2G_GET_ONLINE_INFO = 1046,
        G2G_GET_CARD_AMOUNT_LOG = 1047,
        G2G_GET_CARD_LEVEL_LOG = 1048,
        G2G_GET_CARD_POOL_LOG = 1049,
        S2C_UPDATE_MATCH_INFO = 5000,
        S2C_READY_FIGHT = 5001,
        S2C_FIGHT_BOUT_BEGIN = 5002,
        S2C_FIGHT_BOUT_RESULT = 5003,
        S2C_FIGHT_BOUT_TIMEOUT = 5004,
        S2C_BATTLE_END = 5005,
        S2C_LEVEL_FIGHT_END = 5006,
        S2C_SYNC_CARD_INFO = 5007,
        S2C_CAMPAIGN_FIGHT_END = 5008,
        S2C_CAMPAIGN_BE_ATTACK = 5009,
        S2C_SYNC_RESOURCE = 5010,
        S2C_CHAPTER_UNLOCK = 5011,
        S2C_UPDATE_FIGHT_CARD = 5012,
        S2C_KICK_OUT = 5013,
        S2C_GAIN_TREASURE = 5014,
        S2C_TUTORIAL_FIGHT_END = 5015,
        S2C_MATCH_TIMEOUT = 5016,
        S2C_REFRESH_RANK = 5017,
        S2C_UPDATE_DAILY_TREASURE = 5020,
        S2C_SYNC_EMOJI = 5021,
        S2C_UPDATE_VERSION = 5022,
        S2C_FRIEND_APPLY_NOTIFY = 5023,
        S2C_FRIEND_APPLY_RESULT = 5024,
        S2C_PRIVATE_CHAT_NOTIFY = 5025,
        S2C_CHAT_NOTIFY = 5026,
        S2C_BE_INVITE_BATTLE = 5027,
        S2C_INVITE_BATTLE_RESULT = 5028,
        S2C_BE_DEL_FRIEND = 5029,
        S2C_WX_INVITE_BATTLE_RESULT = 5030,
        S2C_DAILY_TREASURE_BE_HELP = 5031,
        S2C_TREASURE_BE_HELP = 5032,
        S2C_BATTLE_LOSE_BE_HELP = 5033,
        S2C_UPDATE_WX_EXAMINE_STATE = 5034,
        S2C_LEVEL_BE_HELP = 5035,
        S2C_READY_LEVEL_FIGHT = 5036,
        S2C_TRIGGER_SHOP_ADD_GOLD_ADS = 5037,
        S2C_MISSION_SHOW_RED_DOT = 5038,
        S2C_UPDATE_MISSION_INFO = 5039,
        S2C_UPDATE_MISSION_PROCESS = 5040,
        S2C_UPDATE_MISSION_TREASURE_PROCESS = 5041,
        S2C_WX_INVITE_SHOW_RED_DOT = 5042,
        S2C_WX_SHARE_BE_HELP = 5043,
        S2C_NOTIFY_NEW_MAIL = 5044,
        S2C_NOTIFY_SDK_RECHARGE_RESULT = 5045,
        S2C_ON_CROSS_DAY = 5046,
        S2C_SEASON_PVP_BEGIN = 5047,
        S2C_SEASON_PVP_STOP = 5048,
        S2C_ADD_CARD_SKIN = 5049,
        S2C_BEGIN_SEASON_BATTLE = 5050,
        S2C_SEASON_BATTLE_BEGIN = 5051,
        S2C_SEASON_PVP_CHANGE_HAND_CARD = 5052,
        S2C_ADD_EQUIP = 5053,
        S2C_TELL_ME = 5054,
        S2C_UNLOCK_EMOJI = 5055,
        S2C_ADD_VIP = 5056,
        S2C_VIP_TIMEOUT = 5057,
        S2C_COUNTRY_CREATED = 5058,
        S2C_CITY_BE_OCCUPY = 5059,
        S2C_UPDATE_FORAGE = 5060,
        S2C_CAMPAIGN_NOTIFY_RED_DOT = 5061,
        S2C_SYNC_CITY_DEFENSE = 5062,
        S2C_UPDATE_CAMPAIGN_STATE = 5063,
        S2C_UPDATE_CITY_BE_ATTACK_STATE = 5064,
        S2C_CAMPAIGN_UPDATE_JOB = 5065,
        S2C_MY_TEAM_CAN_ATTACK_CITY = 5066,
        S2C_TO_BE_CAPTIVE = 5067,
        S2C_UPDATE_MY_CITY = 5068,
        S2C_UPDATE_MY_COUNTRY = 5069,
        S2C_COUNTRY_WAR_END = 5072,
        S2C_UPDATE_COUNTRY_NAME = 5073,
        S2C_TO_BE_UN_CAPTIVE = 5074,
        S2C_UNIFIED_WORLD = 5075,
        S2C_UPDATE_CAMPAIGN_TEAMS = 5076,
        S2C_COUNTRY_DESTORYED = 5077,
        S2C_UPDATE_COUNTRY_FLAG = 5078,
        S2C_UPDATE_CONTRIBUTION = 5079,
        S2C_ON_UNSUBSCRIBE_CHAT = 5080,
        S2C_SYNC_CITY_PLYAER_AMOUNT = 5081,
        S2C_UPDATE_CITY_STATE = 5082,
        S2C_UPDATE_CAMPAIGN_PLAYER_STATE = 5083,
        S2C_UPDATE_MY_TEAM_STATE = 5084,
        S2C_UPDATE_CAMPAIGN_SUPPORT_CARDS = 5085,
        S2C_UPDATE_CITY_COUNTRY = 5086,
        S2C_ADD_MIN_VIP = 5087,
        S2C_MIN_VIP_TIMEOUT = 5088,
        S2C_SYNC_DEF_CITY_PLAYER_AMOUNT = 5089,
        S2C_ADD_NEWBIE_VIP = 5090,
        S2C_NEWBIE_VIP_TIMEOUT = 5091,
        S2C_HUODONG_BEGIN = 5092,
        S2C_HUODONG_END = 5093
    }

    /** Properties of a RankItem. */
    interface IRankItem {

        /** RankItem Uid */
        Uid?: (number|Long|null);

        /** RankItem Name */
        Name?: (string|null);

        /** RankItem PvpScore */
        PvpScore?: (number|null);

        /** RankItem Rank */
        Rank?: (number|null);

        /** RankItem LastRank */
        LastRank?: (number|null);

        /** RankItem Camp */
        Camp?: (number|null);

        /** RankItem WinDiff */
        WinDiff?: (number|null);
    }

    /** Represents a RankItem. */
    class RankItem implements IRankItem {

        /**
         * Constructs a new RankItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRankItem);

        /** RankItem Uid. */
        public Uid: (number|Long);

        /** RankItem Name. */
        public Name: string;

        /** RankItem PvpScore. */
        public PvpScore: number;

        /** RankItem Rank. */
        public Rank: number;

        /** RankItem LastRank. */
        public LastRank: number;

        /** RankItem Camp. */
        public Camp: number;

        /** RankItem WinDiff. */
        public WinDiff: number;

        /**
         * Creates a new RankItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankItem instance
         */
        public static create(properties?: pb.IRankItem): pb.RankItem;

        /**
         * Encodes the specified RankItem message. Does not implicitly {@link pb.RankItem.verify|verify} messages.
         * @param message RankItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRankItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RankItem message, length delimited. Does not implicitly {@link pb.RankItem.verify|verify} messages.
         * @param message RankItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRankItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RankItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RankItem;

        /**
         * Decodes a RankItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RankItem;

        /**
         * Verifies a RankItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RankInfo. */
    interface IRankInfo {

        /** RankInfo UpdateTime */
        UpdateTime?: (number|null);

        /** RankInfo Items */
        Items?: (pb.IRankItem[]|null);
    }

    /** Represents a RankInfo. */
    class RankInfo implements IRankInfo {

        /**
         * Constructs a new RankInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRankInfo);

        /** RankInfo UpdateTime. */
        public UpdateTime: number;

        /** RankInfo Items. */
        public Items: pb.IRankItem[];

        /**
         * Creates a new RankInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankInfo instance
         */
        public static create(properties?: pb.IRankInfo): pb.RankInfo;

        /**
         * Encodes the specified RankInfo message. Does not implicitly {@link pb.RankInfo.verify|verify} messages.
         * @param message RankInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRankInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RankInfo message, length delimited. Does not implicitly {@link pb.RankInfo.verify|verify} messages.
         * @param message RankInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRankInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RankInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RankInfo;

        /**
         * Decodes a RankInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RankInfo;

        /**
         * Verifies a RankInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchRankUserArg. */
    interface IFetchRankUserArg {

        /** FetchRankUserArg Uid */
        Uid?: (number|Long|null);
    }

    /** Represents a FetchRankUserArg. */
    class FetchRankUserArg implements IFetchRankUserArg {

        /**
         * Constructs a new FetchRankUserArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchRankUserArg);

        /** FetchRankUserArg Uid. */
        public Uid: (number|Long);

        /**
         * Creates a new FetchRankUserArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchRankUserArg instance
         */
        public static create(properties?: pb.IFetchRankUserArg): pb.FetchRankUserArg;

        /**
         * Encodes the specified FetchRankUserArg message. Does not implicitly {@link pb.FetchRankUserArg.verify|verify} messages.
         * @param message FetchRankUserArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchRankUserArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchRankUserArg message, length delimited. Does not implicitly {@link pb.FetchRankUserArg.verify|verify} messages.
         * @param message FetchRankUserArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchRankUserArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchRankUserArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchRankUserArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchRankUserArg;

        /**
         * Decodes a FetchRankUserArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchRankUserArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchRankUserArg;

        /**
         * Verifies a FetchRankUserArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RankUser. */
    interface IRankUser {

        /** RankUser FightCards */
        FightCards?: (pb.ISkinGCard[]|null);
    }

    /** Represents a RankUser. */
    class RankUser implements IRankUser {

        /**
         * Constructs a new RankUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRankUser);

        /** RankUser FightCards. */
        public FightCards: pb.ISkinGCard[];

        /**
         * Creates a new RankUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankUser instance
         */
        public static create(properties?: pb.IRankUser): pb.RankUser;

        /**
         * Encodes the specified RankUser message. Does not implicitly {@link pb.RankUser.verify|verify} messages.
         * @param message RankUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRankUser, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RankUser message, length delimited. Does not implicitly {@link pb.RankUser.verify|verify} messages.
         * @param message RankUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRankUser, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RankUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RankUser;

        /**
         * Decodes a RankUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RankUser;

        /**
         * Verifies a RankUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an UpdatePvpScoreArg. */
    interface IUpdatePvpScoreArg {

        /** UpdatePvpScoreArg Uid */
        Uid?: (number|Long|null);

        /** UpdatePvpScoreArg Name */
        Name?: (string|null);

        /** UpdatePvpScoreArg HandCards */
        HandCards?: (pb.ISkinGCard[]|null);

        /** UpdatePvpScoreArg Camp */
        Camp?: (number|null);

        /** UpdatePvpScoreArg PvpScore */
        PvpScore?: (number|null);

        /** UpdatePvpScoreArg WinDiff */
        WinDiff?: (number|null);

        /** UpdatePvpScoreArg WinCnt */
        WinCnt?: (number|null);

        /** UpdatePvpScoreArg RebornCnt */
        RebornCnt?: (number|null);
    }

    /** Represents an UpdatePvpScoreArg. */
    class UpdatePvpScoreArg implements IUpdatePvpScoreArg {

        /**
         * Constructs a new UpdatePvpScoreArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUpdatePvpScoreArg);

        /** UpdatePvpScoreArg Uid. */
        public Uid: (number|Long);

        /** UpdatePvpScoreArg Name. */
        public Name: string;

        /** UpdatePvpScoreArg HandCards. */
        public HandCards: pb.ISkinGCard[];

        /** UpdatePvpScoreArg Camp. */
        public Camp: number;

        /** UpdatePvpScoreArg PvpScore. */
        public PvpScore: number;

        /** UpdatePvpScoreArg WinDiff. */
        public WinDiff: number;

        /** UpdatePvpScoreArg WinCnt. */
        public WinCnt: number;

        /** UpdatePvpScoreArg RebornCnt. */
        public RebornCnt: number;

        /**
         * Creates a new UpdatePvpScoreArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UpdatePvpScoreArg instance
         */
        public static create(properties?: pb.IUpdatePvpScoreArg): pb.UpdatePvpScoreArg;

        /**
         * Encodes the specified UpdatePvpScoreArg message. Does not implicitly {@link pb.UpdatePvpScoreArg.verify|verify} messages.
         * @param message UpdatePvpScoreArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUpdatePvpScoreArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UpdatePvpScoreArg message, length delimited. Does not implicitly {@link pb.UpdatePvpScoreArg.verify|verify} messages.
         * @param message UpdatePvpScoreArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUpdatePvpScoreArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UpdatePvpScoreArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UpdatePvpScoreArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.UpdatePvpScoreArg;

        /**
         * Decodes an UpdatePvpScoreArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UpdatePvpScoreArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.UpdatePvpScoreArg;

        /**
         * Verifies an UpdatePvpScoreArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a G2RSeasonPvpEndReply. */
    interface IG2RSeasonPvpEndReply {

        /** G2RSeasonPvpEndReply RankUids */
        RankUids?: ((number|Long)[]|null);
    }

    /** Represents a G2RSeasonPvpEndReply. */
    class G2RSeasonPvpEndReply implements IG2RSeasonPvpEndReply {

        /**
         * Constructs a new G2RSeasonPvpEndReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IG2RSeasonPvpEndReply);

        /** G2RSeasonPvpEndReply RankUids. */
        public RankUids: (number|Long)[];

        /**
         * Creates a new G2RSeasonPvpEndReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns G2RSeasonPvpEndReply instance
         */
        public static create(properties?: pb.IG2RSeasonPvpEndReply): pb.G2RSeasonPvpEndReply;

        /**
         * Encodes the specified G2RSeasonPvpEndReply message. Does not implicitly {@link pb.G2RSeasonPvpEndReply.verify|verify} messages.
         * @param message G2RSeasonPvpEndReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IG2RSeasonPvpEndReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified G2RSeasonPvpEndReply message, length delimited. Does not implicitly {@link pb.G2RSeasonPvpEndReply.verify|verify} messages.
         * @param message G2RSeasonPvpEndReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IG2RSeasonPvpEndReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a G2RSeasonPvpEndReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns G2RSeasonPvpEndReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.G2RSeasonPvpEndReply;

        /**
         * Decodes a G2RSeasonPvpEndReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns G2RSeasonPvpEndReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.G2RSeasonPvpEndReply;

        /**
         * Verifies a G2RSeasonPvpEndReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RefineCardArg. */
    interface IRefineCardArg {

        /** RefineCardArg CardIDs */
        CardIDs?: (number[]|null);
    }

    /** Represents a RefineCardArg. */
    class RefineCardArg implements IRefineCardArg {

        /**
         * Constructs a new RefineCardArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRefineCardArg);

        /** RefineCardArg CardIDs. */
        public CardIDs: number[];

        /**
         * Creates a new RefineCardArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RefineCardArg instance
         */
        public static create(properties?: pb.IRefineCardArg): pb.RefineCardArg;

        /**
         * Encodes the specified RefineCardArg message. Does not implicitly {@link pb.RefineCardArg.verify|verify} messages.
         * @param message RefineCardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRefineCardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RefineCardArg message, length delimited. Does not implicitly {@link pb.RefineCardArg.verify|verify} messages.
         * @param message RefineCardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRefineCardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RefineCardArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RefineCardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RefineCardArg;

        /**
         * Decodes a RefineCardArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RefineCardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RefineCardArg;

        /**
         * Verifies a RefineCardArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RefineCardReply. */
    interface IRefineCardReply {

        /** RefineCardReply Feats */
        Feats?: (number|null);
    }

    /** Represents a RefineCardReply. */
    class RefineCardReply implements IRefineCardReply {

        /**
         * Constructs a new RefineCardReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRefineCardReply);

        /** RefineCardReply Feats. */
        public Feats: number;

        /**
         * Creates a new RefineCardReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RefineCardReply instance
         */
        public static create(properties?: pb.IRefineCardReply): pb.RefineCardReply;

        /**
         * Encodes the specified RefineCardReply message. Does not implicitly {@link pb.RefineCardReply.verify|verify} messages.
         * @param message RefineCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRefineCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RefineCardReply message, length delimited. Does not implicitly {@link pb.RefineCardReply.verify|verify} messages.
         * @param message RefineCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRefineCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RefineCardReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RefineCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RefineCardReply;

        /**
         * Decodes a RefineCardReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RefineCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RefineCardReply;

        /**
         * Verifies a RefineCardReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RebornReply. */
    interface IRebornReply {

        /** RebornReply TreasureReward */
        TreasureReward?: (pb.IOpenTreasureReply|null);

        /** RebornReply Feats */
        Feats?: (number|null);

        /** RebornReply NewName */
        NewName?: (string|null);

        /** RebornReply Prestige */
        Prestige?: (number|null);
    }

    /** Represents a RebornReply. */
    class RebornReply implements IRebornReply {

        /**
         * Constructs a new RebornReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRebornReply);

        /** RebornReply TreasureReward. */
        public TreasureReward?: (pb.IOpenTreasureReply|null);

        /** RebornReply Feats. */
        public Feats: number;

        /** RebornReply NewName. */
        public NewName: string;

        /** RebornReply Prestige. */
        public Prestige: number;

        /**
         * Creates a new RebornReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RebornReply instance
         */
        public static create(properties?: pb.IRebornReply): pb.RebornReply;

        /**
         * Encodes the specified RebornReply message. Does not implicitly {@link pb.RebornReply.verify|verify} messages.
         * @param message RebornReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRebornReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RebornReply message, length delimited. Does not implicitly {@link pb.RebornReply.verify|verify} messages.
         * @param message RebornReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRebornReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RebornReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RebornReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RebornReply;

        /**
         * Decodes a RebornReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RebornReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RebornReply;

        /**
         * Verifies a RebornReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuyRebornGoodsArg. */
    interface IBuyRebornGoodsArg {

        /** BuyRebornGoodsArg Type */
        Type?: (pb.BuyRebornGoodsArg.GoodsType|null);

        /** BuyRebornGoodsArg GoodsID */
        GoodsID?: (number|null);
    }

    /** Represents a BuyRebornGoodsArg. */
    class BuyRebornGoodsArg implements IBuyRebornGoodsArg {

        /**
         * Constructs a new BuyRebornGoodsArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuyRebornGoodsArg);

        /** BuyRebornGoodsArg Type. */
        public Type: pb.BuyRebornGoodsArg.GoodsType;

        /** BuyRebornGoodsArg GoodsID. */
        public GoodsID: number;

        /**
         * Creates a new BuyRebornGoodsArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyRebornGoodsArg instance
         */
        public static create(properties?: pb.IBuyRebornGoodsArg): pb.BuyRebornGoodsArg;

        /**
         * Encodes the specified BuyRebornGoodsArg message. Does not implicitly {@link pb.BuyRebornGoodsArg.verify|verify} messages.
         * @param message BuyRebornGoodsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuyRebornGoodsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuyRebornGoodsArg message, length delimited. Does not implicitly {@link pb.BuyRebornGoodsArg.verify|verify} messages.
         * @param message BuyRebornGoodsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuyRebornGoodsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyRebornGoodsArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyRebornGoodsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuyRebornGoodsArg;

        /**
         * Decodes a BuyRebornGoodsArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyRebornGoodsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuyRebornGoodsArg;

        /**
         * Verifies a BuyRebornGoodsArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace BuyRebornGoodsArg {

        /** GoodsType enum. */
        enum GoodsType {
            Unknow = 0,
            Card = 1,
            Privilege = 2,
            CardSkin = 3,
            Equip = 4
        }
    }

    /** Properties of a RebornData. */
    interface IRebornData {

        /** RebornData RemainDay */
        RemainDay?: (number|null);

        /** RebornData Prestige */
        Prestige?: (number|null);

        /** RebornData Cnt */
        Cnt?: (number|null);
    }

    /** Represents a RebornData. */
    class RebornData implements IRebornData {

        /**
         * Constructs a new RebornData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRebornData);

        /** RebornData RemainDay. */
        public RemainDay: number;

        /** RebornData Prestige. */
        public Prestige: number;

        /** RebornData Cnt. */
        public Cnt: number;

        /**
         * Creates a new RebornData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RebornData instance
         */
        public static create(properties?: pb.IRebornData): pb.RebornData;

        /**
         * Encodes the specified RebornData message. Does not implicitly {@link pb.RebornData.verify|verify} messages.
         * @param message RebornData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRebornData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RebornData message, length delimited. Does not implicitly {@link pb.RebornData.verify|verify} messages.
         * @param message RebornData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRebornData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RebornData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RebornData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RebornData;

        /**
         * Decodes a RebornData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RebornData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RebornData;

        /**
         * Verifies a RebornData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** RmqType enum. */
    enum RmqType {
        Unknow_RmqType = 0,
        BattleBegin = 1,
        BattleEnd = 2,
        Bonus = 3,
        AddFriendApply = 4,
        ReplyFriendApply = 5,
        BeDelFriend = 6,
        PrivateChat = 7,
        HelpLevel = 8,
        WxInviteFriendTp = 9,
        ForbidLogin = 10,
        ForbidChat = 11,
        SendMail = 12,
        WxShareBeHelp = 13,
        SdkRecharge = 14,
        CampaignMissionDone = 15,
        CampaignAcceptMission = 16,
        UnifiedReward = 17
    }

    /** Properties of a RmqMessage. */
    interface IRmqMessage {

        /** RmqMessage Type */
        Type?: (pb.RmqType|null);

        /** RmqMessage Payload */
        Payload?: (Uint8Array|null);
    }

    /** Represents a RmqMessage. */
    class RmqMessage implements IRmqMessage {

        /**
         * Constructs a new RmqMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqMessage);

        /** RmqMessage Type. */
        public Type: pb.RmqType;

        /** RmqMessage Payload. */
        public Payload: Uint8Array;

        /**
         * Creates a new RmqMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqMessage instance
         */
        public static create(properties?: pb.IRmqMessage): pb.RmqMessage;

        /**
         * Encodes the specified RmqMessage message. Does not implicitly {@link pb.RmqMessage.verify|verify} messages.
         * @param message RmqMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqMessage message, length delimited. Does not implicitly {@link pb.RmqMessage.verify|verify} messages.
         * @param message RmqMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqMessage;

        /**
         * Decodes a RmqMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqMessage;

        /**
         * Verifies a RmqMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqBattleBegin. */
    interface IRmqBattleBegin {

        /** RmqBattleBegin BattleID */
        BattleID?: (number|Long|null);

        /** RmqBattleBegin AppID */
        AppID?: (number|null);

        /** RmqBattleBegin BattleType */
        BattleType?: (number|null);
    }

    /** Represents a RmqBattleBegin. */
    class RmqBattleBegin implements IRmqBattleBegin {

        /**
         * Constructs a new RmqBattleBegin.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqBattleBegin);

        /** RmqBattleBegin BattleID. */
        public BattleID: (number|Long);

        /** RmqBattleBegin AppID. */
        public AppID: number;

        /** RmqBattleBegin BattleType. */
        public BattleType: number;

        /**
         * Creates a new RmqBattleBegin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqBattleBegin instance
         */
        public static create(properties?: pb.IRmqBattleBegin): pb.RmqBattleBegin;

        /**
         * Encodes the specified RmqBattleBegin message. Does not implicitly {@link pb.RmqBattleBegin.verify|verify} messages.
         * @param message RmqBattleBegin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqBattleBegin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqBattleBegin message, length delimited. Does not implicitly {@link pb.RmqBattleBegin.verify|verify} messages.
         * @param message RmqBattleBegin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqBattleBegin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqBattleBegin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqBattleBegin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqBattleBegin;

        /**
         * Decodes a RmqBattleBegin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqBattleBegin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqBattleBegin;

        /**
         * Verifies a RmqBattleBegin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqBonus. */
    interface IRmqBonus {

        /** RmqBonus ChangeRes */
        ChangeRes?: (pb.IResource[]|null);
    }

    /** Represents a RmqBonus. */
    class RmqBonus implements IRmqBonus {

        /**
         * Constructs a new RmqBonus.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqBonus);

        /** RmqBonus ChangeRes. */
        public ChangeRes: pb.IResource[];

        /**
         * Creates a new RmqBonus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqBonus instance
         */
        public static create(properties?: pb.IRmqBonus): pb.RmqBonus;

        /**
         * Encodes the specified RmqBonus message. Does not implicitly {@link pb.RmqBonus.verify|verify} messages.
         * @param message RmqBonus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqBonus, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqBonus message, length delimited. Does not implicitly {@link pb.RmqBonus.verify|verify} messages.
         * @param message RmqBonus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqBonus, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqBonus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqBonus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqBonus;

        /**
         * Decodes a RmqBonus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqBonus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqBonus;

        /**
         * Verifies a RmqBonus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an EndFighterData. */
    interface IEndFighterData {

        /** EndFighterData Uid */
        Uid?: (number|Long|null);

        /** EndFighterData IsRobot */
        IsRobot?: (boolean|null);

        /** EndFighterData IsSurrender */
        IsSurrender?: (boolean|null);

        /** EndFighterData Camp */
        Camp?: (number|null);

        /** EndFighterData InitHandCards */
        InitHandCards?: (pb.ISkinGCard[]|null);

        /** EndFighterData IsFighter1 */
        IsFighter1?: (boolean|null);

        /** EndFighterData IsFirstHand */
        IsFirstHand?: (boolean|null);

        /** EndFighterData Mmr */
        Mmr?: (number|null);

        /** EndFighterData UseCards */
        UseCards?: (number[]|null);
    }

    /** Represents an EndFighterData. */
    class EndFighterData implements IEndFighterData {

        /**
         * Constructs a new EndFighterData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEndFighterData);

        /** EndFighterData Uid. */
        public Uid: (number|Long);

        /** EndFighterData IsRobot. */
        public IsRobot: boolean;

        /** EndFighterData IsSurrender. */
        public IsSurrender: boolean;

        /** EndFighterData Camp. */
        public Camp: number;

        /** EndFighterData InitHandCards. */
        public InitHandCards: pb.ISkinGCard[];

        /** EndFighterData IsFighter1. */
        public IsFighter1: boolean;

        /** EndFighterData IsFirstHand. */
        public IsFirstHand: boolean;

        /** EndFighterData Mmr. */
        public Mmr: number;

        /** EndFighterData UseCards. */
        public UseCards: number[];

        /**
         * Creates a new EndFighterData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EndFighterData instance
         */
        public static create(properties?: pb.IEndFighterData): pb.EndFighterData;

        /**
         * Encodes the specified EndFighterData message. Does not implicitly {@link pb.EndFighterData.verify|verify} messages.
         * @param message EndFighterData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEndFighterData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified EndFighterData message, length delimited. Does not implicitly {@link pb.EndFighterData.verify|verify} messages.
         * @param message EndFighterData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEndFighterData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EndFighterData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EndFighterData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.EndFighterData;

        /**
         * Decodes an EndFighterData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EndFighterData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.EndFighterData;

        /**
         * Verifies an EndFighterData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqBattleEnd. */
    interface IRmqBattleEnd {

        /** RmqBattleEnd BattleID */
        BattleID?: (number|Long|null);

        /** RmqBattleEnd BattleType */
        BattleType?: (number|null);

        /** RmqBattleEnd LevelID */
        LevelID?: (number|null);

        /** RmqBattleEnd IsWonderful */
        IsWonderful?: (boolean|null);

        /** RmqBattleEnd Winner */
        Winner?: (pb.IEndFighterData|null);

        /** RmqBattleEnd Loser */
        Loser?: (pb.IEndFighterData|null);
    }

    /** Represents a RmqBattleEnd. */
    class RmqBattleEnd implements IRmqBattleEnd {

        /**
         * Constructs a new RmqBattleEnd.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqBattleEnd);

        /** RmqBattleEnd BattleID. */
        public BattleID: (number|Long);

        /** RmqBattleEnd BattleType. */
        public BattleType: number;

        /** RmqBattleEnd LevelID. */
        public LevelID: number;

        /** RmqBattleEnd IsWonderful. */
        public IsWonderful: boolean;

        /** RmqBattleEnd Winner. */
        public Winner?: (pb.IEndFighterData|null);

        /** RmqBattleEnd Loser. */
        public Loser?: (pb.IEndFighterData|null);

        /**
         * Creates a new RmqBattleEnd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqBattleEnd instance
         */
        public static create(properties?: pb.IRmqBattleEnd): pb.RmqBattleEnd;

        /**
         * Encodes the specified RmqBattleEnd message. Does not implicitly {@link pb.RmqBattleEnd.verify|verify} messages.
         * @param message RmqBattleEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqBattleEnd, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqBattleEnd message, length delimited. Does not implicitly {@link pb.RmqBattleEnd.verify|verify} messages.
         * @param message RmqBattleEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqBattleEnd, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqBattleEnd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqBattleEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqBattleEnd;

        /**
         * Decodes a RmqBattleEnd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqBattleEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqBattleEnd;

        /**
         * Verifies a RmqBattleEnd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqAddFriendApply. */
    interface IRmqAddFriendApply {

        /** RmqAddFriendApply FromUid */
        FromUid?: (number|Long|null);

        /** RmqAddFriendApply FromName */
        FromName?: (string|null);

        /** RmqAddFriendApply IsInvite */
        IsInvite?: (boolean|null);
    }

    /** Represents a RmqAddFriendApply. */
    class RmqAddFriendApply implements IRmqAddFriendApply {

        /**
         * Constructs a new RmqAddFriendApply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqAddFriendApply);

        /** RmqAddFriendApply FromUid. */
        public FromUid: (number|Long);

        /** RmqAddFriendApply FromName. */
        public FromName: string;

        /** RmqAddFriendApply IsInvite. */
        public IsInvite: boolean;

        /**
         * Creates a new RmqAddFriendApply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqAddFriendApply instance
         */
        public static create(properties?: pb.IRmqAddFriendApply): pb.RmqAddFriendApply;

        /**
         * Encodes the specified RmqAddFriendApply message. Does not implicitly {@link pb.RmqAddFriendApply.verify|verify} messages.
         * @param message RmqAddFriendApply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqAddFriendApply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqAddFriendApply message, length delimited. Does not implicitly {@link pb.RmqAddFriendApply.verify|verify} messages.
         * @param message RmqAddFriendApply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqAddFriendApply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqAddFriendApply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqAddFriendApply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqAddFriendApply;

        /**
         * Decodes a RmqAddFriendApply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqAddFriendApply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqAddFriendApply;

        /**
         * Verifies a RmqAddFriendApply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqReplyFriendApply. */
    interface IRmqReplyFriendApply {

        /** RmqReplyFriendApply FromUid */
        FromUid?: (number|Long|null);

        /** RmqReplyFriendApply IsAgree */
        IsAgree?: (boolean|null);

        /** RmqReplyFriendApply FromName */
        FromName?: (string|null);
    }

    /** Represents a RmqReplyFriendApply. */
    class RmqReplyFriendApply implements IRmqReplyFriendApply {

        /**
         * Constructs a new RmqReplyFriendApply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqReplyFriendApply);

        /** RmqReplyFriendApply FromUid. */
        public FromUid: (number|Long);

        /** RmqReplyFriendApply IsAgree. */
        public IsAgree: boolean;

        /** RmqReplyFriendApply FromName. */
        public FromName: string;

        /**
         * Creates a new RmqReplyFriendApply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqReplyFriendApply instance
         */
        public static create(properties?: pb.IRmqReplyFriendApply): pb.RmqReplyFriendApply;

        /**
         * Encodes the specified RmqReplyFriendApply message. Does not implicitly {@link pb.RmqReplyFriendApply.verify|verify} messages.
         * @param message RmqReplyFriendApply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqReplyFriendApply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqReplyFriendApply message, length delimited. Does not implicitly {@link pb.RmqReplyFriendApply.verify|verify} messages.
         * @param message RmqReplyFriendApply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqReplyFriendApply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqReplyFriendApply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqReplyFriendApply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqReplyFriendApply;

        /**
         * Decodes a RmqReplyFriendApply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqReplyFriendApply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqReplyFriendApply;

        /**
         * Verifies a RmqReplyFriendApply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqBeDelFriend. */
    interface IRmqBeDelFriend {

        /** RmqBeDelFriend FromUid */
        FromUid?: (number|Long|null);
    }

    /** Represents a RmqBeDelFriend. */
    class RmqBeDelFriend implements IRmqBeDelFriend {

        /**
         * Constructs a new RmqBeDelFriend.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqBeDelFriend);

        /** RmqBeDelFriend FromUid. */
        public FromUid: (number|Long);

        /**
         * Creates a new RmqBeDelFriend instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqBeDelFriend instance
         */
        public static create(properties?: pb.IRmqBeDelFriend): pb.RmqBeDelFriend;

        /**
         * Encodes the specified RmqBeDelFriend message. Does not implicitly {@link pb.RmqBeDelFriend.verify|verify} messages.
         * @param message RmqBeDelFriend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqBeDelFriend, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqBeDelFriend message, length delimited. Does not implicitly {@link pb.RmqBeDelFriend.verify|verify} messages.
         * @param message RmqBeDelFriend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqBeDelFriend, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqBeDelFriend message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqBeDelFriend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqBeDelFriend;

        /**
         * Decodes a RmqBeDelFriend message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqBeDelFriend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqBeDelFriend;

        /**
         * Verifies a RmqBeDelFriend message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqPrivateChat. */
    interface IRmqPrivateChat {

        /** RmqPrivateChat FromUid */
        FromUid?: (number|Long|null);

        /** RmqPrivateChat FromName */
        FromName?: (string|null);

        /** RmqPrivateChat FromHeadImgUrl */
        FromHeadImgUrl?: (string|null);

        /** RmqPrivateChat Msg */
        Msg?: (string|null);

        /** RmqPrivateChat Time */
        Time?: (number|null);

        /** RmqPrivateChat FromPvpLevel */
        FromPvpLevel?: (number|null);

        /** RmqPrivateChat FromCountry */
        FromCountry?: (string|null);

        /** RmqPrivateChat FromHeadFrame */
        FromHeadFrame?: (string|null);
    }

    /** Represents a RmqPrivateChat. */
    class RmqPrivateChat implements IRmqPrivateChat {

        /**
         * Constructs a new RmqPrivateChat.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqPrivateChat);

        /** RmqPrivateChat FromUid. */
        public FromUid: (number|Long);

        /** RmqPrivateChat FromName. */
        public FromName: string;

        /** RmqPrivateChat FromHeadImgUrl. */
        public FromHeadImgUrl: string;

        /** RmqPrivateChat Msg. */
        public Msg: string;

        /** RmqPrivateChat Time. */
        public Time: number;

        /** RmqPrivateChat FromPvpLevel. */
        public FromPvpLevel: number;

        /** RmqPrivateChat FromCountry. */
        public FromCountry: string;

        /** RmqPrivateChat FromHeadFrame. */
        public FromHeadFrame: string;

        /**
         * Creates a new RmqPrivateChat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqPrivateChat instance
         */
        public static create(properties?: pb.IRmqPrivateChat): pb.RmqPrivateChat;

        /**
         * Encodes the specified RmqPrivateChat message. Does not implicitly {@link pb.RmqPrivateChat.verify|verify} messages.
         * @param message RmqPrivateChat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqPrivateChat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqPrivateChat message, length delimited. Does not implicitly {@link pb.RmqPrivateChat.verify|verify} messages.
         * @param message RmqPrivateChat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqPrivateChat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqPrivateChat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqPrivateChat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqPrivateChat;

        /**
         * Decodes a RmqPrivateChat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqPrivateChat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqPrivateChat;

        /**
         * Verifies a RmqPrivateChat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqHelpLevel. */
    interface IRmqHelpLevel {

        /** RmqHelpLevel HelperUid */
        HelperUid?: (number|Long|null);

        /** RmqHelpLevel HelperName */
        HelperName?: (string|null);

        /** RmqHelpLevel LevelID */
        LevelID?: (number|null);

        /** RmqHelpLevel BattleID */
        BattleID?: (number|Long|null);
    }

    /** Represents a RmqHelpLevel. */
    class RmqHelpLevel implements IRmqHelpLevel {

        /**
         * Constructs a new RmqHelpLevel.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqHelpLevel);

        /** RmqHelpLevel HelperUid. */
        public HelperUid: (number|Long);

        /** RmqHelpLevel HelperName. */
        public HelperName: string;

        /** RmqHelpLevel LevelID. */
        public LevelID: number;

        /** RmqHelpLevel BattleID. */
        public BattleID: (number|Long);

        /**
         * Creates a new RmqHelpLevel instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqHelpLevel instance
         */
        public static create(properties?: pb.IRmqHelpLevel): pb.RmqHelpLevel;

        /**
         * Encodes the specified RmqHelpLevel message. Does not implicitly {@link pb.RmqHelpLevel.verify|verify} messages.
         * @param message RmqHelpLevel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqHelpLevel, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqHelpLevel message, length delimited. Does not implicitly {@link pb.RmqHelpLevel.verify|verify} messages.
         * @param message RmqHelpLevel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqHelpLevel, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqHelpLevel message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqHelpLevel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqHelpLevel;

        /**
         * Decodes a RmqHelpLevel message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqHelpLevel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqHelpLevel;

        /**
         * Verifies a RmqHelpLevel message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqWxInviteFriend. */
    interface IRmqWxInviteFriend {

        /** RmqWxInviteFriend Uid */
        Uid?: (number|Long|null);

        /** RmqWxInviteFriend HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** RmqWxInviteFriend MaxPvpLevel */
        MaxPvpLevel?: (number|null);
    }

    /** Represents a RmqWxInviteFriend. */
    class RmqWxInviteFriend implements IRmqWxInviteFriend {

        /**
         * Constructs a new RmqWxInviteFriend.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqWxInviteFriend);

        /** RmqWxInviteFriend Uid. */
        public Uid: (number|Long);

        /** RmqWxInviteFriend HeadImgUrl. */
        public HeadImgUrl: string;

        /** RmqWxInviteFriend MaxPvpLevel. */
        public MaxPvpLevel: number;

        /**
         * Creates a new RmqWxInviteFriend instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqWxInviteFriend instance
         */
        public static create(properties?: pb.IRmqWxInviteFriend): pb.RmqWxInviteFriend;

        /**
         * Encodes the specified RmqWxInviteFriend message. Does not implicitly {@link pb.RmqWxInviteFriend.verify|verify} messages.
         * @param message RmqWxInviteFriend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqWxInviteFriend, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqWxInviteFriend message, length delimited. Does not implicitly {@link pb.RmqWxInviteFriend.verify|verify} messages.
         * @param message RmqWxInviteFriend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqWxInviteFriend, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqWxInviteFriend message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqWxInviteFriend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqWxInviteFriend;

        /**
         * Decodes a RmqWxInviteFriend message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqWxInviteFriend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqWxInviteFriend;

        /**
         * Verifies a RmqWxInviteFriend message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqForbidLogin. */
    interface IRmqForbidLogin {

        /** RmqForbidLogin IsForbid */
        IsForbid?: (boolean|null);
    }

    /** Represents a RmqForbidLogin. */
    class RmqForbidLogin implements IRmqForbidLogin {

        /**
         * Constructs a new RmqForbidLogin.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqForbidLogin);

        /** RmqForbidLogin IsForbid. */
        public IsForbid: boolean;

        /**
         * Creates a new RmqForbidLogin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqForbidLogin instance
         */
        public static create(properties?: pb.IRmqForbidLogin): pb.RmqForbidLogin;

        /**
         * Encodes the specified RmqForbidLogin message. Does not implicitly {@link pb.RmqForbidLogin.verify|verify} messages.
         * @param message RmqForbidLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqForbidLogin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqForbidLogin message, length delimited. Does not implicitly {@link pb.RmqForbidLogin.verify|verify} messages.
         * @param message RmqForbidLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqForbidLogin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqForbidLogin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqForbidLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqForbidLogin;

        /**
         * Decodes a RmqForbidLogin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqForbidLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqForbidLogin;

        /**
         * Verifies a RmqForbidLogin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqForbidChat. */
    interface IRmqForbidChat {

        /** RmqForbidChat IsForbid */
        IsForbid?: (boolean|null);
    }

    /** Represents a RmqForbidChat. */
    class RmqForbidChat implements IRmqForbidChat {

        /**
         * Constructs a new RmqForbidChat.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqForbidChat);

        /** RmqForbidChat IsForbid. */
        public IsForbid: boolean;

        /**
         * Creates a new RmqForbidChat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqForbidChat instance
         */
        public static create(properties?: pb.IRmqForbidChat): pb.RmqForbidChat;

        /**
         * Encodes the specified RmqForbidChat message. Does not implicitly {@link pb.RmqForbidChat.verify|verify} messages.
         * @param message RmqForbidChat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqForbidChat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqForbidChat message, length delimited. Does not implicitly {@link pb.RmqForbidChat.verify|verify} messages.
         * @param message RmqForbidChat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqForbidChat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqForbidChat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqForbidChat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqForbidChat;

        /**
         * Decodes a RmqForbidChat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqForbidChat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqForbidChat;

        /**
         * Verifies a RmqForbidChat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqWxShareBeHelp. */
    interface IRmqWxShareBeHelp {

        /** RmqWxShareBeHelp ShareType */
        ShareType?: (number|null);

        /** RmqWxShareBeHelp Data */
        Data?: (Uint8Array|null);
    }

    /** Represents a RmqWxShareBeHelp. */
    class RmqWxShareBeHelp implements IRmqWxShareBeHelp {

        /**
         * Constructs a new RmqWxShareBeHelp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqWxShareBeHelp);

        /** RmqWxShareBeHelp ShareType. */
        public ShareType: number;

        /** RmqWxShareBeHelp Data. */
        public Data: Uint8Array;

        /**
         * Creates a new RmqWxShareBeHelp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqWxShareBeHelp instance
         */
        public static create(properties?: pb.IRmqWxShareBeHelp): pb.RmqWxShareBeHelp;

        /**
         * Encodes the specified RmqWxShareBeHelp message. Does not implicitly {@link pb.RmqWxShareBeHelp.verify|verify} messages.
         * @param message RmqWxShareBeHelp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqWxShareBeHelp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqWxShareBeHelp message, length delimited. Does not implicitly {@link pb.RmqWxShareBeHelp.verify|verify} messages.
         * @param message RmqWxShareBeHelp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqWxShareBeHelp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqWxShareBeHelp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqWxShareBeHelp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqWxShareBeHelp;

        /**
         * Decodes a RmqWxShareBeHelp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqWxShareBeHelp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqWxShareBeHelp;

        /**
         * Verifies a RmqWxShareBeHelp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqSdkRecharge. */
    interface IRmqSdkRecharge {

        /** RmqSdkRecharge ChannelUid */
        ChannelUid?: (string|null);

        /** RmqSdkRecharge CpOrderID */
        CpOrderID?: (string|null);

        /** RmqSdkRecharge ChannelOrderID */
        ChannelOrderID?: (string|null);

        /** RmqSdkRecharge PaymentAmount */
        PaymentAmount?: (number|null);
    }

    /** Represents a RmqSdkRecharge. */
    class RmqSdkRecharge implements IRmqSdkRecharge {

        /**
         * Constructs a new RmqSdkRecharge.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqSdkRecharge);

        /** RmqSdkRecharge ChannelUid. */
        public ChannelUid: string;

        /** RmqSdkRecharge CpOrderID. */
        public CpOrderID: string;

        /** RmqSdkRecharge ChannelOrderID. */
        public ChannelOrderID: string;

        /** RmqSdkRecharge PaymentAmount. */
        public PaymentAmount: number;

        /**
         * Creates a new RmqSdkRecharge instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqSdkRecharge instance
         */
        public static create(properties?: pb.IRmqSdkRecharge): pb.RmqSdkRecharge;

        /**
         * Encodes the specified RmqSdkRecharge message. Does not implicitly {@link pb.RmqSdkRecharge.verify|verify} messages.
         * @param message RmqSdkRecharge message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqSdkRecharge, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqSdkRecharge message, length delimited. Does not implicitly {@link pb.RmqSdkRecharge.verify|verify} messages.
         * @param message RmqSdkRecharge message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqSdkRecharge, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqSdkRecharge message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqSdkRecharge
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqSdkRecharge;

        /**
         * Decodes a RmqSdkRecharge message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqSdkRecharge
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqSdkRecharge;

        /**
         * Verifies a RmqSdkRecharge message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqCampaignMissionDone. */
    interface IRmqCampaignMissionDone {

        /** RmqCampaignMissionDone Cards */
        Cards?: (number[]|null);
    }

    /** Represents a RmqCampaignMissionDone. */
    class RmqCampaignMissionDone implements IRmqCampaignMissionDone {

        /**
         * Constructs a new RmqCampaignMissionDone.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqCampaignMissionDone);

        /** RmqCampaignMissionDone Cards. */
        public Cards: number[];

        /**
         * Creates a new RmqCampaignMissionDone instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqCampaignMissionDone instance
         */
        public static create(properties?: pb.IRmqCampaignMissionDone): pb.RmqCampaignMissionDone;

        /**
         * Encodes the specified RmqCampaignMissionDone message. Does not implicitly {@link pb.RmqCampaignMissionDone.verify|verify} messages.
         * @param message RmqCampaignMissionDone message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqCampaignMissionDone, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqCampaignMissionDone message, length delimited. Does not implicitly {@link pb.RmqCampaignMissionDone.verify|verify} messages.
         * @param message RmqCampaignMissionDone message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqCampaignMissionDone, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqCampaignMissionDone message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqCampaignMissionDone
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqCampaignMissionDone;

        /**
         * Decodes a RmqCampaignMissionDone message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqCampaignMissionDone
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqCampaignMissionDone;

        /**
         * Verifies a RmqCampaignMissionDone message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqCampaignAcceptMission. */
    interface IRmqCampaignAcceptMission {

        /** RmqCampaignAcceptMission Cards */
        Cards?: (number[]|null);
    }

    /** Represents a RmqCampaignAcceptMission. */
    class RmqCampaignAcceptMission implements IRmqCampaignAcceptMission {

        /**
         * Constructs a new RmqCampaignAcceptMission.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqCampaignAcceptMission);

        /** RmqCampaignAcceptMission Cards. */
        public Cards: number[];

        /**
         * Creates a new RmqCampaignAcceptMission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqCampaignAcceptMission instance
         */
        public static create(properties?: pb.IRmqCampaignAcceptMission): pb.RmqCampaignAcceptMission;

        /**
         * Encodes the specified RmqCampaignAcceptMission message. Does not implicitly {@link pb.RmqCampaignAcceptMission.verify|verify} messages.
         * @param message RmqCampaignAcceptMission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqCampaignAcceptMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqCampaignAcceptMission message, length delimited. Does not implicitly {@link pb.RmqCampaignAcceptMission.verify|verify} messages.
         * @param message RmqCampaignAcceptMission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqCampaignAcceptMission, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqCampaignAcceptMission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqCampaignAcceptMission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqCampaignAcceptMission;

        /**
         * Decodes a RmqCampaignAcceptMission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqCampaignAcceptMission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqCampaignAcceptMission;

        /**
         * Verifies a RmqCampaignAcceptMission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a RmqUnifiedReward. */
    interface IRmqUnifiedReward {

        /** RmqUnifiedReward Rank */
        Rank?: (number|null);

        /** RmqUnifiedReward Contribution */
        Contribution?: (number|null);

        /** RmqUnifiedReward YourMajestyName */
        YourMajestyName?: (string|null);

        /** RmqUnifiedReward CountryName */
        CountryName?: (string|null);
    }

    /** Represents a RmqUnifiedReward. */
    class RmqUnifiedReward implements IRmqUnifiedReward {

        /**
         * Constructs a new RmqUnifiedReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRmqUnifiedReward);

        /** RmqUnifiedReward Rank. */
        public Rank: number;

        /** RmqUnifiedReward Contribution. */
        public Contribution: number;

        /** RmqUnifiedReward YourMajestyName. */
        public YourMajestyName: string;

        /** RmqUnifiedReward CountryName. */
        public CountryName: string;

        /**
         * Creates a new RmqUnifiedReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RmqUnifiedReward instance
         */
        public static create(properties?: pb.IRmqUnifiedReward): pb.RmqUnifiedReward;

        /**
         * Encodes the specified RmqUnifiedReward message. Does not implicitly {@link pb.RmqUnifiedReward.verify|verify} messages.
         * @param message RmqUnifiedReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRmqUnifiedReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RmqUnifiedReward message, length delimited. Does not implicitly {@link pb.RmqUnifiedReward.verify|verify} messages.
         * @param message RmqUnifiedReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRmqUnifiedReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RmqUnifiedReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RmqUnifiedReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.RmqUnifiedReward;

        /**
         * Decodes a RmqUnifiedReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RmqUnifiedReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.RmqUnifiedReward;

        /**
         * Verifies a RmqUnifiedReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LimitGift. */
    interface ILimitGift {

        /** LimitGift GiftID */
        GiftID?: (string|null);

        /** LimitGift RemainTime */
        RemainTime?: (number|null);

        /** LimitGift Price */
        Price?: (number|null);
    }

    /** Represents a LimitGift. */
    class LimitGift implements ILimitGift {

        /**
         * Constructs a new LimitGift.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILimitGift);

        /** LimitGift GiftID. */
        public GiftID: string;

        /** LimitGift RemainTime. */
        public RemainTime: number;

        /** LimitGift Price. */
        public Price: number;

        /**
         * Creates a new LimitGift instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LimitGift instance
         */
        public static create(properties?: pb.ILimitGift): pb.LimitGift;

        /**
         * Encodes the specified LimitGift message. Does not implicitly {@link pb.LimitGift.verify|verify} messages.
         * @param message LimitGift message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILimitGift, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LimitGift message, length delimited. Does not implicitly {@link pb.LimitGift.verify|verify} messages.
         * @param message LimitGift message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILimitGift, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LimitGift message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LimitGift
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LimitGift;

        /**
         * Decodes a LimitGift message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LimitGift
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LimitGift;

        /**
         * Verifies a LimitGift message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a JadeGoods. */
    interface IJadeGoods {

        /** JadeGoods GoodsID */
        GoodsID?: (string|null);

        /** JadeGoods Price */
        Price?: (number|null);

        /** JadeGoods Jade */
        Jade?: (number|null);
    }

    /** Represents a JadeGoods. */
    class JadeGoods implements IJadeGoods {

        /**
         * Constructs a new JadeGoods.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IJadeGoods);

        /** JadeGoods GoodsID. */
        public GoodsID: string;

        /** JadeGoods Price. */
        public Price: number;

        /** JadeGoods Jade. */
        public Jade: number;

        /**
         * Creates a new JadeGoods instance using the specified properties.
         * @param [properties] Properties to set
         * @returns JadeGoods instance
         */
        public static create(properties?: pb.IJadeGoods): pb.JadeGoods;

        /**
         * Encodes the specified JadeGoods message. Does not implicitly {@link pb.JadeGoods.verify|verify} messages.
         * @param message JadeGoods message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IJadeGoods, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified JadeGoods message, length delimited. Does not implicitly {@link pb.JadeGoods.verify|verify} messages.
         * @param message JadeGoods message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IJadeGoods, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a JadeGoods message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns JadeGoods
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.JadeGoods;

        /**
         * Decodes a JadeGoods message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns JadeGoods
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.JadeGoods;

        /**
         * Verifies a JadeGoods message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SoldTreasure. */
    interface ISoldTreasure {

        /** SoldTreasure TreasureModelID */
        TreasureModelID?: (string|null);

        /** SoldTreasure NeedJade */
        NeedJade?: (number|null);
    }

    /** Represents a SoldTreasure. */
    class SoldTreasure implements ISoldTreasure {

        /**
         * Constructs a new SoldTreasure.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISoldTreasure);

        /** SoldTreasure TreasureModelID. */
        public TreasureModelID: string;

        /** SoldTreasure NeedJade. */
        public NeedJade: number;

        /**
         * Creates a new SoldTreasure instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SoldTreasure instance
         */
        public static create(properties?: pb.ISoldTreasure): pb.SoldTreasure;

        /**
         * Encodes the specified SoldTreasure message. Does not implicitly {@link pb.SoldTreasure.verify|verify} messages.
         * @param message SoldTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISoldTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SoldTreasure message, length delimited. Does not implicitly {@link pb.SoldTreasure.verify|verify} messages.
         * @param message SoldTreasure message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISoldTreasure, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SoldTreasure message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SoldTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SoldTreasure;

        /**
         * Decodes a SoldTreasure message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SoldTreasure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SoldTreasure;

        /**
         * Verifies a SoldTreasure message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GoldGoods. */
    interface IGoldGoods {

        /** GoldGoods GoodsID */
        GoodsID?: (string|null);

        /** GoldGoods Gold */
        Gold?: (number|null);

        /** GoldGoods NeedJade */
        NeedJade?: (number|null);
    }

    /** Represents a GoldGoods. */
    class GoldGoods implements IGoldGoods {

        /**
         * Constructs a new GoldGoods.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGoldGoods);

        /** GoldGoods GoodsID. */
        public GoodsID: string;

        /** GoldGoods Gold. */
        public Gold: number;

        /** GoldGoods NeedJade. */
        public NeedJade: number;

        /**
         * Creates a new GoldGoods instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GoldGoods instance
         */
        public static create(properties?: pb.IGoldGoods): pb.GoldGoods;

        /**
         * Encodes the specified GoldGoods message. Does not implicitly {@link pb.GoldGoods.verify|verify} messages.
         * @param message GoldGoods message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGoldGoods, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GoldGoods message, length delimited. Does not implicitly {@link pb.GoldGoods.verify|verify} messages.
         * @param message GoldGoods message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGoldGoods, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GoldGoods message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GoldGoods
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GoldGoods;

        /**
         * Decodes a GoldGoods message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GoldGoods
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GoldGoods;

        /**
         * Verifies a GoldGoods message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ShopData. */
    interface IShopData {

        /** ShopData Gift */
        Gift?: (pb.ILimitGift[]|null);

        /** ShopData SoldTreasures */
        SoldTreasures?: (pb.ISoldTreasure[]|null);

        /** ShopData SoldTreasureRemainTime */
        SoldTreasureRemainTime?: (number|null);

        /** ShopData JadeGoodsList */
        JadeGoodsList?: (pb.IJadeGoods[]|null);

        /** ShopData GoldGoodsList */
        GoldGoodsList?: (pb.IGoldGoods[]|null);

        /** ShopData Adses */
        Adses?: (pb.IShopFreeAds[]|null);

        /** ShopData BuyGoldRemainTime */
        BuyGoldRemainTime?: (number|null);

        /** ShopData VipCard */
        VipCard?: (pb.IVipCardGoods|null);
    }

    /** Represents a ShopData. */
    class ShopData implements IShopData {

        /**
         * Constructs a new ShopData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IShopData);

        /** ShopData Gift. */
        public Gift: pb.ILimitGift[];

        /** ShopData SoldTreasures. */
        public SoldTreasures: pb.ISoldTreasure[];

        /** ShopData SoldTreasureRemainTime. */
        public SoldTreasureRemainTime: number;

        /** ShopData JadeGoodsList. */
        public JadeGoodsList: pb.IJadeGoods[];

        /** ShopData GoldGoodsList. */
        public GoldGoodsList: pb.IGoldGoods[];

        /** ShopData Adses. */
        public Adses: pb.IShopFreeAds[];

        /** ShopData BuyGoldRemainTime. */
        public BuyGoldRemainTime: number;

        /** ShopData VipCard. */
        public VipCard?: (pb.IVipCardGoods|null);

        /**
         * Creates a new ShopData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopData instance
         */
        public static create(properties?: pb.IShopData): pb.ShopData;

        /**
         * Encodes the specified ShopData message. Does not implicitly {@link pb.ShopData.verify|verify} messages.
         * @param message ShopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IShopData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ShopData message, length delimited. Does not implicitly {@link pb.ShopData.verify|verify} messages.
         * @param message ShopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IShopData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ShopData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ShopData;

        /**
         * Decodes a ShopData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ShopData;

        /**
         * Verifies a ShopData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VipCardGoods. */
    interface IVipCardGoods {

        /** VipCardGoods GoodsID */
        GoodsID?: (string|null);

        /** VipCardGoods JadePrice */
        JadePrice?: (number|null);
    }

    /** Represents a VipCardGoods. */
    class VipCardGoods implements IVipCardGoods {

        /**
         * Constructs a new VipCardGoods.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVipCardGoods);

        /** VipCardGoods GoodsID. */
        public GoodsID: string;

        /** VipCardGoods JadePrice. */
        public JadePrice: number;

        /**
         * Creates a new VipCardGoods instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VipCardGoods instance
         */
        public static create(properties?: pb.IVipCardGoods): pb.VipCardGoods;

        /**
         * Encodes the specified VipCardGoods message. Does not implicitly {@link pb.VipCardGoods.verify|verify} messages.
         * @param message VipCardGoods message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVipCardGoods, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VipCardGoods message, length delimited. Does not implicitly {@link pb.VipCardGoods.verify|verify} messages.
         * @param message VipCardGoods message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVipCardGoods, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VipCardGoods message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VipCardGoods
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VipCardGoods;

        /**
         * Decodes a VipCardGoods message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VipCardGoods
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VipCardGoods;

        /**
         * Verifies a VipCardGoods message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuyJadeArg. */
    interface IBuyJadeArg {

        /** BuyJadeArg GoodsID */
        GoodsID?: (string|null);

        /** BuyJadeArg Receipt */
        Receipt?: (string|null);
    }

    /** Represents a BuyJadeArg. */
    class BuyJadeArg implements IBuyJadeArg {

        /**
         * Constructs a new BuyJadeArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuyJadeArg);

        /** BuyJadeArg GoodsID. */
        public GoodsID: string;

        /** BuyJadeArg Receipt. */
        public Receipt: string;

        /**
         * Creates a new BuyJadeArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyJadeArg instance
         */
        public static create(properties?: pb.IBuyJadeArg): pb.BuyJadeArg;

        /**
         * Encodes the specified BuyJadeArg message. Does not implicitly {@link pb.BuyJadeArg.verify|verify} messages.
         * @param message BuyJadeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuyJadeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuyJadeArg message, length delimited. Does not implicitly {@link pb.BuyJadeArg.verify|verify} messages.
         * @param message BuyJadeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuyJadeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyJadeArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyJadeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuyJadeArg;

        /**
         * Decodes a BuyJadeArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyJadeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuyJadeArg;

        /**
         * Verifies a BuyJadeArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuyJadeReply. */
    interface IBuyJadeReply {

        /** BuyJadeReply Jade */
        Jade?: (number|null);

        /** BuyJadeReply RewardJade */
        RewardJade?: (number|null);
    }

    /** Represents a BuyJadeReply. */
    class BuyJadeReply implements IBuyJadeReply {

        /**
         * Constructs a new BuyJadeReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuyJadeReply);

        /** BuyJadeReply Jade. */
        public Jade: number;

        /** BuyJadeReply RewardJade. */
        public RewardJade: number;

        /**
         * Creates a new BuyJadeReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyJadeReply instance
         */
        public static create(properties?: pb.IBuyJadeReply): pb.BuyJadeReply;

        /**
         * Encodes the specified BuyJadeReply message. Does not implicitly {@link pb.BuyJadeReply.verify|verify} messages.
         * @param message BuyJadeReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuyJadeReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuyJadeReply message, length delimited. Does not implicitly {@link pb.BuyJadeReply.verify|verify} messages.
         * @param message BuyJadeReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuyJadeReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyJadeReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyJadeReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuyJadeReply;

        /**
         * Decodes a BuyJadeReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyJadeReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuyJadeReply;

        /**
         * Verifies a BuyJadeReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuyLimitGiftArg. */
    interface IBuyLimitGiftArg {

        /** BuyLimitGiftArg GiftID */
        GiftID?: (string|null);

        /** BuyLimitGiftArg Receipt */
        Receipt?: (string|null);
    }

    /** Represents a BuyLimitGiftArg. */
    class BuyLimitGiftArg implements IBuyLimitGiftArg {

        /**
         * Constructs a new BuyLimitGiftArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuyLimitGiftArg);

        /** BuyLimitGiftArg GiftID. */
        public GiftID: string;

        /** BuyLimitGiftArg Receipt. */
        public Receipt: string;

        /**
         * Creates a new BuyLimitGiftArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyLimitGiftArg instance
         */
        public static create(properties?: pb.IBuyLimitGiftArg): pb.BuyLimitGiftArg;

        /**
         * Encodes the specified BuyLimitGiftArg message. Does not implicitly {@link pb.BuyLimitGiftArg.verify|verify} messages.
         * @param message BuyLimitGiftArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuyLimitGiftArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuyLimitGiftArg message, length delimited. Does not implicitly {@link pb.BuyLimitGiftArg.verify|verify} messages.
         * @param message BuyLimitGiftArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuyLimitGiftArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyLimitGiftArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyLimitGiftArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuyLimitGiftArg;

        /**
         * Decodes a BuyLimitGiftArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyLimitGiftArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuyLimitGiftArg;

        /**
         * Verifies a BuyLimitGiftArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuyLimitGiftReply. */
    interface IBuyLimitGiftReply {

        /** BuyLimitGiftReply GiftReward */
        GiftReward?: (pb.IOpenTreasureReply|null);

        /** BuyLimitGiftReply NextGift */
        NextGift?: (pb.ILimitGift|null);
    }

    /** Represents a BuyLimitGiftReply. */
    class BuyLimitGiftReply implements IBuyLimitGiftReply {

        /**
         * Constructs a new BuyLimitGiftReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuyLimitGiftReply);

        /** BuyLimitGiftReply GiftReward. */
        public GiftReward?: (pb.IOpenTreasureReply|null);

        /** BuyLimitGiftReply NextGift. */
        public NextGift?: (pb.ILimitGift|null);

        /**
         * Creates a new BuyLimitGiftReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyLimitGiftReply instance
         */
        public static create(properties?: pb.IBuyLimitGiftReply): pb.BuyLimitGiftReply;

        /**
         * Encodes the specified BuyLimitGiftReply message. Does not implicitly {@link pb.BuyLimitGiftReply.verify|verify} messages.
         * @param message BuyLimitGiftReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuyLimitGiftReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuyLimitGiftReply message, length delimited. Does not implicitly {@link pb.BuyLimitGiftReply.verify|verify} messages.
         * @param message BuyLimitGiftReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuyLimitGiftReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyLimitGiftReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyLimitGiftReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuyLimitGiftReply;

        /**
         * Decodes a BuyLimitGiftReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyLimitGiftReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuyLimitGiftReply;

        /**
         * Verifies a BuyLimitGiftReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuySoldTreasureArg. */
    interface IBuySoldTreasureArg {

        /** BuySoldTreasureArg TreasureModelID */
        TreasureModelID?: (string|null);
    }

    /** Represents a BuySoldTreasureArg. */
    class BuySoldTreasureArg implements IBuySoldTreasureArg {

        /**
         * Constructs a new BuySoldTreasureArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuySoldTreasureArg);

        /** BuySoldTreasureArg TreasureModelID. */
        public TreasureModelID: string;

        /**
         * Creates a new BuySoldTreasureArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuySoldTreasureArg instance
         */
        public static create(properties?: pb.IBuySoldTreasureArg): pb.BuySoldTreasureArg;

        /**
         * Encodes the specified BuySoldTreasureArg message. Does not implicitly {@link pb.BuySoldTreasureArg.verify|verify} messages.
         * @param message BuySoldTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuySoldTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuySoldTreasureArg message, length delimited. Does not implicitly {@link pb.BuySoldTreasureArg.verify|verify} messages.
         * @param message BuySoldTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuySoldTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuySoldTreasureArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuySoldTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuySoldTreasureArg;

        /**
         * Decodes a BuySoldTreasureArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuySoldTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuySoldTreasureArg;

        /**
         * Verifies a BuySoldTreasureArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuySoldTreasureReply. */
    interface IBuySoldTreasureReply {

        /** BuySoldTreasureReply TreasureReward */
        TreasureReward?: (pb.IOpenTreasureReply|null);

        /** BuySoldTreasureReply NextRemainTime */
        NextRemainTime?: (number|null);
    }

    /** Represents a BuySoldTreasureReply. */
    class BuySoldTreasureReply implements IBuySoldTreasureReply {

        /**
         * Constructs a new BuySoldTreasureReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuySoldTreasureReply);

        /** BuySoldTreasureReply TreasureReward. */
        public TreasureReward?: (pb.IOpenTreasureReply|null);

        /** BuySoldTreasureReply NextRemainTime. */
        public NextRemainTime: number;

        /**
         * Creates a new BuySoldTreasureReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuySoldTreasureReply instance
         */
        public static create(properties?: pb.IBuySoldTreasureReply): pb.BuySoldTreasureReply;

        /**
         * Encodes the specified BuySoldTreasureReply message. Does not implicitly {@link pb.BuySoldTreasureReply.verify|verify} messages.
         * @param message BuySoldTreasureReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuySoldTreasureReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuySoldTreasureReply message, length delimited. Does not implicitly {@link pb.BuySoldTreasureReply.verify|verify} messages.
         * @param message BuySoldTreasureReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuySoldTreasureReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuySoldTreasureReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuySoldTreasureReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuySoldTreasureReply;

        /**
         * Decodes a BuySoldTreasureReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuySoldTreasureReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuySoldTreasureReply;

        /**
         * Verifies a BuySoldTreasureReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuyGoldArg. */
    interface IBuyGoldArg {

        /** BuyGoldArg GoodsID */
        GoodsID?: (string|null);
    }

    /** Represents a BuyGoldArg. */
    class BuyGoldArg implements IBuyGoldArg {

        /**
         * Constructs a new BuyGoldArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuyGoldArg);

        /** BuyGoldArg GoodsID. */
        public GoodsID: string;

        /**
         * Creates a new BuyGoldArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyGoldArg instance
         */
        public static create(properties?: pb.IBuyGoldArg): pb.BuyGoldArg;

        /**
         * Encodes the specified BuyGoldArg message. Does not implicitly {@link pb.BuyGoldArg.verify|verify} messages.
         * @param message BuyGoldArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuyGoldArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuyGoldArg message, length delimited. Does not implicitly {@link pb.BuyGoldArg.verify|verify} messages.
         * @param message BuyGoldArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuyGoldArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyGoldArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyGoldArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuyGoldArg;

        /**
         * Decodes a BuyGoldArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyGoldArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuyGoldArg;

        /**
         * Verifies a BuyGoldArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuyGoldReply. */
    interface IBuyGoldReply {

        /** BuyGoldReply Gold */
        Gold?: (number|null);

        /** BuyGoldReply NextRemainTime */
        NextRemainTime?: (number|null);
    }

    /** Represents a BuyGoldReply. */
    class BuyGoldReply implements IBuyGoldReply {

        /**
         * Constructs a new BuyGoldReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuyGoldReply);

        /** BuyGoldReply Gold. */
        public Gold: number;

        /** BuyGoldReply NextRemainTime. */
        public NextRemainTime: number;

        /**
         * Creates a new BuyGoldReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyGoldReply instance
         */
        public static create(properties?: pb.IBuyGoldReply): pb.BuyGoldReply;

        /**
         * Encodes the specified BuyGoldReply message. Does not implicitly {@link pb.BuyGoldReply.verify|verify} messages.
         * @param message BuyGoldReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuyGoldReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuyGoldReply message, length delimited. Does not implicitly {@link pb.BuyGoldReply.verify|verify} messages.
         * @param message BuyGoldReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuyGoldReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyGoldReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyGoldReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuyGoldReply;

        /**
         * Decodes a BuyGoldReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyGoldReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuyGoldReply;

        /**
         * Verifies a BuyGoldReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SdkCreateOrderArg. */
    interface ISdkCreateOrderArg {

        /** SdkCreateOrderArg GoodsID */
        GoodsID?: (string|null);
    }

    /** Represents a SdkCreateOrderArg. */
    class SdkCreateOrderArg implements ISdkCreateOrderArg {

        /**
         * Constructs a new SdkCreateOrderArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISdkCreateOrderArg);

        /** SdkCreateOrderArg GoodsID. */
        public GoodsID: string;

        /**
         * Creates a new SdkCreateOrderArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SdkCreateOrderArg instance
         */
        public static create(properties?: pb.ISdkCreateOrderArg): pb.SdkCreateOrderArg;

        /**
         * Encodes the specified SdkCreateOrderArg message. Does not implicitly {@link pb.SdkCreateOrderArg.verify|verify} messages.
         * @param message SdkCreateOrderArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISdkCreateOrderArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SdkCreateOrderArg message, length delimited. Does not implicitly {@link pb.SdkCreateOrderArg.verify|verify} messages.
         * @param message SdkCreateOrderArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISdkCreateOrderArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SdkCreateOrderArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SdkCreateOrderArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SdkCreateOrderArg;

        /**
         * Decodes a SdkCreateOrderArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SdkCreateOrderArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SdkCreateOrderArg;

        /**
         * Verifies a SdkCreateOrderArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SdkCreateOrderReply. */
    interface ISdkCreateOrderReply {

        /** SdkCreateOrderReply OrderID */
        OrderID?: (string|null);
    }

    /** Represents a SdkCreateOrderReply. */
    class SdkCreateOrderReply implements ISdkCreateOrderReply {

        /**
         * Constructs a new SdkCreateOrderReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISdkCreateOrderReply);

        /** SdkCreateOrderReply OrderID. */
        public OrderID: string;

        /**
         * Creates a new SdkCreateOrderReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SdkCreateOrderReply instance
         */
        public static create(properties?: pb.ISdkCreateOrderReply): pb.SdkCreateOrderReply;

        /**
         * Encodes the specified SdkCreateOrderReply message. Does not implicitly {@link pb.SdkCreateOrderReply.verify|verify} messages.
         * @param message SdkCreateOrderReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISdkCreateOrderReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SdkCreateOrderReply message, length delimited. Does not implicitly {@link pb.SdkCreateOrderReply.verify|verify} messages.
         * @param message SdkCreateOrderReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISdkCreateOrderReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SdkCreateOrderReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SdkCreateOrderReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SdkCreateOrderReply;

        /**
         * Decodes a SdkCreateOrderReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SdkCreateOrderReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SdkCreateOrderReply;

        /**
         * Verifies a SdkCreateOrderReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SdkRechargeResult. */
    interface ISdkRechargeResult {

        /** SdkRechargeResult Errcode */
        Errcode?: (pb.SdkRechargeResult.RechargeErr|null);

        /** SdkRechargeResult LimitGift */
        LimitGift?: (pb.IBuyLimitGiftReply|null);

        /** SdkRechargeResult Jade */
        Jade?: (pb.IBuyJadeReply|null);
    }

    /** Represents a SdkRechargeResult. */
    class SdkRechargeResult implements ISdkRechargeResult {

        /**
         * Constructs a new SdkRechargeResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISdkRechargeResult);

        /** SdkRechargeResult Errcode. */
        public Errcode: pb.SdkRechargeResult.RechargeErr;

        /** SdkRechargeResult LimitGift. */
        public LimitGift?: (pb.IBuyLimitGiftReply|null);

        /** SdkRechargeResult Jade. */
        public Jade?: (pb.IBuyJadeReply|null);

        /**
         * Creates a new SdkRechargeResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SdkRechargeResult instance
         */
        public static create(properties?: pb.ISdkRechargeResult): pb.SdkRechargeResult;

        /**
         * Encodes the specified SdkRechargeResult message. Does not implicitly {@link pb.SdkRechargeResult.verify|verify} messages.
         * @param message SdkRechargeResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISdkRechargeResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SdkRechargeResult message, length delimited. Does not implicitly {@link pb.SdkRechargeResult.verify|verify} messages.
         * @param message SdkRechargeResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISdkRechargeResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SdkRechargeResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SdkRechargeResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SdkRechargeResult;

        /**
         * Decodes a SdkRechargeResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SdkRechargeResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SdkRechargeResult;

        /**
         * Verifies a SdkRechargeResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace SdkRechargeResult {

        /** RechargeErr enum. */
        enum RechargeErr {
            Success = 0,
            Fail = 1
        }
    }

    /** Properties of an IosPrePayArg. */
    interface IIosPrePayArg {

        /** IosPrePayArg GoodsID */
        GoodsID?: (string|null);
    }

    /** Represents an IosPrePayArg. */
    class IosPrePayArg implements IIosPrePayArg {

        /**
         * Constructs a new IosPrePayArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IIosPrePayArg);

        /** IosPrePayArg GoodsID. */
        public GoodsID: string;

        /**
         * Creates a new IosPrePayArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IosPrePayArg instance
         */
        public static create(properties?: pb.IIosPrePayArg): pb.IosPrePayArg;

        /**
         * Encodes the specified IosPrePayArg message. Does not implicitly {@link pb.IosPrePayArg.verify|verify} messages.
         * @param message IosPrePayArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IIosPrePayArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified IosPrePayArg message, length delimited. Does not implicitly {@link pb.IosPrePayArg.verify|verify} messages.
         * @param message IosPrePayArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IIosPrePayArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an IosPrePayArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IosPrePayArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.IosPrePayArg;

        /**
         * Decodes an IosPrePayArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IosPrePayArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.IosPrePayArg;

        /**
         * Verifies an IosPrePayArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuyLimitGiftByJadeArg. */
    interface IBuyLimitGiftByJadeArg {

        /** BuyLimitGiftByJadeArg GiftID */
        GiftID?: (string|null);
    }

    /** Represents a BuyLimitGiftByJadeArg. */
    class BuyLimitGiftByJadeArg implements IBuyLimitGiftByJadeArg {

        /**
         * Constructs a new BuyLimitGiftByJadeArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuyLimitGiftByJadeArg);

        /** BuyLimitGiftByJadeArg GiftID. */
        public GiftID: string;

        /**
         * Creates a new BuyLimitGiftByJadeArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyLimitGiftByJadeArg instance
         */
        public static create(properties?: pb.IBuyLimitGiftByJadeArg): pb.BuyLimitGiftByJadeArg;

        /**
         * Encodes the specified BuyLimitGiftByJadeArg message. Does not implicitly {@link pb.BuyLimitGiftByJadeArg.verify|verify} messages.
         * @param message BuyLimitGiftByJadeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuyLimitGiftByJadeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuyLimitGiftByJadeArg message, length delimited. Does not implicitly {@link pb.BuyLimitGiftByJadeArg.verify|verify} messages.
         * @param message BuyLimitGiftByJadeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuyLimitGiftByJadeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyLimitGiftByJadeArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyLimitGiftByJadeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuyLimitGiftByJadeArg;

        /**
         * Decodes a BuyLimitGiftByJadeArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyLimitGiftByJadeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuyLimitGiftByJadeArg;

        /**
         * Verifies a BuyLimitGiftByJadeArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GooglePlayRechargeArg. */
    interface IGooglePlayRechargeArg {

        /** GooglePlayRechargeArg GoodsID */
        GoodsID?: (string|null);

        /** GooglePlayRechargeArg InappPurchaseData */
        InappPurchaseData?: (string|null);

        /** GooglePlayRechargeArg InappDataSignature */
        InappDataSignature?: (string|null);

        /** GooglePlayRechargeArg Money */
        Money?: (number|null);

        /** GooglePlayRechargeArg Currency */
        Currency?: (string|null);
    }

    /** Represents a GooglePlayRechargeArg. */
    class GooglePlayRechargeArg implements IGooglePlayRechargeArg {

        /**
         * Constructs a new GooglePlayRechargeArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGooglePlayRechargeArg);

        /** GooglePlayRechargeArg GoodsID. */
        public GoodsID: string;

        /** GooglePlayRechargeArg InappPurchaseData. */
        public InappPurchaseData: string;

        /** GooglePlayRechargeArg InappDataSignature. */
        public InappDataSignature: string;

        /** GooglePlayRechargeArg Money. */
        public Money: number;

        /** GooglePlayRechargeArg Currency. */
        public Currency: string;

        /**
         * Creates a new GooglePlayRechargeArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GooglePlayRechargeArg instance
         */
        public static create(properties?: pb.IGooglePlayRechargeArg): pb.GooglePlayRechargeArg;

        /**
         * Encodes the specified GooglePlayRechargeArg message. Does not implicitly {@link pb.GooglePlayRechargeArg.verify|verify} messages.
         * @param message GooglePlayRechargeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGooglePlayRechargeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GooglePlayRechargeArg message, length delimited. Does not implicitly {@link pb.GooglePlayRechargeArg.verify|verify} messages.
         * @param message GooglePlayRechargeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGooglePlayRechargeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GooglePlayRechargeArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GooglePlayRechargeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GooglePlayRechargeArg;

        /**
         * Decodes a GooglePlayRechargeArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GooglePlayRechargeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GooglePlayRechargeArg;

        /**
         * Verifies a GooglePlayRechargeArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BuyVipCardReply. */
    interface IBuyVipCardReply {

        /** BuyVipCardReply HeadFrame */
        HeadFrame?: (string|null);

        /** BuyVipCardReply RemainTime */
        RemainTime?: (number|null);
    }

    /** Represents a BuyVipCardReply. */
    class BuyVipCardReply implements IBuyVipCardReply {

        /**
         * Constructs a new BuyVipCardReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBuyVipCardReply);

        /** BuyVipCardReply HeadFrame. */
        public HeadFrame: string;

        /** BuyVipCardReply RemainTime. */
        public RemainTime: number;

        /**
         * Creates a new BuyVipCardReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyVipCardReply instance
         */
        public static create(properties?: pb.IBuyVipCardReply): pb.BuyVipCardReply;

        /**
         * Encodes the specified BuyVipCardReply message. Does not implicitly {@link pb.BuyVipCardReply.verify|verify} messages.
         * @param message BuyVipCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBuyVipCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuyVipCardReply message, length delimited. Does not implicitly {@link pb.BuyVipCardReply.verify|verify} messages.
         * @param message BuyVipCardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBuyVipCardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyVipCardReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyVipCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BuyVipCardReply;

        /**
         * Decodes a BuyVipCardReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyVipCardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BuyVipCardReply;

        /**
         * Verifies a BuyVipCardReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TargetPlayer. */
    interface ITargetPlayer {

        /** TargetPlayer Uid */
        Uid?: (number|Long|null);
    }

    /** Represents a TargetPlayer. */
    class TargetPlayer implements ITargetPlayer {

        /**
         * Constructs a new TargetPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetPlayer);

        /** TargetPlayer Uid. */
        public Uid: (number|Long);

        /**
         * Creates a new TargetPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetPlayer instance
         */
        public static create(properties?: pb.ITargetPlayer): pb.TargetPlayer;

        /**
         * Encodes the specified TargetPlayer message. Does not implicitly {@link pb.TargetPlayer.verify|verify} messages.
         * @param message TargetPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetPlayer message, length delimited. Does not implicitly {@link pb.TargetPlayer.verify|verify} messages.
         * @param message TargetPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetPlayer;

        /**
         * Decodes a TargetPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetPlayer;

        /**
         * Verifies a TargetPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a PlayerInfo. */
    interface IPlayerInfo {

        /** PlayerInfo Name */
        Name?: (string|null);

        /** PlayerInfo PvpScore */
        PvpScore?: (number|null);

        /** PlayerInfo HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** PlayerInfo BattleAmount */
        BattleAmount?: (number|null);

        /** PlayerInfo BattleWinAmount */
        BattleWinAmount?: (number|null);

        /** PlayerInfo FirstHandWinRate */
        FirstHandWinRate?: (number|null);

        /** PlayerInfo BackHandWinRate */
        BackHandWinRate?: (number|null);

        /** PlayerInfo RankScore */
        RankScore?: (number|null);

        /** PlayerInfo FavoriteCards */
        FavoriteCards?: (pb.ISkinGCard[]|null);

        /** PlayerInfo FightCards */
        FightCards?: (pb.ISkinGCard[]|null);

        /** PlayerInfo IsFriend */
        IsFriend?: (boolean|null);

        /** PlayerInfo IsWechatFriend */
        IsWechatFriend?: (boolean|null);

        /** PlayerInfo CanInviteBattle */
        CanInviteBattle?: (boolean|null);

        /** PlayerInfo Country */
        Country?: (string|null);

        /** PlayerInfo HeadFrame */
        HeadFrame?: (string|null);

        /** PlayerInfo CityID */
        CityID?: (number|null);

        /** PlayerInfo CityJob */
        CityJob?: (pb.CampaignJob|null);

        /** PlayerInfo CountryJob */
        CountryJob?: (pb.CampaignJob|null);

        /** PlayerInfo CampaignCountry */
        CampaignCountry?: (string|null);
    }

    /** Represents a PlayerInfo. */
    class PlayerInfo implements IPlayerInfo {

        /**
         * Constructs a new PlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPlayerInfo);

        /** PlayerInfo Name. */
        public Name: string;

        /** PlayerInfo PvpScore. */
        public PvpScore: number;

        /** PlayerInfo HeadImgUrl. */
        public HeadImgUrl: string;

        /** PlayerInfo BattleAmount. */
        public BattleAmount: number;

        /** PlayerInfo BattleWinAmount. */
        public BattleWinAmount: number;

        /** PlayerInfo FirstHandWinRate. */
        public FirstHandWinRate: number;

        /** PlayerInfo BackHandWinRate. */
        public BackHandWinRate: number;

        /** PlayerInfo RankScore. */
        public RankScore: number;

        /** PlayerInfo FavoriteCards. */
        public FavoriteCards: pb.ISkinGCard[];

        /** PlayerInfo FightCards. */
        public FightCards: pb.ISkinGCard[];

        /** PlayerInfo IsFriend. */
        public IsFriend: boolean;

        /** PlayerInfo IsWechatFriend. */
        public IsWechatFriend: boolean;

        /** PlayerInfo CanInviteBattle. */
        public CanInviteBattle: boolean;

        /** PlayerInfo Country. */
        public Country: string;

        /** PlayerInfo HeadFrame. */
        public HeadFrame: string;

        /** PlayerInfo CityID. */
        public CityID: number;

        /** PlayerInfo CityJob. */
        public CityJob: pb.CampaignJob;

        /** PlayerInfo CountryJob. */
        public CountryJob: pb.CampaignJob;

        /** PlayerInfo CampaignCountry. */
        public CampaignCountry: string;

        /**
         * Creates a new PlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerInfo instance
         */
        public static create(properties?: pb.IPlayerInfo): pb.PlayerInfo;

        /**
         * Encodes the specified PlayerInfo message. Does not implicitly {@link pb.PlayerInfo.verify|verify} messages.
         * @param message PlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PlayerInfo message, length delimited. Does not implicitly {@link pb.PlayerInfo.verify|verify} messages.
         * @param message PlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.PlayerInfo;

        /**
         * Decodes a PlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.PlayerInfo;

        /**
         * Verifies a PlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FriendItem. */
    interface IFriendItem {

        /** FriendItem Uid */
        Uid?: (number|Long|null);

        /** FriendItem Name */
        Name?: (string|null);

        /** FriendItem PvpScore */
        PvpScore?: (number|null);

        /** FriendItem IsOnline */
        IsOnline?: (boolean|null);

        /** FriendItem IsInBattle */
        IsInBattle?: (boolean|null);

        /** FriendItem HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** FriendItem LastOnlineTime */
        LastOnlineTime?: (number|null);

        /** FriendItem IsWechatFriend */
        IsWechatFriend?: (boolean|null);

        /** FriendItem PvpCamp */
        PvpCamp?: (number|null);

        /** FriendItem Country */
        Country?: (string|null);

        /** FriendItem HeadFrame */
        HeadFrame?: (string|null);

        /** FriendItem RebornCnt */
        RebornCnt?: (number|null);
    }

    /** Represents a FriendItem. */
    class FriendItem implements IFriendItem {

        /**
         * Constructs a new FriendItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFriendItem);

        /** FriendItem Uid. */
        public Uid: (number|Long);

        /** FriendItem Name. */
        public Name: string;

        /** FriendItem PvpScore. */
        public PvpScore: number;

        /** FriendItem IsOnline. */
        public IsOnline: boolean;

        /** FriendItem IsInBattle. */
        public IsInBattle: boolean;

        /** FriendItem HeadImgUrl. */
        public HeadImgUrl: string;

        /** FriendItem LastOnlineTime. */
        public LastOnlineTime: number;

        /** FriendItem IsWechatFriend. */
        public IsWechatFriend: boolean;

        /** FriendItem PvpCamp. */
        public PvpCamp: number;

        /** FriendItem Country. */
        public Country: string;

        /** FriendItem HeadFrame. */
        public HeadFrame: string;

        /** FriendItem RebornCnt. */
        public RebornCnt: number;

        /**
         * Creates a new FriendItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FriendItem instance
         */
        public static create(properties?: pb.IFriendItem): pb.FriendItem;

        /**
         * Encodes the specified FriendItem message. Does not implicitly {@link pb.FriendItem.verify|verify} messages.
         * @param message FriendItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFriendItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FriendItem message, length delimited. Does not implicitly {@link pb.FriendItem.verify|verify} messages.
         * @param message FriendItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFriendItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FriendItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FriendItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FriendItem;

        /**
         * Decodes a FriendItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FriendItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FriendItem;

        /**
         * Verifies a FriendItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FriendList. */
    interface IFriendList {

        /** FriendList LastOpponent */
        LastOpponent?: (pb.IFriendItem|null);

        /** FriendList Friends */
        Friends?: (pb.IFriendItem[]|null);
    }

    /** Represents a FriendList. */
    class FriendList implements IFriendList {

        /**
         * Constructs a new FriendList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFriendList);

        /** FriendList LastOpponent. */
        public LastOpponent?: (pb.IFriendItem|null);

        /** FriendList Friends. */
        public Friends: pb.IFriendItem[];

        /**
         * Creates a new FriendList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FriendList instance
         */
        public static create(properties?: pb.IFriendList): pb.FriendList;

        /**
         * Encodes the specified FriendList message. Does not implicitly {@link pb.FriendList.verify|verify} messages.
         * @param message FriendList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFriendList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FriendList message, length delimited. Does not implicitly {@link pb.FriendList.verify|verify} messages.
         * @param message FriendList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFriendList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FriendList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FriendList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FriendList;

        /**
         * Decodes a FriendList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FriendList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FriendList;

        /**
         * Verifies a FriendList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FriendApply. */
    interface IFriendApply {

        /** FriendApply Uid */
        Uid?: (number|Long|null);

        /** FriendApply Name */
        Name?: (string|null);

        /** FriendApply PvpScore */
        PvpScore?: (number|null);

        /** FriendApply HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** FriendApply Country */
        Country?: (string|null);

        /** FriendApply HeadFrame */
        HeadFrame?: (string|null);
    }

    /** Represents a FriendApply. */
    class FriendApply implements IFriendApply {

        /**
         * Constructs a new FriendApply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFriendApply);

        /** FriendApply Uid. */
        public Uid: (number|Long);

        /** FriendApply Name. */
        public Name: string;

        /** FriendApply PvpScore. */
        public PvpScore: number;

        /** FriendApply HeadImgUrl. */
        public HeadImgUrl: string;

        /** FriendApply Country. */
        public Country: string;

        /** FriendApply HeadFrame. */
        public HeadFrame: string;

        /**
         * Creates a new FriendApply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FriendApply instance
         */
        public static create(properties?: pb.IFriendApply): pb.FriendApply;

        /**
         * Encodes the specified FriendApply message. Does not implicitly {@link pb.FriendApply.verify|verify} messages.
         * @param message FriendApply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFriendApply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FriendApply message, length delimited. Does not implicitly {@link pb.FriendApply.verify|verify} messages.
         * @param message FriendApply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFriendApply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FriendApply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FriendApply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FriendApply;

        /**
         * Decodes a FriendApply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FriendApply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FriendApply;

        /**
         * Verifies a FriendApply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FriendApplyList. */
    interface IFriendApplyList {

        /** FriendApplyList FriendApplys */
        FriendApplys?: (pb.IFriendApply[]|null);
    }

    /** Represents a FriendApplyList. */
    class FriendApplyList implements IFriendApplyList {

        /**
         * Constructs a new FriendApplyList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFriendApplyList);

        /** FriendApplyList FriendApplys. */
        public FriendApplys: pb.IFriendApply[];

        /**
         * Creates a new FriendApplyList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FriendApplyList instance
         */
        public static create(properties?: pb.IFriendApplyList): pb.FriendApplyList;

        /**
         * Encodes the specified FriendApplyList message. Does not implicitly {@link pb.FriendApplyList.verify|verify} messages.
         * @param message FriendApplyList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFriendApplyList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FriendApplyList message, length delimited. Does not implicitly {@link pb.FriendApplyList.verify|verify} messages.
         * @param message FriendApplyList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFriendApplyList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FriendApplyList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FriendApplyList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FriendApplyList;

        /**
         * Decodes a FriendApplyList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FriendApplyList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FriendApplyList;

        /**
         * Verifies a FriendApplyList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ReplyFriendApplyArg. */
    interface IReplyFriendApplyArg {

        /** ReplyFriendApplyArg Uid */
        Uid?: (number|Long|null);

        /** ReplyFriendApplyArg IsAgree */
        IsAgree?: (boolean|null);
    }

    /** Represents a ReplyFriendApplyArg. */
    class ReplyFriendApplyArg implements IReplyFriendApplyArg {

        /**
         * Constructs a new ReplyFriendApplyArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IReplyFriendApplyArg);

        /** ReplyFriendApplyArg Uid. */
        public Uid: (number|Long);

        /** ReplyFriendApplyArg IsAgree. */
        public IsAgree: boolean;

        /**
         * Creates a new ReplyFriendApplyArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplyFriendApplyArg instance
         */
        public static create(properties?: pb.IReplyFriendApplyArg): pb.ReplyFriendApplyArg;

        /**
         * Encodes the specified ReplyFriendApplyArg message. Does not implicitly {@link pb.ReplyFriendApplyArg.verify|verify} messages.
         * @param message ReplyFriendApplyArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IReplyFriendApplyArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReplyFriendApplyArg message, length delimited. Does not implicitly {@link pb.ReplyFriendApplyArg.verify|verify} messages.
         * @param message ReplyFriendApplyArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IReplyFriendApplyArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReplyFriendApplyArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplyFriendApplyArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ReplyFriendApplyArg;

        /**
         * Decodes a ReplyFriendApplyArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplyFriendApplyArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ReplyFriendApplyArg;

        /**
         * Verifies a ReplyFriendApplyArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FriendApplyNotifyArg. */
    interface IFriendApplyNotifyArg {

        /** FriendApplyNotifyArg FromName */
        FromName?: (string|null);

        /** FriendApplyNotifyArg IsInvite */
        IsInvite?: (boolean|null);
    }

    /** Represents a FriendApplyNotifyArg. */
    class FriendApplyNotifyArg implements IFriendApplyNotifyArg {

        /**
         * Constructs a new FriendApplyNotifyArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFriendApplyNotifyArg);

        /** FriendApplyNotifyArg FromName. */
        public FromName: string;

        /** FriendApplyNotifyArg IsInvite. */
        public IsInvite: boolean;

        /**
         * Creates a new FriendApplyNotifyArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FriendApplyNotifyArg instance
         */
        public static create(properties?: pb.IFriendApplyNotifyArg): pb.FriendApplyNotifyArg;

        /**
         * Encodes the specified FriendApplyNotifyArg message. Does not implicitly {@link pb.FriendApplyNotifyArg.verify|verify} messages.
         * @param message FriendApplyNotifyArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFriendApplyNotifyArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FriendApplyNotifyArg message, length delimited. Does not implicitly {@link pb.FriendApplyNotifyArg.verify|verify} messages.
         * @param message FriendApplyNotifyArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFriendApplyNotifyArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FriendApplyNotifyArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FriendApplyNotifyArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FriendApplyNotifyArg;

        /**
         * Decodes a FriendApplyNotifyArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FriendApplyNotifyArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FriendApplyNotifyArg;

        /**
         * Verifies a FriendApplyNotifyArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FriendApplyResult. */
    interface IFriendApplyResult {

        /** FriendApplyResult Name */
        Name?: (string|null);

        /** FriendApplyResult IsAgree */
        IsAgree?: (boolean|null);
    }

    /** Represents a FriendApplyResult. */
    class FriendApplyResult implements IFriendApplyResult {

        /**
         * Constructs a new FriendApplyResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFriendApplyResult);

        /** FriendApplyResult Name. */
        public Name: string;

        /** FriendApplyResult IsAgree. */
        public IsAgree: boolean;

        /**
         * Creates a new FriendApplyResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FriendApplyResult instance
         */
        public static create(properties?: pb.IFriendApplyResult): pb.FriendApplyResult;

        /**
         * Encodes the specified FriendApplyResult message. Does not implicitly {@link pb.FriendApplyResult.verify|verify} messages.
         * @param message FriendApplyResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFriendApplyResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FriendApplyResult message, length delimited. Does not implicitly {@link pb.FriendApplyResult.verify|verify} messages.
         * @param message FriendApplyResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFriendApplyResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FriendApplyResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FriendApplyResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FriendApplyResult;

        /**
         * Decodes a FriendApplyResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FriendApplyResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FriendApplyResult;

        /**
         * Verifies a FriendApplyResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a PrivateChatMsg. */
    interface IPrivateChatMsg {

        /** PrivateChatMsg Time */
        Time?: (number|null);

        /** PrivateChatMsg Msg */
        Msg?: (string|null);
    }

    /** Represents a PrivateChatMsg. */
    class PrivateChatMsg implements IPrivateChatMsg {

        /**
         * Constructs a new PrivateChatMsg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPrivateChatMsg);

        /** PrivateChatMsg Time. */
        public Time: number;

        /** PrivateChatMsg Msg. */
        public Msg: string;

        /**
         * Creates a new PrivateChatMsg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PrivateChatMsg instance
         */
        public static create(properties?: pb.IPrivateChatMsg): pb.PrivateChatMsg;

        /**
         * Encodes the specified PrivateChatMsg message. Does not implicitly {@link pb.PrivateChatMsg.verify|verify} messages.
         * @param message PrivateChatMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPrivateChatMsg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PrivateChatMsg message, length delimited. Does not implicitly {@link pb.PrivateChatMsg.verify|verify} messages.
         * @param message PrivateChatMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPrivateChatMsg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PrivateChatMsg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PrivateChatMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.PrivateChatMsg;

        /**
         * Decodes a PrivateChatMsg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PrivateChatMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.PrivateChatMsg;

        /**
         * Verifies a PrivateChatMsg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a PrivateChatItem. */
    interface IPrivateChatItem {

        /** PrivateChatItem Uid */
        Uid?: (number|Long|null);

        /** PrivateChatItem Name */
        Name?: (string|null);

        /** PrivateChatItem HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** PrivateChatItem Msgs */
        Msgs?: (pb.IPrivateChatMsg[]|null);

        /** PrivateChatItem ID */
        ID?: (number|null);

        /** PrivateChatItem PvpLevel */
        PvpLevel?: (number|null);

        /** PrivateChatItem Country */
        Country?: (string|null);

        /** PrivateChatItem HeadFrame */
        HeadFrame?: (string|null);
    }

    /** Represents a PrivateChatItem. */
    class PrivateChatItem implements IPrivateChatItem {

        /**
         * Constructs a new PrivateChatItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPrivateChatItem);

        /** PrivateChatItem Uid. */
        public Uid: (number|Long);

        /** PrivateChatItem Name. */
        public Name: string;

        /** PrivateChatItem HeadImgUrl. */
        public HeadImgUrl: string;

        /** PrivateChatItem Msgs. */
        public Msgs: pb.IPrivateChatMsg[];

        /** PrivateChatItem ID. */
        public ID: number;

        /** PrivateChatItem PvpLevel. */
        public PvpLevel: number;

        /** PrivateChatItem Country. */
        public Country: string;

        /** PrivateChatItem HeadFrame. */
        public HeadFrame: string;

        /**
         * Creates a new PrivateChatItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PrivateChatItem instance
         */
        public static create(properties?: pb.IPrivateChatItem): pb.PrivateChatItem;

        /**
         * Encodes the specified PrivateChatItem message. Does not implicitly {@link pb.PrivateChatItem.verify|verify} messages.
         * @param message PrivateChatItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPrivateChatItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PrivateChatItem message, length delimited. Does not implicitly {@link pb.PrivateChatItem.verify|verify} messages.
         * @param message PrivateChatItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPrivateChatItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PrivateChatItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PrivateChatItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.PrivateChatItem;

        /**
         * Decodes a PrivateChatItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PrivateChatItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.PrivateChatItem;

        /**
         * Verifies a PrivateChatItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a PrivateChatList. */
    interface IPrivateChatList {

        /** PrivateChatList PrivateChatItems */
        PrivateChatItems?: (pb.IPrivateChatItem[]|null);
    }

    /** Represents a PrivateChatList. */
    class PrivateChatList implements IPrivateChatList {

        /**
         * Constructs a new PrivateChatList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPrivateChatList);

        /** PrivateChatList PrivateChatItems. */
        public PrivateChatItems: pb.IPrivateChatItem[];

        /**
         * Creates a new PrivateChatList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PrivateChatList instance
         */
        public static create(properties?: pb.IPrivateChatList): pb.PrivateChatList;

        /**
         * Encodes the specified PrivateChatList message. Does not implicitly {@link pb.PrivateChatList.verify|verify} messages.
         * @param message PrivateChatList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPrivateChatList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PrivateChatList message, length delimited. Does not implicitly {@link pb.PrivateChatList.verify|verify} messages.
         * @param message PrivateChatList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPrivateChatList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PrivateChatList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PrivateChatList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.PrivateChatList;

        /**
         * Decodes a PrivateChatList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PrivateChatList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.PrivateChatList;

        /**
         * Verifies a PrivateChatList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchPrivateChatArg. */
    interface IFetchPrivateChatArg {

        /** FetchPrivateChatArg MaxID */
        MaxID?: (number|null);
    }

    /** Represents a FetchPrivateChatArg. */
    class FetchPrivateChatArg implements IFetchPrivateChatArg {

        /**
         * Constructs a new FetchPrivateChatArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchPrivateChatArg);

        /** FetchPrivateChatArg MaxID. */
        public MaxID: number;

        /**
         * Creates a new FetchPrivateChatArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchPrivateChatArg instance
         */
        public static create(properties?: pb.IFetchPrivateChatArg): pb.FetchPrivateChatArg;

        /**
         * Encodes the specified FetchPrivateChatArg message. Does not implicitly {@link pb.FetchPrivateChatArg.verify|verify} messages.
         * @param message FetchPrivateChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchPrivateChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchPrivateChatArg message, length delimited. Does not implicitly {@link pb.FetchPrivateChatArg.verify|verify} messages.
         * @param message FetchPrivateChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchPrivateChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchPrivateChatArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchPrivateChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchPrivateChatArg;

        /**
         * Decodes a FetchPrivateChatArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchPrivateChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchPrivateChatArg;

        /**
         * Verifies a FetchPrivateChatArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SendPrivateChatArg. */
    interface ISendPrivateChatArg {

        /** SendPrivateChatArg ToUid */
        ToUid?: (number|Long|null);

        /** SendPrivateChatArg Msg */
        Msg?: (string|null);
    }

    /** Represents a SendPrivateChatArg. */
    class SendPrivateChatArg implements ISendPrivateChatArg {

        /**
         * Constructs a new SendPrivateChatArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISendPrivateChatArg);

        /** SendPrivateChatArg ToUid. */
        public ToUid: (number|Long);

        /** SendPrivateChatArg Msg. */
        public Msg: string;

        /**
         * Creates a new SendPrivateChatArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendPrivateChatArg instance
         */
        public static create(properties?: pb.ISendPrivateChatArg): pb.SendPrivateChatArg;

        /**
         * Encodes the specified SendPrivateChatArg message. Does not implicitly {@link pb.SendPrivateChatArg.verify|verify} messages.
         * @param message SendPrivateChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISendPrivateChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SendPrivateChatArg message, length delimited. Does not implicitly {@link pb.SendPrivateChatArg.verify|verify} messages.
         * @param message SendPrivateChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISendPrivateChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SendPrivateChatArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendPrivateChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SendPrivateChatArg;

        /**
         * Decodes a SendPrivateChatArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendPrivateChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SendPrivateChatArg;

        /**
         * Verifies a SendPrivateChatArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** ChatChannel enum. */
    enum ChatChannel {
        World = 0,
        CampaignCountry = 1
    }

    /** Properties of a TargetChatChannel. */
    interface ITargetChatChannel {

        /** TargetChatChannel Channel */
        Channel?: (pb.ChatChannel|null);
    }

    /** Represents a TargetChatChannel. */
    class TargetChatChannel implements ITargetChatChannel {

        /**
         * Constructs a new TargetChatChannel.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITargetChatChannel);

        /** TargetChatChannel Channel. */
        public Channel: pb.ChatChannel;

        /**
         * Creates a new TargetChatChannel instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TargetChatChannel instance
         */
        public static create(properties?: pb.ITargetChatChannel): pb.TargetChatChannel;

        /**
         * Encodes the specified TargetChatChannel message. Does not implicitly {@link pb.TargetChatChannel.verify|verify} messages.
         * @param message TargetChatChannel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITargetChatChannel, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TargetChatChannel message, length delimited. Does not implicitly {@link pb.TargetChatChannel.verify|verify} messages.
         * @param message TargetChatChannel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITargetChatChannel, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TargetChatChannel message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TargetChatChannel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TargetChatChannel;

        /**
         * Decodes a TargetChatChannel message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TargetChatChannel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TargetChatChannel;

        /**
         * Verifies a TargetChatChannel message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ChatItem. */
    interface IChatItem {

        /** ChatItem Uid */
        Uid?: (number|Long|null);

        /** ChatItem Name */
        Name?: (string|null);

        /** ChatItem HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** ChatItem Time */
        Time?: (number|null);

        /** ChatItem Msg */
        Msg?: (string|null);

        /** ChatItem PvpLevel */
        PvpLevel?: (number|null);

        /** ChatItem Country */
        Country?: (string|null);

        /** ChatItem HeadFrame */
        HeadFrame?: (string|null);

        /** ChatItem CityID */
        CityID?: (number|null);

        /** ChatItem CityJob */
        CityJob?: (pb.CampaignJob|null);

        /** ChatItem CountryJob */
        CountryJob?: (pb.CampaignJob|null);
    }

    /** Represents a ChatItem. */
    class ChatItem implements IChatItem {

        /**
         * Constructs a new ChatItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IChatItem);

        /** ChatItem Uid. */
        public Uid: (number|Long);

        /** ChatItem Name. */
        public Name: string;

        /** ChatItem HeadImgUrl. */
        public HeadImgUrl: string;

        /** ChatItem Time. */
        public Time: number;

        /** ChatItem Msg. */
        public Msg: string;

        /** ChatItem PvpLevel. */
        public PvpLevel: number;

        /** ChatItem Country. */
        public Country: string;

        /** ChatItem HeadFrame. */
        public HeadFrame: string;

        /** ChatItem CityID. */
        public CityID: number;

        /** ChatItem CityJob. */
        public CityJob: pb.CampaignJob;

        /** ChatItem CountryJob. */
        public CountryJob: pb.CampaignJob;

        /**
         * Creates a new ChatItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatItem instance
         */
        public static create(properties?: pb.IChatItem): pb.ChatItem;

        /**
         * Encodes the specified ChatItem message. Does not implicitly {@link pb.ChatItem.verify|verify} messages.
         * @param message ChatItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IChatItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatItem message, length delimited. Does not implicitly {@link pb.ChatItem.verify|verify} messages.
         * @param message ChatItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IChatItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ChatItem;

        /**
         * Decodes a ChatItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ChatItem;

        /**
         * Verifies a ChatItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a Chatlet. */
    interface IChatlet {

        /** Chatlet Type */
        Type?: (pb.Chatlet.TypeEnum|null);

        /** Chatlet Data */
        Data?: (Uint8Array|null);
    }

    /** Represents a Chatlet. */
    class Chatlet implements IChatlet {

        /**
         * Constructs a new Chatlet.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IChatlet);

        /** Chatlet Type. */
        public Type: pb.Chatlet.TypeEnum;

        /** Chatlet Data. */
        public Data: Uint8Array;

        /**
         * Creates a new Chatlet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Chatlet instance
         */
        public static create(properties?: pb.IChatlet): pb.Chatlet;

        /**
         * Encodes the specified Chatlet message. Does not implicitly {@link pb.Chatlet.verify|verify} messages.
         * @param message Chatlet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IChatlet, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Chatlet message, length delimited. Does not implicitly {@link pb.Chatlet.verify|verify} messages.
         * @param message Chatlet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IChatlet, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Chatlet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Chatlet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Chatlet;

        /**
         * Decodes a Chatlet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Chatlet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Chatlet;

        /**
         * Verifies a Chatlet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace Chatlet {

        /** TypeEnum enum. */
        enum TypeEnum {
            Normal = 0,
            CampaignNotice = 1
        }
    }

    /** Properties of a ChatList. */
    interface IChatList {

        /** ChatList Chatlets */
        Chatlets?: (pb.IChatlet[]|null);
    }

    /** Represents a ChatList. */
    class ChatList implements IChatList {

        /**
         * Constructs a new ChatList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IChatList);

        /** ChatList Chatlets. */
        public Chatlets: pb.IChatlet[];

        /**
         * Creates a new ChatList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatList instance
         */
        public static create(properties?: pb.IChatList): pb.ChatList;

        /**
         * Encodes the specified ChatList message. Does not implicitly {@link pb.ChatList.verify|verify} messages.
         * @param message ChatList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IChatList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatList message, length delimited. Does not implicitly {@link pb.ChatList.verify|verify} messages.
         * @param message ChatList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IChatList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ChatList;

        /**
         * Decodes a ChatList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ChatList;

        /**
         * Verifies a ChatList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ChatItemList. */
    interface IChatItemList {

        /** ChatItemList ChatItems */
        ChatItems?: (pb.IChatItem[]|null);
    }

    /** Represents a ChatItemList. */
    class ChatItemList implements IChatItemList {

        /**
         * Constructs a new ChatItemList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IChatItemList);

        /** ChatItemList ChatItems. */
        public ChatItems: pb.IChatItem[];

        /**
         * Creates a new ChatItemList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatItemList instance
         */
        public static create(properties?: pb.IChatItemList): pb.ChatItemList;

        /**
         * Encodes the specified ChatItemList message. Does not implicitly {@link pb.ChatItemList.verify|verify} messages.
         * @param message ChatItemList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IChatItemList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatItemList message, length delimited. Does not implicitly {@link pb.ChatItemList.verify|verify} messages.
         * @param message ChatItemList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IChatItemList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatItemList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatItemList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ChatItemList;

        /**
         * Decodes a ChatItemList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatItemList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ChatItemList;

        /**
         * Verifies a ChatItemList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ChatNotify. */
    interface IChatNotify {

        /** ChatNotify Channel */
        Channel?: (pb.ChatChannel|null);

        /** ChatNotify Chat */
        Chat?: (pb.IChatlet|null);
    }

    /** Represents a ChatNotify. */
    class ChatNotify implements IChatNotify {

        /**
         * Constructs a new ChatNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IChatNotify);

        /** ChatNotify Channel. */
        public Channel: pb.ChatChannel;

        /** ChatNotify Chat. */
        public Chat?: (pb.IChatlet|null);

        /**
         * Creates a new ChatNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatNotify instance
         */
        public static create(properties?: pb.IChatNotify): pb.ChatNotify;

        /**
         * Encodes the specified ChatNotify message. Does not implicitly {@link pb.ChatNotify.verify|verify} messages.
         * @param message ChatNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IChatNotify, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatNotify message, length delimited. Does not implicitly {@link pb.ChatNotify.verify|verify} messages.
         * @param message ChatNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IChatNotify, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ChatNotify;

        /**
         * Decodes a ChatNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ChatNotify;

        /**
         * Verifies a ChatNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SendChatArg. */
    interface ISendChatArg {

        /** SendChatArg Channel */
        Channel?: (pb.ChatChannel|null);

        /** SendChatArg Msg */
        Msg?: (string|null);
    }

    /** Represents a SendChatArg. */
    class SendChatArg implements ISendChatArg {

        /**
         * Constructs a new SendChatArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISendChatArg);

        /** SendChatArg Channel. */
        public Channel: pb.ChatChannel;

        /** SendChatArg Msg. */
        public Msg: string;

        /**
         * Creates a new SendChatArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendChatArg instance
         */
        public static create(properties?: pb.ISendChatArg): pb.SendChatArg;

        /**
         * Encodes the specified SendChatArg message. Does not implicitly {@link pb.SendChatArg.verify|verify} messages.
         * @param message SendChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISendChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SendChatArg message, length delimited. Does not implicitly {@link pb.SendChatArg.verify|verify} messages.
         * @param message SendChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISendChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SendChatArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SendChatArg;

        /**
         * Decodes a SendChatArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SendChatArg;

        /**
         * Verifies a SendChatArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BeInviteBattleArg. */
    interface IBeInviteBattleArg {

        /** BeInviteBattleArg Uid */
        Uid?: (number|Long|null);

        /** BeInviteBattleArg Name */
        Name?: (string|null);
    }

    /** Represents a BeInviteBattleArg. */
    class BeInviteBattleArg implements IBeInviteBattleArg {

        /**
         * Constructs a new BeInviteBattleArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBeInviteBattleArg);

        /** BeInviteBattleArg Uid. */
        public Uid: (number|Long);

        /** BeInviteBattleArg Name. */
        public Name: string;

        /**
         * Creates a new BeInviteBattleArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeInviteBattleArg instance
         */
        public static create(properties?: pb.IBeInviteBattleArg): pb.BeInviteBattleArg;

        /**
         * Encodes the specified BeInviteBattleArg message. Does not implicitly {@link pb.BeInviteBattleArg.verify|verify} messages.
         * @param message BeInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBeInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BeInviteBattleArg message, length delimited. Does not implicitly {@link pb.BeInviteBattleArg.verify|verify} messages.
         * @param message BeInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBeInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeInviteBattleArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BeInviteBattleArg;

        /**
         * Decodes a BeInviteBattleArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BeInviteBattleArg;

        /**
         * Verifies a BeInviteBattleArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ReplyInviteBattleArg. */
    interface IReplyInviteBattleArg {

        /** ReplyInviteBattleArg Uid */
        Uid?: (number|Long|null);

        /** ReplyInviteBattleArg IsAgree */
        IsAgree?: (boolean|null);
    }

    /** Represents a ReplyInviteBattleArg. */
    class ReplyInviteBattleArg implements IReplyInviteBattleArg {

        /**
         * Constructs a new ReplyInviteBattleArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IReplyInviteBattleArg);

        /** ReplyInviteBattleArg Uid. */
        public Uid: (number|Long);

        /** ReplyInviteBattleArg IsAgree. */
        public IsAgree: boolean;

        /**
         * Creates a new ReplyInviteBattleArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplyInviteBattleArg instance
         */
        public static create(properties?: pb.IReplyInviteBattleArg): pb.ReplyInviteBattleArg;

        /**
         * Encodes the specified ReplyInviteBattleArg message. Does not implicitly {@link pb.ReplyInviteBattleArg.verify|verify} messages.
         * @param message ReplyInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IReplyInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReplyInviteBattleArg message, length delimited. Does not implicitly {@link pb.ReplyInviteBattleArg.verify|verify} messages.
         * @param message ReplyInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IReplyInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReplyInviteBattleArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplyInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ReplyInviteBattleArg;

        /**
         * Decodes a ReplyInviteBattleArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplyInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ReplyInviteBattleArg;

        /**
         * Verifies a ReplyInviteBattleArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an InviteBattleResult. */
    interface IInviteBattleResult {

        /** InviteBattleResult Result */
        Result?: (pb.InviteBattleResult.InviteResult|null);
    }

    /** Represents an InviteBattleResult. */
    class InviteBattleResult implements IInviteBattleResult {

        /**
         * Constructs a new InviteBattleResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IInviteBattleResult);

        /** InviteBattleResult Result. */
        public Result: pb.InviteBattleResult.InviteResult;

        /**
         * Creates a new InviteBattleResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InviteBattleResult instance
         */
        public static create(properties?: pb.IInviteBattleResult): pb.InviteBattleResult;

        /**
         * Encodes the specified InviteBattleResult message. Does not implicitly {@link pb.InviteBattleResult.verify|verify} messages.
         * @param message InviteBattleResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IInviteBattleResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified InviteBattleResult message, length delimited. Does not implicitly {@link pb.InviteBattleResult.verify|verify} messages.
         * @param message InviteBattleResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IInviteBattleResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an InviteBattleResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InviteBattleResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.InviteBattleResult;

        /**
         * Decodes an InviteBattleResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InviteBattleResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.InviteBattleResult;

        /**
         * Verifies an InviteBattleResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace InviteBattleResult {

        /** InviteResult enum. */
        enum InviteResult {
            Agree = 0,
            Refuse = 1,
            Timeout = 2
        }
    }

    /** Properties of a CSendChatArg. */
    interface ICSendChatArg {

        /** CSendChatArg Channel */
        Channel?: (pb.ChatChannel|null);

        /** CSendChatArg Msg */
        Msg?: (string|null);

        /** CSendChatArg Name */
        Name?: (string|null);

        /** CSendChatArg HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** CSendChatArg PvpLevel */
        PvpLevel?: (number|null);

        /** CSendChatArg Country */
        Country?: (string|null);

        /** CSendChatArg HeadFrame */
        HeadFrame?: (string|null);

        /** CSendChatArg CountryID */
        CountryID?: (number|null);

        /** CSendChatArg CityID */
        CityID?: (number|null);

        /** CSendChatArg CityJob */
        CityJob?: (pb.CampaignJob|null);

        /** CSendChatArg CountryJob */
        CountryJob?: (pb.CampaignJob|null);
    }

    /** Represents a CSendChatArg. */
    class CSendChatArg implements ICSendChatArg {

        /**
         * Constructs a new CSendChatArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICSendChatArg);

        /** CSendChatArg Channel. */
        public Channel: pb.ChatChannel;

        /** CSendChatArg Msg. */
        public Msg: string;

        /** CSendChatArg Name. */
        public Name: string;

        /** CSendChatArg HeadImgUrl. */
        public HeadImgUrl: string;

        /** CSendChatArg PvpLevel. */
        public PvpLevel: number;

        /** CSendChatArg Country. */
        public Country: string;

        /** CSendChatArg HeadFrame. */
        public HeadFrame: string;

        /** CSendChatArg CountryID. */
        public CountryID: number;

        /** CSendChatArg CityID. */
        public CityID: number;

        /** CSendChatArg CityJob. */
        public CityJob: pb.CampaignJob;

        /** CSendChatArg CountryJob. */
        public CountryJob: pb.CampaignJob;

        /**
         * Creates a new CSendChatArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CSendChatArg instance
         */
        public static create(properties?: pb.ICSendChatArg): pb.CSendChatArg;

        /**
         * Encodes the specified CSendChatArg message. Does not implicitly {@link pb.CSendChatArg.verify|verify} messages.
         * @param message CSendChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICSendChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CSendChatArg message, length delimited. Does not implicitly {@link pb.CSendChatArg.verify|verify} messages.
         * @param message CSendChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICSendChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CSendChatArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CSendChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CSendChatArg;

        /**
         * Decodes a CSendChatArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CSendChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CSendChatArg;

        /**
         * Verifies a CSendChatArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a G2GReplyInviteBattleArg. */
    interface IG2GReplyInviteBattleArg {

        /** G2GReplyInviteBattleArg BeInviter */
        BeInviter?: (pb.IFighterData|null);

        /** G2GReplyInviteBattleArg IsAgree */
        IsAgree?: (boolean|null);

        /** G2GReplyInviteBattleArg TargetUid */
        TargetUid?: (number|Long|null);
    }

    /** Represents a G2GReplyInviteBattleArg. */
    class G2GReplyInviteBattleArg implements IG2GReplyInviteBattleArg {

        /**
         * Constructs a new G2GReplyInviteBattleArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IG2GReplyInviteBattleArg);

        /** G2GReplyInviteBattleArg BeInviter. */
        public BeInviter?: (pb.IFighterData|null);

        /** G2GReplyInviteBattleArg IsAgree. */
        public IsAgree: boolean;

        /** G2GReplyInviteBattleArg TargetUid. */
        public TargetUid: (number|Long);

        /**
         * Creates a new G2GReplyInviteBattleArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns G2GReplyInviteBattleArg instance
         */
        public static create(properties?: pb.IG2GReplyInviteBattleArg): pb.G2GReplyInviteBattleArg;

        /**
         * Encodes the specified G2GReplyInviteBattleArg message. Does not implicitly {@link pb.G2GReplyInviteBattleArg.verify|verify} messages.
         * @param message G2GReplyInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IG2GReplyInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified G2GReplyInviteBattleArg message, length delimited. Does not implicitly {@link pb.G2GReplyInviteBattleArg.verify|verify} messages.
         * @param message G2GReplyInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IG2GReplyInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a G2GReplyInviteBattleArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns G2GReplyInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.G2GReplyInviteBattleArg;

        /**
         * Decodes a G2GReplyInviteBattleArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns G2GReplyInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.G2GReplyInviteBattleArg;

        /**
         * Verifies a G2GReplyInviteBattleArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WxInviteFriend. */
    interface IWxInviteFriend {

        /** WxInviteFriend HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** WxInviteFriend PvpLevel */
        PvpLevel?: (number|null);
    }

    /** Represents a WxInviteFriend. */
    class WxInviteFriend implements IWxInviteFriend {

        /**
         * Constructs a new WxInviteFriend.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWxInviteFriend);

        /** WxInviteFriend HeadImgUrl. */
        public HeadImgUrl: string;

        /** WxInviteFriend PvpLevel. */
        public PvpLevel: number;

        /**
         * Creates a new WxInviteFriend instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WxInviteFriend instance
         */
        public static create(properties?: pb.IWxInviteFriend): pb.WxInviteFriend;

        /**
         * Encodes the specified WxInviteFriend message. Does not implicitly {@link pb.WxInviteFriend.verify|verify} messages.
         * @param message WxInviteFriend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWxInviteFriend, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WxInviteFriend message, length delimited. Does not implicitly {@link pb.WxInviteFriend.verify|verify} messages.
         * @param message WxInviteFriend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWxInviteFriend, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WxInviteFriend message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WxInviteFriend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WxInviteFriend;

        /**
         * Decodes a WxInviteFriend message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WxInviteFriend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WxInviteFriend;

        /**
         * Verifies a WxInviteFriend message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WxInviteReward. */
    interface IWxInviteReward {

        /** WxInviteReward ID */
        ID?: (number|null);

        /** WxInviteReward CurCnt */
        CurCnt?: (number|null);

        /** WxInviteReward RewardCnt */
        RewardCnt?: (number|null);
    }

    /** Represents a WxInviteReward. */
    class WxInviteReward implements IWxInviteReward {

        /**
         * Constructs a new WxInviteReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWxInviteReward);

        /** WxInviteReward ID. */
        public ID: number;

        /** WxInviteReward CurCnt. */
        public CurCnt: number;

        /** WxInviteReward RewardCnt. */
        public RewardCnt: number;

        /**
         * Creates a new WxInviteReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WxInviteReward instance
         */
        public static create(properties?: pb.IWxInviteReward): pb.WxInviteReward;

        /**
         * Encodes the specified WxInviteReward message. Does not implicitly {@link pb.WxInviteReward.verify|verify} messages.
         * @param message WxInviteReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWxInviteReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WxInviteReward message, length delimited. Does not implicitly {@link pb.WxInviteReward.verify|verify} messages.
         * @param message WxInviteReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWxInviteReward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WxInviteReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WxInviteReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WxInviteReward;

        /**
         * Decodes a WxInviteReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WxInviteReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WxInviteReward;

        /**
         * Verifies a WxInviteReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WxInviteFriendsReply. */
    interface IWxInviteFriendsReply {

        /** WxInviteFriendsReply Friends */
        Friends?: (pb.IWxInviteFriend[]|null);

        /** WxInviteFriendsReply Rewards */
        Rewards?: (pb.IWxInviteReward[]|null);
    }

    /** Represents a WxInviteFriendsReply. */
    class WxInviteFriendsReply implements IWxInviteFriendsReply {

        /**
         * Constructs a new WxInviteFriendsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWxInviteFriendsReply);

        /** WxInviteFriendsReply Friends. */
        public Friends: pb.IWxInviteFriend[];

        /** WxInviteFriendsReply Rewards. */
        public Rewards: pb.IWxInviteReward[];

        /**
         * Creates a new WxInviteFriendsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WxInviteFriendsReply instance
         */
        public static create(properties?: pb.IWxInviteFriendsReply): pb.WxInviteFriendsReply;

        /**
         * Encodes the specified WxInviteFriendsReply message. Does not implicitly {@link pb.WxInviteFriendsReply.verify|verify} messages.
         * @param message WxInviteFriendsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWxInviteFriendsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WxInviteFriendsReply message, length delimited. Does not implicitly {@link pb.WxInviteFriendsReply.verify|verify} messages.
         * @param message WxInviteFriendsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWxInviteFriendsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WxInviteFriendsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WxInviteFriendsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WxInviteFriendsReply;

        /**
         * Decodes a WxInviteFriendsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WxInviteFriendsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WxInviteFriendsReply;

        /**
         * Verifies a WxInviteFriendsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetWxInviteRewardArg. */
    interface IGetWxInviteRewardArg {

        /** GetWxInviteRewardArg ID */
        ID?: (number|null);
    }

    /** Represents a GetWxInviteRewardArg. */
    class GetWxInviteRewardArg implements IGetWxInviteRewardArg {

        /**
         * Constructs a new GetWxInviteRewardArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetWxInviteRewardArg);

        /** GetWxInviteRewardArg ID. */
        public ID: number;

        /**
         * Creates a new GetWxInviteRewardArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetWxInviteRewardArg instance
         */
        public static create(properties?: pb.IGetWxInviteRewardArg): pb.GetWxInviteRewardArg;

        /**
         * Encodes the specified GetWxInviteRewardArg message. Does not implicitly {@link pb.GetWxInviteRewardArg.verify|verify} messages.
         * @param message GetWxInviteRewardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetWxInviteRewardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetWxInviteRewardArg message, length delimited. Does not implicitly {@link pb.GetWxInviteRewardArg.verify|verify} messages.
         * @param message GetWxInviteRewardArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetWxInviteRewardArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetWxInviteRewardArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetWxInviteRewardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetWxInviteRewardArg;

        /**
         * Decodes a GetWxInviteRewardArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetWxInviteRewardArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetWxInviteRewardArg;

        /**
         * Verifies a GetWxInviteRewardArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetWxInviteRewardReply. */
    interface IGetWxInviteRewardReply {

        /** GetWxInviteRewardReply Gold */
        Gold?: (number|null);

        /** GetWxInviteRewardReply Jade */
        Jade?: (number|null);

        /** GetWxInviteRewardReply Cards */
        Cards?: (number[]|null);
    }

    /** Represents a GetWxInviteRewardReply. */
    class GetWxInviteRewardReply implements IGetWxInviteRewardReply {

        /**
         * Constructs a new GetWxInviteRewardReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetWxInviteRewardReply);

        /** GetWxInviteRewardReply Gold. */
        public Gold: number;

        /** GetWxInviteRewardReply Jade. */
        public Jade: number;

        /** GetWxInviteRewardReply Cards. */
        public Cards: number[];

        /**
         * Creates a new GetWxInviteRewardReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetWxInviteRewardReply instance
         */
        public static create(properties?: pb.IGetWxInviteRewardReply): pb.GetWxInviteRewardReply;

        /**
         * Encodes the specified GetWxInviteRewardReply message. Does not implicitly {@link pb.GetWxInviteRewardReply.verify|verify} messages.
         * @param message GetWxInviteRewardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetWxInviteRewardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetWxInviteRewardReply message, length delimited. Does not implicitly {@link pb.GetWxInviteRewardReply.verify|verify} messages.
         * @param message GetWxInviteRewardReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetWxInviteRewardReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetWxInviteRewardReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetWxInviteRewardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetWxInviteRewardReply;

        /**
         * Decodes a GetWxInviteRewardReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetWxInviteRewardReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetWxInviteRewardReply;

        /**
         * Verifies a GetWxInviteRewardReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SubscribeChatArg. */
    interface ISubscribeChatArg {

        /** SubscribeChatArg Channel */
        Channel?: (pb.ChatChannel|null);

        /** SubscribeChatArg CountryID */
        CountryID?: (number|null);
    }

    /** Represents a SubscribeChatArg. */
    class SubscribeChatArg implements ISubscribeChatArg {

        /**
         * Constructs a new SubscribeChatArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISubscribeChatArg);

        /** SubscribeChatArg Channel. */
        public Channel: pb.ChatChannel;

        /** SubscribeChatArg CountryID. */
        public CountryID: number;

        /**
         * Creates a new SubscribeChatArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SubscribeChatArg instance
         */
        public static create(properties?: pb.ISubscribeChatArg): pb.SubscribeChatArg;

        /**
         * Encodes the specified SubscribeChatArg message. Does not implicitly {@link pb.SubscribeChatArg.verify|verify} messages.
         * @param message SubscribeChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISubscribeChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SubscribeChatArg message, length delimited. Does not implicitly {@link pb.SubscribeChatArg.verify|verify} messages.
         * @param message SubscribeChatArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISubscribeChatArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SubscribeChatArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SubscribeChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SubscribeChatArg;

        /**
         * Decodes a SubscribeChatArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SubscribeChatArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SubscribeChatArg;

        /**
         * Verifies a SubscribeChatArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SurveyInfo. */
    interface ISurveyInfo {

        /** SurveyInfo IsComplete */
        IsComplete?: (boolean|null);

        /** SurveyInfo IsReward */
        IsReward?: (boolean|null);
    }

    /** Represents a SurveyInfo. */
    class SurveyInfo implements ISurveyInfo {

        /**
         * Constructs a new SurveyInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISurveyInfo);

        /** SurveyInfo IsComplete. */
        public IsComplete: boolean;

        /** SurveyInfo IsReward. */
        public IsReward: boolean;

        /**
         * Creates a new SurveyInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SurveyInfo instance
         */
        public static create(properties?: pb.ISurveyInfo): pb.SurveyInfo;

        /**
         * Encodes the specified SurveyInfo message. Does not implicitly {@link pb.SurveyInfo.verify|verify} messages.
         * @param message SurveyInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISurveyInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SurveyInfo message, length delimited. Does not implicitly {@link pb.SurveyInfo.verify|verify} messages.
         * @param message SurveyInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISurveyInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SurveyInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SurveyInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SurveyInfo;

        /**
         * Decodes a SurveyInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SurveyInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SurveyInfo;

        /**
         * Verifies a SurveyInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an Answer. */
    interface IAnswer {

        /** Answer QuestionID */
        QuestionID?: (number|null);

        /** Answer AnswerIDs */
        AnswerIDs?: (number[]|null);
    }

    /** Represents an Answer. */
    class Answer implements IAnswer {

        /**
         * Constructs a new Answer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAnswer);

        /** Answer QuestionID. */
        public QuestionID: number;

        /** Answer AnswerIDs. */
        public AnswerIDs: number[];

        /**
         * Creates a new Answer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Answer instance
         */
        public static create(properties?: pb.IAnswer): pb.Answer;

        /**
         * Encodes the specified Answer message. Does not implicitly {@link pb.Answer.verify|verify} messages.
         * @param message Answer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAnswer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified Answer message, length delimited. Does not implicitly {@link pb.Answer.verify|verify} messages.
         * @param message Answer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAnswer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an Answer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Answer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.Answer;

        /**
         * Decodes an Answer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Answer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.Answer;

        /**
         * Verifies an Answer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SurveyAnswer. */
    interface ISurveyAnswer {

        /** SurveyAnswer Answers */
        Answers?: (pb.IAnswer[]|null);
    }

    /** Represents a SurveyAnswer. */
    class SurveyAnswer implements ISurveyAnswer {

        /**
         * Constructs a new SurveyAnswer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISurveyAnswer);

        /** SurveyAnswer Answers. */
        public Answers: pb.IAnswer[];

        /**
         * Creates a new SurveyAnswer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SurveyAnswer instance
         */
        public static create(properties?: pb.ISurveyAnswer): pb.SurveyAnswer;

        /**
         * Encodes the specified SurveyAnswer message. Does not implicitly {@link pb.SurveyAnswer.verify|verify} messages.
         * @param message SurveyAnswer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISurveyAnswer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SurveyAnswer message, length delimited. Does not implicitly {@link pb.SurveyAnswer.verify|verify} messages.
         * @param message SurveyAnswer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISurveyAnswer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SurveyAnswer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SurveyAnswer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SurveyAnswer;

        /**
         * Decodes a SurveyAnswer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SurveyAnswer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SurveyAnswer;

        /**
         * Verifies a SurveyAnswer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetCampIDArg. */
    interface IGetCampIDArg {
    }

    /** Represents a GetCampIDArg. */
    class GetCampIDArg implements IGetCampIDArg {

        /**
         * Constructs a new GetCampIDArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetCampIDArg);

        /**
         * Creates a new GetCampIDArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCampIDArg instance
         */
        public static create(properties?: pb.IGetCampIDArg): pb.GetCampIDArg;

        /**
         * Encodes the specified GetCampIDArg message. Does not implicitly {@link pb.GetCampIDArg.verify|verify} messages.
         * @param message GetCampIDArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetCampIDArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetCampIDArg message, length delimited. Does not implicitly {@link pb.GetCampIDArg.verify|verify} messages.
         * @param message GetCampIDArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetCampIDArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetCampIDArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCampIDArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetCampIDArg;

        /**
         * Decodes a GetCampIDArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCampIDArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetCampIDArg;

        /**
         * Verifies a GetCampIDArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GetCampIDReply. */
    interface IGetCampIDReply {

        /** GetCampIDReply CampID */
        CampID?: (number|null);
    }

    /** Represents a GetCampIDReply. */
    class GetCampIDReply implements IGetCampIDReply {

        /**
         * Constructs a new GetCampIDReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetCampIDReply);

        /** GetCampIDReply CampID. */
        public CampID: number;

        /**
         * Creates a new GetCampIDReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCampIDReply instance
         */
        public static create(properties?: pb.IGetCampIDReply): pb.GetCampIDReply;

        /**
         * Encodes the specified GetCampIDReply message. Does not implicitly {@link pb.GetCampIDReply.verify|verify} messages.
         * @param message GetCampIDReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetCampIDReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetCampIDReply message, length delimited. Does not implicitly {@link pb.GetCampIDReply.verify|verify} messages.
         * @param message GetCampIDReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetCampIDReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetCampIDReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCampIDReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetCampIDReply;

        /**
         * Decodes a GetCampIDReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCampIDReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetCampIDReply;

        /**
         * Verifies a GetCampIDReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SetCampIDArg. */
    interface ISetCampIDArg {

        /** SetCampIDArg CampID */
        CampID?: (number|null);
    }

    /** Represents a SetCampIDArg. */
    class SetCampIDArg implements ISetCampIDArg {

        /**
         * Constructs a new SetCampIDArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISetCampIDArg);

        /** SetCampIDArg CampID. */
        public CampID: number;

        /**
         * Creates a new SetCampIDArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetCampIDArg instance
         */
        public static create(properties?: pb.ISetCampIDArg): pb.SetCampIDArg;

        /**
         * Encodes the specified SetCampIDArg message. Does not implicitly {@link pb.SetCampIDArg.verify|verify} messages.
         * @param message SetCampIDArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISetCampIDArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SetCampIDArg message, length delimited. Does not implicitly {@link pb.SetCampIDArg.verify|verify} messages.
         * @param message SetCampIDArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISetCampIDArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SetCampIDArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetCampIDArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SetCampIDArg;

        /**
         * Decodes a SetCampIDArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetCampIDArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SetCampIDArg;

        /**
         * Verifies a SetCampIDArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SetCampIDReply. */
    interface ISetCampIDReply {

        /** SetCampIDReply ok */
        ok?: (boolean|null);
    }

    /** Represents a SetCampIDReply. */
    class SetCampIDReply implements ISetCampIDReply {

        /**
         * Constructs a new SetCampIDReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISetCampIDReply);

        /** SetCampIDReply ok. */
        public ok: boolean;

        /**
         * Creates a new SetCampIDReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetCampIDReply instance
         */
        public static create(properties?: pb.ISetCampIDReply): pb.SetCampIDReply;

        /**
         * Encodes the specified SetCampIDReply message. Does not implicitly {@link pb.SetCampIDReply.verify|verify} messages.
         * @param message SetCampIDReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISetCampIDReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SetCampIDReply message, length delimited. Does not implicitly {@link pb.SetCampIDReply.verify|verify} messages.
         * @param message SetCampIDReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISetCampIDReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SetCampIDReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetCampIDReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SetCampIDReply;

        /**
         * Decodes a SetCampIDReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetCampIDReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SetCampIDReply;

        /**
         * Verifies a SetCampIDReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a StartTutorialBattleArg. */
    interface IStartTutorialBattleArg {

        /** StartTutorialBattleArg CampID */
        CampID?: (number|null);
    }

    /** Represents a StartTutorialBattleArg. */
    class StartTutorialBattleArg implements IStartTutorialBattleArg {

        /**
         * Constructs a new StartTutorialBattleArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IStartTutorialBattleArg);

        /** StartTutorialBattleArg CampID. */
        public CampID: number;

        /**
         * Creates a new StartTutorialBattleArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartTutorialBattleArg instance
         */
        public static create(properties?: pb.IStartTutorialBattleArg): pb.StartTutorialBattleArg;

        /**
         * Encodes the specified StartTutorialBattleArg message. Does not implicitly {@link pb.StartTutorialBattleArg.verify|verify} messages.
         * @param message StartTutorialBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IStartTutorialBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified StartTutorialBattleArg message, length delimited. Does not implicitly {@link pb.StartTutorialBattleArg.verify|verify} messages.
         * @param message StartTutorialBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IStartTutorialBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a StartTutorialBattleArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartTutorialBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.StartTutorialBattleArg;

        /**
         * Decodes a StartTutorialBattleArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartTutorialBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.StartTutorialBattleArg;

        /**
         * Verifies a StartTutorialBattleArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a StartTutorialBattleReply. */
    interface IStartTutorialBattleReply {

        /** StartTutorialBattleReply ok */
        ok?: (boolean|null);
    }

    /** Represents a StartTutorialBattleReply. */
    class StartTutorialBattleReply implements IStartTutorialBattleReply {

        /**
         * Constructs a new StartTutorialBattleReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IStartTutorialBattleReply);

        /** StartTutorialBattleReply ok. */
        public ok: boolean;

        /**
         * Creates a new StartTutorialBattleReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartTutorialBattleReply instance
         */
        public static create(properties?: pb.IStartTutorialBattleReply): pb.StartTutorialBattleReply;

        /**
         * Encodes the specified StartTutorialBattleReply message. Does not implicitly {@link pb.StartTutorialBattleReply.verify|verify} messages.
         * @param message StartTutorialBattleReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IStartTutorialBattleReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified StartTutorialBattleReply message, length delimited. Does not implicitly {@link pb.StartTutorialBattleReply.verify|verify} messages.
         * @param message StartTutorialBattleReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IStartTutorialBattleReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a StartTutorialBattleReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartTutorialBattleReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.StartTutorialBattleReply;

        /**
         * Decodes a StartTutorialBattleReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartTutorialBattleReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.StartTutorialBattleReply;

        /**
         * Verifies a StartTutorialBattleReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TutorialFightEnd. */
    interface ITutorialFightEnd {
    }

    /** Represents a TutorialFightEnd. */
    class TutorialFightEnd implements ITutorialFightEnd {

        /**
         * Constructs a new TutorialFightEnd.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITutorialFightEnd);

        /**
         * Creates a new TutorialFightEnd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TutorialFightEnd instance
         */
        public static create(properties?: pb.ITutorialFightEnd): pb.TutorialFightEnd;

        /**
         * Encodes the specified TutorialFightEnd message. Does not implicitly {@link pb.TutorialFightEnd.verify|verify} messages.
         * @param message TutorialFightEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITutorialFightEnd, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TutorialFightEnd message, length delimited. Does not implicitly {@link pb.TutorialFightEnd.verify|verify} messages.
         * @param message TutorialFightEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITutorialFightEnd, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TutorialFightEnd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TutorialFightEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TutorialFightEnd;

        /**
         * Decodes a TutorialFightEnd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TutorialFightEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TutorialFightEnd;

        /**
         * Verifies a TutorialFightEnd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GuideBattle. */
    interface IGuideBattle {

        /** GuideBattle Desk */
        Desk?: (pb.IFightDesk|null);

        /** GuideBattle GuideBattleID */
        GuideBattleID?: (number|null);
    }

    /** Represents a GuideBattle. */
    class GuideBattle implements IGuideBattle {

        /**
         * Constructs a new GuideBattle.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGuideBattle);

        /** GuideBattle Desk. */
        public Desk?: (pb.IFightDesk|null);

        /** GuideBattle GuideBattleID. */
        public GuideBattleID: number;

        /**
         * Creates a new GuideBattle instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GuideBattle instance
         */
        public static create(properties?: pb.IGuideBattle): pb.GuideBattle;

        /**
         * Encodes the specified GuideBattle message. Does not implicitly {@link pb.GuideBattle.verify|verify} messages.
         * @param message GuideBattle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGuideBattle, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GuideBattle message, length delimited. Does not implicitly {@link pb.GuideBattle.verify|verify} messages.
         * @param message GuideBattle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGuideBattle, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuideBattle message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuideBattle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GuideBattle;

        /**
         * Decodes a GuideBattle message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GuideBattle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GuideBattle;

        /**
         * Verifies a GuideBattle message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VideoFighter. */
    interface IVideoFighter {

        /** VideoFighter Name */
        Name?: (string|null);

        /** VideoFighter Uid */
        Uid?: (number|Long|null);

        /** VideoFighter FightCards */
        FightCards?: (pb.ISkinGCard[]|null);
    }

    /** Represents a VideoFighter. */
    class VideoFighter implements IVideoFighter {

        /**
         * Constructs a new VideoFighter.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVideoFighter);

        /** VideoFighter Name. */
        public Name: string;

        /** VideoFighter Uid. */
        public Uid: (number|Long);

        /** VideoFighter FightCards. */
        public FightCards: pb.ISkinGCard[];

        /**
         * Creates a new VideoFighter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VideoFighter instance
         */
        public static create(properties?: pb.IVideoFighter): pb.VideoFighter;

        /**
         * Encodes the specified VideoFighter message. Does not implicitly {@link pb.VideoFighter.verify|verify} messages.
         * @param message VideoFighter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVideoFighter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VideoFighter message, length delimited. Does not implicitly {@link pb.VideoFighter.verify|verify} messages.
         * @param message VideoFighter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVideoFighter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VideoFighter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VideoFighter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VideoFighter;

        /**
         * Decodes a VideoFighter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VideoFighter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VideoFighter;

        /**
         * Verifies a VideoFighter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VideoItem. */
    interface IVideoItem {

        /** VideoItem VideoID */
        VideoID?: (number|Long|null);

        /** VideoItem Fighter1 */
        Fighter1?: (pb.IVideoFighter|null);

        /** VideoItem Fighter2 */
        Fighter2?: (pb.IVideoFighter|null);

        /** VideoItem WinnerUid */
        WinnerUid?: (number|Long|null);

        /** VideoItem WatchTimes */
        WatchTimes?: (number|null);

        /** VideoItem Like */
        Like?: (number|null);

        /** VideoItem Time */
        Time?: (number|null);

        /** VideoItem SharePlayerName */
        SharePlayerName?: (string|null);

        /** VideoItem IsLike */
        IsLike?: (boolean|null);

        /** VideoItem CommentsAmount */
        CommentsAmount?: (number|null);

        /** VideoItem Name */
        Name?: (string|null);
    }

    /** Represents a VideoItem. */
    class VideoItem implements IVideoItem {

        /**
         * Constructs a new VideoItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVideoItem);

        /** VideoItem VideoID. */
        public VideoID: (number|Long);

        /** VideoItem Fighter1. */
        public Fighter1?: (pb.IVideoFighter|null);

        /** VideoItem Fighter2. */
        public Fighter2?: (pb.IVideoFighter|null);

        /** VideoItem WinnerUid. */
        public WinnerUid: (number|Long);

        /** VideoItem WatchTimes. */
        public WatchTimes: number;

        /** VideoItem Like. */
        public Like: number;

        /** VideoItem Time. */
        public Time: number;

        /** VideoItem SharePlayerName. */
        public SharePlayerName: string;

        /** VideoItem IsLike. */
        public IsLike: boolean;

        /** VideoItem CommentsAmount. */
        public CommentsAmount: number;

        /** VideoItem Name. */
        public Name: string;

        /**
         * Creates a new VideoItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VideoItem instance
         */
        public static create(properties?: pb.IVideoItem): pb.VideoItem;

        /**
         * Encodes the specified VideoItem message. Does not implicitly {@link pb.VideoItem.verify|verify} messages.
         * @param message VideoItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVideoItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VideoItem message, length delimited. Does not implicitly {@link pb.VideoItem.verify|verify} messages.
         * @param message VideoItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVideoItem, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VideoItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VideoItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VideoItem;

        /**
         * Decodes a VideoItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VideoItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VideoItem;

        /**
         * Verifies a VideoItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VideoList. */
    interface IVideoList {

        /** VideoList Videos */
        Videos?: (pb.IVideoItem[]|null);
    }

    /** Represents a VideoList. */
    class VideoList implements IVideoList {

        /**
         * Constructs a new VideoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVideoList);

        /** VideoList Videos. */
        public Videos: pb.IVideoItem[];

        /**
         * Creates a new VideoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VideoList instance
         */
        public static create(properties?: pb.IVideoList): pb.VideoList;

        /**
         * Encodes the specified VideoList message. Does not implicitly {@link pb.VideoList.verify|verify} messages.
         * @param message VideoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVideoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VideoList message, length delimited. Does not implicitly {@link pb.VideoList.verify|verify} messages.
         * @param message VideoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVideoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VideoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VideoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VideoList;

        /**
         * Decodes a VideoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VideoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VideoList;

        /**
         * Verifies a VideoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WatchVideoArg. */
    interface IWatchVideoArg {

        /** WatchVideoArg VideoID */
        VideoID?: (number|Long|null);
    }

    /** Represents a WatchVideoArg. */
    class WatchVideoArg implements IWatchVideoArg {

        /**
         * Constructs a new WatchVideoArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWatchVideoArg);

        /** WatchVideoArg VideoID. */
        public VideoID: (number|Long);

        /**
         * Creates a new WatchVideoArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchVideoArg instance
         */
        public static create(properties?: pb.IWatchVideoArg): pb.WatchVideoArg;

        /**
         * Encodes the specified WatchVideoArg message. Does not implicitly {@link pb.WatchVideoArg.verify|verify} messages.
         * @param message WatchVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWatchVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WatchVideoArg message, length delimited. Does not implicitly {@link pb.WatchVideoArg.verify|verify} messages.
         * @param message WatchVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWatchVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WatchVideoArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchVideoArg;

        /**
         * Decodes a WatchVideoArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchVideoArg;

        /**
         * Verifies a WatchVideoArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WatchVideoResp. */
    interface IWatchVideoResp {

        /** WatchVideoResp VideoData */
        VideoData?: (pb.IVideoBattleData|null);

        /** WatchVideoResp CurWatchTimes */
        CurWatchTimes?: (number|null);

        /** WatchVideoResp CurLike */
        CurLike?: (number|null);
    }

    /** Represents a WatchVideoResp. */
    class WatchVideoResp implements IWatchVideoResp {

        /**
         * Constructs a new WatchVideoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWatchVideoResp);

        /** WatchVideoResp VideoData. */
        public VideoData?: (pb.IVideoBattleData|null);

        /** WatchVideoResp CurWatchTimes. */
        public CurWatchTimes: number;

        /** WatchVideoResp CurLike. */
        public CurLike: number;

        /**
         * Creates a new WatchVideoResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WatchVideoResp instance
         */
        public static create(properties?: pb.IWatchVideoResp): pb.WatchVideoResp;

        /**
         * Encodes the specified WatchVideoResp message. Does not implicitly {@link pb.WatchVideoResp.verify|verify} messages.
         * @param message WatchVideoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWatchVideoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WatchVideoResp message, length delimited. Does not implicitly {@link pb.WatchVideoResp.verify|verify} messages.
         * @param message WatchVideoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWatchVideoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WatchVideoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WatchVideoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WatchVideoResp;

        /**
         * Decodes a WatchVideoResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WatchVideoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WatchVideoResp;

        /**
         * Verifies a WatchVideoResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchSelfVideoListArg. */
    interface IFetchSelfVideoListArg {

        /** FetchSelfVideoListArg Page */
        Page?: (number|null);
    }

    /** Represents a FetchSelfVideoListArg. */
    class FetchSelfVideoListArg implements IFetchSelfVideoListArg {

        /**
         * Constructs a new FetchSelfVideoListArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchSelfVideoListArg);

        /** FetchSelfVideoListArg Page. */
        public Page: number;

        /**
         * Creates a new FetchSelfVideoListArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchSelfVideoListArg instance
         */
        public static create(properties?: pb.IFetchSelfVideoListArg): pb.FetchSelfVideoListArg;

        /**
         * Encodes the specified FetchSelfVideoListArg message. Does not implicitly {@link pb.FetchSelfVideoListArg.verify|verify} messages.
         * @param message FetchSelfVideoListArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchSelfVideoListArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchSelfVideoListArg message, length delimited. Does not implicitly {@link pb.FetchSelfVideoListArg.verify|verify} messages.
         * @param message FetchSelfVideoListArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchSelfVideoListArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchSelfVideoListArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchSelfVideoListArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchSelfVideoListArg;

        /**
         * Decodes a FetchSelfVideoListArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchSelfVideoListArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchSelfVideoListArg;

        /**
         * Verifies a FetchSelfVideoListArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LikeVideoArg. */
    interface ILikeVideoArg {

        /** LikeVideoArg VideoID */
        VideoID?: (number|Long|null);
    }

    /** Represents a LikeVideoArg. */
    class LikeVideoArg implements ILikeVideoArg {

        /**
         * Constructs a new LikeVideoArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILikeVideoArg);

        /** LikeVideoArg VideoID. */
        public VideoID: (number|Long);

        /**
         * Creates a new LikeVideoArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LikeVideoArg instance
         */
        public static create(properties?: pb.ILikeVideoArg): pb.LikeVideoArg;

        /**
         * Encodes the specified LikeVideoArg message. Does not implicitly {@link pb.LikeVideoArg.verify|verify} messages.
         * @param message LikeVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILikeVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LikeVideoArg message, length delimited. Does not implicitly {@link pb.LikeVideoArg.verify|verify} messages.
         * @param message LikeVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILikeVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LikeVideoArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LikeVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LikeVideoArg;

        /**
         * Decodes a LikeVideoArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LikeVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LikeVideoArg;

        /**
         * Verifies a LikeVideoArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LikeVideoResp. */
    interface ILikeVideoResp {

        /** LikeVideoResp CurWatchTimes */
        CurWatchTimes?: (number|null);

        /** LikeVideoResp CurLike */
        CurLike?: (number|null);
    }

    /** Represents a LikeVideoResp. */
    class LikeVideoResp implements ILikeVideoResp {

        /**
         * Constructs a new LikeVideoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILikeVideoResp);

        /** LikeVideoResp CurWatchTimes. */
        public CurWatchTimes: number;

        /** LikeVideoResp CurLike. */
        public CurLike: number;

        /**
         * Creates a new LikeVideoResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LikeVideoResp instance
         */
        public static create(properties?: pb.ILikeVideoResp): pb.LikeVideoResp;

        /**
         * Encodes the specified LikeVideoResp message. Does not implicitly {@link pb.LikeVideoResp.verify|verify} messages.
         * @param message LikeVideoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILikeVideoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LikeVideoResp message, length delimited. Does not implicitly {@link pb.LikeVideoResp.verify|verify} messages.
         * @param message LikeVideoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILikeVideoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LikeVideoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LikeVideoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LikeVideoResp;

        /**
         * Decodes a LikeVideoResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LikeVideoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LikeVideoResp;

        /**
         * Verifies a LikeVideoResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ShareVideoArg. */
    interface IShareVideoArg {

        /** ShareVideoArg VideoID */
        VideoID?: (number|Long|null);

        /** ShareVideoArg Name */
        Name?: (string|null);
    }

    /** Represents a ShareVideoArg. */
    class ShareVideoArg implements IShareVideoArg {

        /**
         * Constructs a new ShareVideoArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IShareVideoArg);

        /** ShareVideoArg VideoID. */
        public VideoID: (number|Long);

        /** ShareVideoArg Name. */
        public Name: string;

        /**
         * Creates a new ShareVideoArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareVideoArg instance
         */
        public static create(properties?: pb.IShareVideoArg): pb.ShareVideoArg;

        /**
         * Encodes the specified ShareVideoArg message. Does not implicitly {@link pb.ShareVideoArg.verify|verify} messages.
         * @param message ShareVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IShareVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ShareVideoArg message, length delimited. Does not implicitly {@link pb.ShareVideoArg.verify|verify} messages.
         * @param message ShareVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IShareVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ShareVideoArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ShareVideoArg;

        /**
         * Decodes a ShareVideoArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ShareVideoArg;

        /**
         * Verifies a ShareVideoArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VideoFighterData. */
    interface IVideoFighterData {

        /** VideoFighterData Uid */
        Uid?: (number|Long|null);

        /** VideoFighterData Name */
        Name?: (string|null);

        /** VideoFighterData PvpScore */
        PvpScore?: (number|null);

        /** VideoFighterData Camp */
        Camp?: (number|null);

        /** VideoFighterData HandCards */
        HandCards?: (pb.ISkinGCard[]|null);

        /** VideoFighterData IsRobot */
        IsRobot?: (boolean|null);
    }

    /** Represents a VideoFighterData. */
    class VideoFighterData implements IVideoFighterData {

        /**
         * Constructs a new VideoFighterData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVideoFighterData);

        /** VideoFighterData Uid. */
        public Uid: (number|Long);

        /** VideoFighterData Name. */
        public Name: string;

        /** VideoFighterData PvpScore. */
        public PvpScore: number;

        /** VideoFighterData Camp. */
        public Camp: number;

        /** VideoFighterData HandCards. */
        public HandCards: pb.ISkinGCard[];

        /** VideoFighterData IsRobot. */
        public IsRobot: boolean;

        /**
         * Creates a new VideoFighterData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VideoFighterData instance
         */
        public static create(properties?: pb.IVideoFighterData): pb.VideoFighterData;

        /**
         * Encodes the specified VideoFighterData message. Does not implicitly {@link pb.VideoFighterData.verify|verify} messages.
         * @param message VideoFighterData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVideoFighterData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VideoFighterData message, length delimited. Does not implicitly {@link pb.VideoFighterData.verify|verify} messages.
         * @param message VideoFighterData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVideoFighterData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VideoFighterData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VideoFighterData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VideoFighterData;

        /**
         * Decodes a VideoFighterData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VideoFighterData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VideoFighterData;

        /**
         * Verifies a VideoFighterData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a SaveVideoArg. */
    interface ISaveVideoArg {

        /** SaveVideoArg VideoID */
        VideoID?: (number|Long|null);

        /** SaveVideoArg Fighter1 */
        Fighter1?: (pb.IVideoFighterData|null);

        /** SaveVideoArg Fighter2 */
        Fighter2?: (pb.IVideoFighterData|null);

        /** SaveVideoArg Winner */
        Winner?: (number|Long|null);
    }

    /** Represents a SaveVideoArg. */
    class SaveVideoArg implements ISaveVideoArg {

        /**
         * Constructs a new SaveVideoArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISaveVideoArg);

        /** SaveVideoArg VideoID. */
        public VideoID: (number|Long);

        /** SaveVideoArg Fighter1. */
        public Fighter1?: (pb.IVideoFighterData|null);

        /** SaveVideoArg Fighter2. */
        public Fighter2?: (pb.IVideoFighterData|null);

        /** SaveVideoArg Winner. */
        public Winner: (number|Long);

        /**
         * Creates a new SaveVideoArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SaveVideoArg instance
         */
        public static create(properties?: pb.ISaveVideoArg): pb.SaveVideoArg;

        /**
         * Encodes the specified SaveVideoArg message. Does not implicitly {@link pb.SaveVideoArg.verify|verify} messages.
         * @param message SaveVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISaveVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SaveVideoArg message, length delimited. Does not implicitly {@link pb.SaveVideoArg.verify|verify} messages.
         * @param message SaveVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISaveVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SaveVideoArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SaveVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.SaveVideoArg;

        /**
         * Decodes a SaveVideoArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SaveVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.SaveVideoArg;

        /**
         * Verifies a SaveVideoArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchVideoCommentsArg. */
    interface IFetchVideoCommentsArg {

        /** FetchVideoCommentsArg VideoID */
        VideoID?: (number|Long|null);

        /** FetchVideoCommentsArg CurAmount */
        CurAmount?: (number|null);
    }

    /** Represents a FetchVideoCommentsArg. */
    class FetchVideoCommentsArg implements IFetchVideoCommentsArg {

        /**
         * Constructs a new FetchVideoCommentsArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchVideoCommentsArg);

        /** FetchVideoCommentsArg VideoID. */
        public VideoID: (number|Long);

        /** FetchVideoCommentsArg CurAmount. */
        public CurAmount: number;

        /**
         * Creates a new FetchVideoCommentsArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchVideoCommentsArg instance
         */
        public static create(properties?: pb.IFetchVideoCommentsArg): pb.FetchVideoCommentsArg;

        /**
         * Encodes the specified FetchVideoCommentsArg message. Does not implicitly {@link pb.FetchVideoCommentsArg.verify|verify} messages.
         * @param message FetchVideoCommentsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchVideoCommentsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchVideoCommentsArg message, length delimited. Does not implicitly {@link pb.FetchVideoCommentsArg.verify|verify} messages.
         * @param message FetchVideoCommentsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchVideoCommentsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchVideoCommentsArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchVideoCommentsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchVideoCommentsArg;

        /**
         * Decodes a FetchVideoCommentsArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchVideoCommentsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchVideoCommentsArg;

        /**
         * Verifies a FetchVideoCommentsArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a VideoComments. */
    interface IVideoComments {

        /** VideoComments ID */
        ID?: (number|null);

        /** VideoComments Name */
        Name?: (string|null);

        /** VideoComments Content */
        Content?: (string|null);

        /** VideoComments Like */
        Like?: (number|null);

        /** VideoComments IsLike */
        IsLike?: (boolean|null);

        /** VideoComments HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** VideoComments Time */
        Time?: (number|null);

        /** VideoComments Country */
        Country?: (string|null);

        /** VideoComments Uid */
        Uid?: (number|Long|null);

        /** VideoComments HeadFrame */
        HeadFrame?: (string|null);
    }

    /** Represents a VideoComments. */
    class VideoComments implements IVideoComments {

        /**
         * Constructs a new VideoComments.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVideoComments);

        /** VideoComments ID. */
        public ID: number;

        /** VideoComments Name. */
        public Name: string;

        /** VideoComments Content. */
        public Content: string;

        /** VideoComments Like. */
        public Like: number;

        /** VideoComments IsLike. */
        public IsLike: boolean;

        /** VideoComments HeadImgUrl. */
        public HeadImgUrl: string;

        /** VideoComments Time. */
        public Time: number;

        /** VideoComments Country. */
        public Country: string;

        /** VideoComments Uid. */
        public Uid: (number|Long);

        /** VideoComments HeadFrame. */
        public HeadFrame: string;

        /**
         * Creates a new VideoComments instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VideoComments instance
         */
        public static create(properties?: pb.IVideoComments): pb.VideoComments;

        /**
         * Encodes the specified VideoComments message. Does not implicitly {@link pb.VideoComments.verify|verify} messages.
         * @param message VideoComments message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVideoComments, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VideoComments message, length delimited. Does not implicitly {@link pb.VideoComments.verify|verify} messages.
         * @param message VideoComments message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVideoComments, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VideoComments message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VideoComments
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.VideoComments;

        /**
         * Decodes a VideoComments message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VideoComments
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.VideoComments;

        /**
         * Verifies a VideoComments message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchVideoCommentsReply. */
    interface IFetchVideoCommentsReply {

        /** FetchVideoCommentsReply CommentsList */
        CommentsList?: (pb.IVideoComments[]|null);

        /** FetchVideoCommentsReply HasMore */
        HasMore?: (boolean|null);
    }

    /** Represents a FetchVideoCommentsReply. */
    class FetchVideoCommentsReply implements IFetchVideoCommentsReply {

        /**
         * Constructs a new FetchVideoCommentsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchVideoCommentsReply);

        /** FetchVideoCommentsReply CommentsList. */
        public CommentsList: pb.IVideoComments[];

        /** FetchVideoCommentsReply HasMore. */
        public HasMore: boolean;

        /**
         * Creates a new FetchVideoCommentsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchVideoCommentsReply instance
         */
        public static create(properties?: pb.IFetchVideoCommentsReply): pb.FetchVideoCommentsReply;

        /**
         * Encodes the specified FetchVideoCommentsReply message. Does not implicitly {@link pb.FetchVideoCommentsReply.verify|verify} messages.
         * @param message FetchVideoCommentsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchVideoCommentsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchVideoCommentsReply message, length delimited. Does not implicitly {@link pb.FetchVideoCommentsReply.verify|verify} messages.
         * @param message FetchVideoCommentsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchVideoCommentsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchVideoCommentsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchVideoCommentsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchVideoCommentsReply;

        /**
         * Decodes a FetchVideoCommentsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchVideoCommentsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchVideoCommentsReply;

        /**
         * Verifies a FetchVideoCommentsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LikeVideoCommentsArg. */
    interface ILikeVideoCommentsArg {

        /** LikeVideoCommentsArg VideoID */
        VideoID?: (number|Long|null);

        /** LikeVideoCommentsArg CommentsID */
        CommentsID?: (number|null);
    }

    /** Represents a LikeVideoCommentsArg. */
    class LikeVideoCommentsArg implements ILikeVideoCommentsArg {

        /**
         * Constructs a new LikeVideoCommentsArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILikeVideoCommentsArg);

        /** LikeVideoCommentsArg VideoID. */
        public VideoID: (number|Long);

        /** LikeVideoCommentsArg CommentsID. */
        public CommentsID: number;

        /**
         * Creates a new LikeVideoCommentsArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LikeVideoCommentsArg instance
         */
        public static create(properties?: pb.ILikeVideoCommentsArg): pb.LikeVideoCommentsArg;

        /**
         * Encodes the specified LikeVideoCommentsArg message. Does not implicitly {@link pb.LikeVideoCommentsArg.verify|verify} messages.
         * @param message LikeVideoCommentsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILikeVideoCommentsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LikeVideoCommentsArg message, length delimited. Does not implicitly {@link pb.LikeVideoCommentsArg.verify|verify} messages.
         * @param message LikeVideoCommentsArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILikeVideoCommentsArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LikeVideoCommentsArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LikeVideoCommentsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LikeVideoCommentsArg;

        /**
         * Decodes a LikeVideoCommentsArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LikeVideoCommentsArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LikeVideoCommentsArg;

        /**
         * Verifies a LikeVideoCommentsArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a LikeVideoCommentsReply. */
    interface ILikeVideoCommentsReply {

        /** LikeVideoCommentsReply CurLike */
        CurLike?: (number|null);
    }

    /** Represents a LikeVideoCommentsReply. */
    class LikeVideoCommentsReply implements ILikeVideoCommentsReply {

        /**
         * Constructs a new LikeVideoCommentsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILikeVideoCommentsReply);

        /** LikeVideoCommentsReply CurLike. */
        public CurLike: number;

        /**
         * Creates a new LikeVideoCommentsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LikeVideoCommentsReply instance
         */
        public static create(properties?: pb.ILikeVideoCommentsReply): pb.LikeVideoCommentsReply;

        /**
         * Encodes the specified LikeVideoCommentsReply message. Does not implicitly {@link pb.LikeVideoCommentsReply.verify|verify} messages.
         * @param message LikeVideoCommentsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILikeVideoCommentsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LikeVideoCommentsReply message, length delimited. Does not implicitly {@link pb.LikeVideoCommentsReply.verify|verify} messages.
         * @param message LikeVideoCommentsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILikeVideoCommentsReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LikeVideoCommentsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LikeVideoCommentsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.LikeVideoCommentsReply;

        /**
         * Decodes a LikeVideoCommentsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LikeVideoCommentsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.LikeVideoCommentsReply;

        /**
         * Verifies a LikeVideoCommentsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CommentsVideoArg. */
    interface ICommentsVideoArg {

        /** CommentsVideoArg VideoID */
        VideoID?: (number|Long|null);

        /** CommentsVideoArg Content */
        Content?: (string|null);
    }

    /** Represents a CommentsVideoArg. */
    class CommentsVideoArg implements ICommentsVideoArg {

        /**
         * Constructs a new CommentsVideoArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICommentsVideoArg);

        /** CommentsVideoArg VideoID. */
        public VideoID: (number|Long);

        /** CommentsVideoArg Content. */
        public Content: string;

        /**
         * Creates a new CommentsVideoArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CommentsVideoArg instance
         */
        public static create(properties?: pb.ICommentsVideoArg): pb.CommentsVideoArg;

        /**
         * Encodes the specified CommentsVideoArg message. Does not implicitly {@link pb.CommentsVideoArg.verify|verify} messages.
         * @param message CommentsVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICommentsVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CommentsVideoArg message, length delimited. Does not implicitly {@link pb.CommentsVideoArg.verify|verify} messages.
         * @param message CommentsVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICommentsVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CommentsVideoArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommentsVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CommentsVideoArg;

        /**
         * Decodes a CommentsVideoArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommentsVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CommentsVideoArg;

        /**
         * Verifies a CommentsVideoArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CommentsVideoReply. */
    interface ICommentsVideoReply {

        /** CommentsVideoReply CommentsID */
        CommentsID?: (number|null);

        /** CommentsVideoReply Time */
        Time?: (number|null);
    }

    /** Represents a CommentsVideoReply. */
    class CommentsVideoReply implements ICommentsVideoReply {

        /**
         * Constructs a new CommentsVideoReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICommentsVideoReply);

        /** CommentsVideoReply CommentsID. */
        public CommentsID: number;

        /** CommentsVideoReply Time. */
        public Time: number;

        /**
         * Creates a new CommentsVideoReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CommentsVideoReply instance
         */
        public static create(properties?: pb.ICommentsVideoReply): pb.CommentsVideoReply;

        /**
         * Encodes the specified CommentsVideoReply message. Does not implicitly {@link pb.CommentsVideoReply.verify|verify} messages.
         * @param message CommentsVideoReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICommentsVideoReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CommentsVideoReply message, length delimited. Does not implicitly {@link pb.CommentsVideoReply.verify|verify} messages.
         * @param message CommentsVideoReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICommentsVideoReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CommentsVideoReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommentsVideoReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CommentsVideoReply;

        /**
         * Decodes a CommentsVideoReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommentsVideoReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CommentsVideoReply;

        /**
         * Verifies a CommentsVideoReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a GCommentsVideoArg. */
    interface IGCommentsVideoArg {

        /** GCommentsVideoArg VideoID */
        VideoID?: (number|Long|null);

        /** GCommentsVideoArg Content */
        Content?: (string|null);

        /** GCommentsVideoArg Name */
        Name?: (string|null);

        /** GCommentsVideoArg HeadImgUrl */
        HeadImgUrl?: (string|null);

        /** GCommentsVideoArg Country */
        Country?: (string|null);

        /** GCommentsVideoArg Uid */
        Uid?: (number|Long|null);

        /** GCommentsVideoArg HeadFrame */
        HeadFrame?: (string|null);
    }

    /** Represents a GCommentsVideoArg. */
    class GCommentsVideoArg implements IGCommentsVideoArg {

        /**
         * Constructs a new GCommentsVideoArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGCommentsVideoArg);

        /** GCommentsVideoArg VideoID. */
        public VideoID: (number|Long);

        /** GCommentsVideoArg Content. */
        public Content: string;

        /** GCommentsVideoArg Name. */
        public Name: string;

        /** GCommentsVideoArg HeadImgUrl. */
        public HeadImgUrl: string;

        /** GCommentsVideoArg Country. */
        public Country: string;

        /** GCommentsVideoArg Uid. */
        public Uid: (number|Long);

        /** GCommentsVideoArg HeadFrame. */
        public HeadFrame: string;

        /**
         * Creates a new GCommentsVideoArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GCommentsVideoArg instance
         */
        public static create(properties?: pb.IGCommentsVideoArg): pb.GCommentsVideoArg;

        /**
         * Encodes the specified GCommentsVideoArg message. Does not implicitly {@link pb.GCommentsVideoArg.verify|verify} messages.
         * @param message GCommentsVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGCommentsVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GCommentsVideoArg message, length delimited. Does not implicitly {@link pb.GCommentsVideoArg.verify|verify} messages.
         * @param message GCommentsVideoArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGCommentsVideoArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GCommentsVideoArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GCommentsVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GCommentsVideoArg;

        /**
         * Decodes a GCommentsVideoArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GCommentsVideoArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GCommentsVideoArg;

        /**
         * Verifies a GCommentsVideoArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a FetchVideoItemArg. */
    interface IFetchVideoItemArg {

        /** FetchVideoItemArg VideoID */
        VideoID?: (number|Long|null);
    }

    /** Represents a FetchVideoItemArg. */
    class FetchVideoItemArg implements IFetchVideoItemArg {

        /**
         * Constructs a new FetchVideoItemArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IFetchVideoItemArg);

        /** FetchVideoItemArg VideoID. */
        public VideoID: (number|Long);

        /**
         * Creates a new FetchVideoItemArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchVideoItemArg instance
         */
        public static create(properties?: pb.IFetchVideoItemArg): pb.FetchVideoItemArg;

        /**
         * Encodes the specified FetchVideoItemArg message. Does not implicitly {@link pb.FetchVideoItemArg.verify|verify} messages.
         * @param message FetchVideoItemArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IFetchVideoItemArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FetchVideoItemArg message, length delimited. Does not implicitly {@link pb.FetchVideoItemArg.verify|verify} messages.
         * @param message FetchVideoItemArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IFetchVideoItemArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FetchVideoItemArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchVideoItemArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.FetchVideoItemArg;

        /**
         * Decodes a FetchVideoItemArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchVideoItemArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.FetchVideoItemArg;

        /**
         * Verifies a FetchVideoItemArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ReplyWxInviteBattleArg. */
    interface IReplyWxInviteBattleArg {

        /** ReplyWxInviteBattleArg Uid */
        Uid?: (number|Long|null);
    }

    /** Represents a ReplyWxInviteBattleArg. */
    class ReplyWxInviteBattleArg implements IReplyWxInviteBattleArg {

        /**
         * Constructs a new ReplyWxInviteBattleArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IReplyWxInviteBattleArg);

        /** ReplyWxInviteBattleArg Uid. */
        public Uid: (number|Long);

        /**
         * Creates a new ReplyWxInviteBattleArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplyWxInviteBattleArg instance
         */
        public static create(properties?: pb.IReplyWxInviteBattleArg): pb.ReplyWxInviteBattleArg;

        /**
         * Encodes the specified ReplyWxInviteBattleArg message. Does not implicitly {@link pb.ReplyWxInviteBattleArg.verify|verify} messages.
         * @param message ReplyWxInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IReplyWxInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReplyWxInviteBattleArg message, length delimited. Does not implicitly {@link pb.ReplyWxInviteBattleArg.verify|verify} messages.
         * @param message ReplyWxInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IReplyWxInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReplyWxInviteBattleArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplyWxInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ReplyWxInviteBattleArg;

        /**
         * Decodes a ReplyWxInviteBattleArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplyWxInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ReplyWxInviteBattleArg;

        /**
         * Verifies a ReplyWxInviteBattleArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WxInviteBattleResult. */
    interface IWxInviteBattleResult {

        /** WxInviteBattleResult Result */
        Result?: (pb.WxInviteBattleResult.WxInviteResult|null);
    }

    /** Represents a WxInviteBattleResult. */
    class WxInviteBattleResult implements IWxInviteBattleResult {

        /**
         * Constructs a new WxInviteBattleResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWxInviteBattleResult);

        /** WxInviteBattleResult Result. */
        public Result: pb.WxInviteBattleResult.WxInviteResult;

        /**
         * Creates a new WxInviteBattleResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WxInviteBattleResult instance
         */
        public static create(properties?: pb.IWxInviteBattleResult): pb.WxInviteBattleResult;

        /**
         * Encodes the specified WxInviteBattleResult message. Does not implicitly {@link pb.WxInviteBattleResult.verify|verify} messages.
         * @param message WxInviteBattleResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWxInviteBattleResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WxInviteBattleResult message, length delimited. Does not implicitly {@link pb.WxInviteBattleResult.verify|verify} messages.
         * @param message WxInviteBattleResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWxInviteBattleResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WxInviteBattleResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WxInviteBattleResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WxInviteBattleResult;

        /**
         * Decodes a WxInviteBattleResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WxInviteBattleResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WxInviteBattleResult;

        /**
         * Verifies a WxInviteBattleResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    namespace WxInviteBattleResult {

        /** WxInviteResult enum. */
        enum WxInviteResult {
            OK = 0,
            Timeout = 1
        }
    }

    /** Properties of a GetShareTreasureArg. */
    interface IGetShareTreasureArg {

        /** GetShareTreasureArg Hid */
        Hid?: (number|null);
    }

    /** Represents a GetShareTreasureArg. */
    class GetShareTreasureArg implements IGetShareTreasureArg {

        /**
         * Constructs a new GetShareTreasureArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetShareTreasureArg);

        /** GetShareTreasureArg Hid. */
        public Hid: number;

        /**
         * Creates a new GetShareTreasureArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetShareTreasureArg instance
         */
        public static create(properties?: pb.IGetShareTreasureArg): pb.GetShareTreasureArg;

        /**
         * Encodes the specified GetShareTreasureArg message. Does not implicitly {@link pb.GetShareTreasureArg.verify|verify} messages.
         * @param message GetShareTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetShareTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GetShareTreasureArg message, length delimited. Does not implicitly {@link pb.GetShareTreasureArg.verify|verify} messages.
         * @param message GetShareTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetShareTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetShareTreasureArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetShareTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.GetShareTreasureArg;

        /**
         * Decodes a GetShareTreasureArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetShareTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.GetShareTreasureArg;

        /**
         * Verifies a GetShareTreasureArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ShareTreasureArg. */
    interface IShareTreasureArg {

        /** ShareTreasureArg TreasureID */
        TreasureID?: (number|null);

        /** ShareTreasureArg WxGroupID */
        WxGroupID?: (string|null);
    }

    /** Represents a ShareTreasureArg. */
    class ShareTreasureArg implements IShareTreasureArg {

        /**
         * Constructs a new ShareTreasureArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IShareTreasureArg);

        /** ShareTreasureArg TreasureID. */
        public TreasureID: number;

        /** ShareTreasureArg WxGroupID. */
        public WxGroupID: string;

        /**
         * Creates a new ShareTreasureArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareTreasureArg instance
         */
        public static create(properties?: pb.IShareTreasureArg): pb.ShareTreasureArg;

        /**
         * Encodes the specified ShareTreasureArg message. Does not implicitly {@link pb.ShareTreasureArg.verify|verify} messages.
         * @param message ShareTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IShareTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ShareTreasureArg message, length delimited. Does not implicitly {@link pb.ShareTreasureArg.verify|verify} messages.
         * @param message ShareTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IShareTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ShareTreasureArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ShareTreasureArg;

        /**
         * Decodes a ShareTreasureArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ShareTreasureArg;

        /**
         * Verifies a ShareTreasureArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a HelpShareTreasureArg. */
    interface IHelpShareTreasureArg {

        /** HelpShareTreasureArg ShareUid */
        ShareUid?: (number|Long|null);

        /** HelpShareTreasureArg TreasureID */
        TreasureID?: (number|null);
    }

    /** Represents a HelpShareTreasureArg. */
    class HelpShareTreasureArg implements IHelpShareTreasureArg {

        /**
         * Constructs a new HelpShareTreasureArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IHelpShareTreasureArg);

        /** HelpShareTreasureArg ShareUid. */
        public ShareUid: (number|Long);

        /** HelpShareTreasureArg TreasureID. */
        public TreasureID: number;

        /**
         * Creates a new HelpShareTreasureArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HelpShareTreasureArg instance
         */
        public static create(properties?: pb.IHelpShareTreasureArg): pb.HelpShareTreasureArg;

        /**
         * Encodes the specified HelpShareTreasureArg message. Does not implicitly {@link pb.HelpShareTreasureArg.verify|verify} messages.
         * @param message HelpShareTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IHelpShareTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified HelpShareTreasureArg message, length delimited. Does not implicitly {@link pb.HelpShareTreasureArg.verify|verify} messages.
         * @param message HelpShareTreasureArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IHelpShareTreasureArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HelpShareTreasureArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HelpShareTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.HelpShareTreasureArg;

        /**
         * Decodes a HelpShareTreasureArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HelpShareTreasureArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.HelpShareTreasureArg;

        /**
         * Verifies a HelpShareTreasureArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a TreasureBeHelp. */
    interface ITreasureBeHelp {

        /** TreasureBeHelp TreasureID */
        TreasureID?: (number|null);

        /** TreasureBeHelp OpenTimeout */
        OpenTimeout?: (number|null);
    }

    /** Represents a TreasureBeHelp. */
    class TreasureBeHelp implements ITreasureBeHelp {

        /**
         * Constructs a new TreasureBeHelp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITreasureBeHelp);

        /** TreasureBeHelp TreasureID. */
        public TreasureID: number;

        /** TreasureBeHelp OpenTimeout. */
        public OpenTimeout: number;

        /**
         * Creates a new TreasureBeHelp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreasureBeHelp instance
         */
        public static create(properties?: pb.ITreasureBeHelp): pb.TreasureBeHelp;

        /**
         * Encodes the specified TreasureBeHelp message. Does not implicitly {@link pb.TreasureBeHelp.verify|verify} messages.
         * @param message TreasureBeHelp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITreasureBeHelp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TreasureBeHelp message, length delimited. Does not implicitly {@link pb.TreasureBeHelp.verify|verify} messages.
         * @param message TreasureBeHelp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITreasureBeHelp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureBeHelp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureBeHelp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.TreasureBeHelp;

        /**
         * Decodes a TreasureBeHelp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreasureBeHelp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.TreasureBeHelp;

        /**
         * Verifies a TreasureBeHelp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a BattleLoseBeHelp. */
    interface IBattleLoseBeHelp {

        /** BattleLoseBeHelp AddStar */
        AddStar?: (number|null);
    }

    /** Represents a BattleLoseBeHelp. */
    class BattleLoseBeHelp implements IBattleLoseBeHelp {

        /**
         * Constructs a new BattleLoseBeHelp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBattleLoseBeHelp);

        /** BattleLoseBeHelp AddStar. */
        public AddStar: number;

        /**
         * Creates a new BattleLoseBeHelp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BattleLoseBeHelp instance
         */
        public static create(properties?: pb.IBattleLoseBeHelp): pb.BattleLoseBeHelp;

        /**
         * Encodes the specified BattleLoseBeHelp message. Does not implicitly {@link pb.BattleLoseBeHelp.verify|verify} messages.
         * @param message BattleLoseBeHelp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBattleLoseBeHelp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BattleLoseBeHelp message, length delimited. Does not implicitly {@link pb.BattleLoseBeHelp.verify|verify} messages.
         * @param message BattleLoseBeHelp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBattleLoseBeHelp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BattleLoseBeHelp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BattleLoseBeHelp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.BattleLoseBeHelp;

        /**
         * Decodes a BattleLoseBeHelp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BattleLoseBeHelp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.BattleLoseBeHelp;

        /**
         * Verifies a BattleLoseBeHelp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ShareBattleLoseArg. */
    interface IShareBattleLoseArg {

        /** ShareBattleLoseArg WxGroupID */
        WxGroupID?: (string|null);
    }

    /** Represents a ShareBattleLoseArg. */
    class ShareBattleLoseArg implements IShareBattleLoseArg {

        /**
         * Constructs a new ShareBattleLoseArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IShareBattleLoseArg);

        /** ShareBattleLoseArg WxGroupID. */
        public WxGroupID: string;

        /**
         * Creates a new ShareBattleLoseArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareBattleLoseArg instance
         */
        public static create(properties?: pb.IShareBattleLoseArg): pb.ShareBattleLoseArg;

        /**
         * Encodes the specified ShareBattleLoseArg message. Does not implicitly {@link pb.ShareBattleLoseArg.verify|verify} messages.
         * @param message ShareBattleLoseArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IShareBattleLoseArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ShareBattleLoseArg message, length delimited. Does not implicitly {@link pb.ShareBattleLoseArg.verify|verify} messages.
         * @param message ShareBattleLoseArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IShareBattleLoseArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ShareBattleLoseArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareBattleLoseArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ShareBattleLoseArg;

        /**
         * Decodes a ShareBattleLoseArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareBattleLoseArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ShareBattleLoseArg;

        /**
         * Verifies a ShareBattleLoseArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WxExamineState. */
    interface IWxExamineState {

        /** WxExamineState IsExamined */
        IsExamined?: (boolean|null);
    }

    /** Represents a WxExamineState. */
    class WxExamineState implements IWxExamineState {

        /**
         * Constructs a new WxExamineState.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWxExamineState);

        /** WxExamineState IsExamined. */
        public IsExamined: boolean;

        /**
         * Creates a new WxExamineState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WxExamineState instance
         */
        public static create(properties?: pb.IWxExamineState): pb.WxExamineState;

        /**
         * Encodes the specified WxExamineState message. Does not implicitly {@link pb.WxExamineState.verify|verify} messages.
         * @param message WxExamineState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWxExamineState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WxExamineState message, length delimited. Does not implicitly {@link pb.WxExamineState.verify|verify} messages.
         * @param message WxExamineState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWxExamineState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WxExamineState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WxExamineState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WxExamineState;

        /**
         * Decodes a WxExamineState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WxExamineState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WxExamineState;

        /**
         * Verifies a WxExamineState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a HelpShareBattleLoseArg. */
    interface IHelpShareBattleLoseArg {

        /** HelpShareBattleLoseArg ShareUid */
        ShareUid?: (number|Long|null);
    }

    /** Represents a HelpShareBattleLoseArg. */
    class HelpShareBattleLoseArg implements IHelpShareBattleLoseArg {

        /**
         * Constructs a new HelpShareBattleLoseArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IHelpShareBattleLoseArg);

        /** HelpShareBattleLoseArg ShareUid. */
        public ShareUid: (number|Long);

        /**
         * Creates a new HelpShareBattleLoseArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HelpShareBattleLoseArg instance
         */
        public static create(properties?: pb.IHelpShareBattleLoseArg): pb.HelpShareBattleLoseArg;

        /**
         * Encodes the specified HelpShareBattleLoseArg message. Does not implicitly {@link pb.HelpShareBattleLoseArg.verify|verify} messages.
         * @param message HelpShareBattleLoseArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IHelpShareBattleLoseArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified HelpShareBattleLoseArg message, length delimited. Does not implicitly {@link pb.HelpShareBattleLoseArg.verify|verify} messages.
         * @param message HelpShareBattleLoseArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IHelpShareBattleLoseArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HelpShareBattleLoseArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HelpShareBattleLoseArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.HelpShareBattleLoseArg;

        /**
         * Decodes a HelpShareBattleLoseArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HelpShareBattleLoseArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.HelpShareBattleLoseArg;

        /**
         * Verifies a HelpShareBattleLoseArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WxgameShareArg. */
    interface IWxgameShareArg {

        /** WxgameShareArg ShareID */
        ShareID?: (number|null);

        /** WxgameShareArg ShareType */
        ShareType?: (number|null);

        /** WxgameShareArg WxGroupID */
        WxGroupID?: (string|null);

        /** WxgameShareArg Data */
        Data?: (Uint8Array|null);
    }

    /** Represents a WxgameShareArg. */
    class WxgameShareArg implements IWxgameShareArg {

        /**
         * Constructs a new WxgameShareArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWxgameShareArg);

        /** WxgameShareArg ShareID. */
        public ShareID: number;

        /** WxgameShareArg ShareType. */
        public ShareType: number;

        /** WxgameShareArg WxGroupID. */
        public WxGroupID: string;

        /** WxgameShareArg Data. */
        public Data: Uint8Array;

        /**
         * Creates a new WxgameShareArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WxgameShareArg instance
         */
        public static create(properties?: pb.IWxgameShareArg): pb.WxgameShareArg;

        /**
         * Encodes the specified WxgameShareArg message. Does not implicitly {@link pb.WxgameShareArg.verify|verify} messages.
         * @param message WxgameShareArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWxgameShareArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WxgameShareArg message, length delimited. Does not implicitly {@link pb.WxgameShareArg.verify|verify} messages.
         * @param message WxgameShareArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWxgameShareArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WxgameShareArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WxgameShareArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WxgameShareArg;

        /**
         * Decodes a WxgameShareArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WxgameShareArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WxgameShareArg;

        /**
         * Verifies a WxgameShareArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a ClickWxgameShareArg. */
    interface IClickWxgameShareArg {

        /** ClickWxgameShareArg ShareID */
        ShareID?: (number|null);

        /** ClickWxgameShareArg ShareUid */
        ShareUid?: (number|Long|null);

        /** ClickWxgameShareArg ShareType */
        ShareType?: (number|null);

        /** ClickWxgameShareArg Data */
        Data?: (Uint8Array|null);
    }

    /** Represents a ClickWxgameShareArg. */
    class ClickWxgameShareArg implements IClickWxgameShareArg {

        /**
         * Constructs a new ClickWxgameShareArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IClickWxgameShareArg);

        /** ClickWxgameShareArg ShareID. */
        public ShareID: number;

        /** ClickWxgameShareArg ShareUid. */
        public ShareUid: (number|Long);

        /** ClickWxgameShareArg ShareType. */
        public ShareType: number;

        /** ClickWxgameShareArg Data. */
        public Data: Uint8Array;

        /**
         * Creates a new ClickWxgameShareArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ClickWxgameShareArg instance
         */
        public static create(properties?: pb.IClickWxgameShareArg): pb.ClickWxgameShareArg;

        /**
         * Encodes the specified ClickWxgameShareArg message. Does not implicitly {@link pb.ClickWxgameShareArg.verify|verify} messages.
         * @param message ClickWxgameShareArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IClickWxgameShareArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ClickWxgameShareArg message, length delimited. Does not implicitly {@link pb.ClickWxgameShareArg.verify|verify} messages.
         * @param message ClickWxgameShareArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IClickWxgameShareArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ClickWxgameShareArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ClickWxgameShareArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.ClickWxgameShareArg;

        /**
         * Decodes a ClickWxgameShareArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ClickWxgameShareArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.ClickWxgameShareArg;

        /**
         * Verifies a ClickWxgameShareArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WxShareAddJadeArg. */
    interface IWxShareAddJadeArg {

        /** WxShareAddJadeArg ShareTime */
        ShareTime?: (number|null);

        /** WxShareAddJadeArg PlayerName */
        PlayerName?: (string|null);
    }

    /** Represents a WxShareAddJadeArg. */
    class WxShareAddJadeArg implements IWxShareAddJadeArg {

        /**
         * Constructs a new WxShareAddJadeArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWxShareAddJadeArg);

        /** WxShareAddJadeArg ShareTime. */
        public ShareTime: number;

        /** WxShareAddJadeArg PlayerName. */
        public PlayerName: string;

        /**
         * Creates a new WxShareAddJadeArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WxShareAddJadeArg instance
         */
        public static create(properties?: pb.IWxShareAddJadeArg): pb.WxShareAddJadeArg;

        /**
         * Encodes the specified WxShareAddJadeArg message. Does not implicitly {@link pb.WxShareAddJadeArg.verify|verify} messages.
         * @param message WxShareAddJadeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWxShareAddJadeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WxShareAddJadeArg message, length delimited. Does not implicitly {@link pb.WxShareAddJadeArg.verify|verify} messages.
         * @param message WxShareAddJadeArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWxShareAddJadeArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WxShareAddJadeArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WxShareAddJadeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WxShareAddJadeArg;

        /**
         * Decodes a WxShareAddJadeArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WxShareAddJadeArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WxShareAddJadeArg;

        /**
         * Verifies a WxShareAddJadeArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a CancelWxShareArg. */
    interface ICancelWxShareArg {

        /** CancelWxShareArg ShareID */
        ShareID?: (number|null);

        /** CancelWxShareArg ShareType */
        ShareType?: (number|null);
    }

    /** Represents a CancelWxShareArg. */
    class CancelWxShareArg implements ICancelWxShareArg {

        /**
         * Constructs a new CancelWxShareArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICancelWxShareArg);

        /** CancelWxShareArg ShareID. */
        public ShareID: number;

        /** CancelWxShareArg ShareType. */
        public ShareType: number;

        /**
         * Creates a new CancelWxShareArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CancelWxShareArg instance
         */
        public static create(properties?: pb.ICancelWxShareArg): pb.CancelWxShareArg;

        /**
         * Encodes the specified CancelWxShareArg message. Does not implicitly {@link pb.CancelWxShareArg.verify|verify} messages.
         * @param message CancelWxShareArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICancelWxShareArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CancelWxShareArg message, length delimited. Does not implicitly {@link pb.CancelWxShareArg.verify|verify} messages.
         * @param message CancelWxShareArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICancelWxShareArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CancelWxShareArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CancelWxShareArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.CancelWxShareArg;

        /**
         * Decodes a CancelWxShareArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CancelWxShareArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.CancelWxShareArg;

        /**
         * Verifies a CancelWxShareArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WxShareBeHelpArg. */
    interface IWxShareBeHelpArg {

        /** WxShareBeHelpArg ShareType */
        ShareType?: (number|null);

        /** WxShareBeHelpArg Data */
        Data?: (Uint8Array|null);
    }

    /** Represents a WxShareBeHelpArg. */
    class WxShareBeHelpArg implements IWxShareBeHelpArg {

        /**
         * Constructs a new WxShareBeHelpArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWxShareBeHelpArg);

        /** WxShareBeHelpArg ShareType. */
        public ShareType: number;

        /** WxShareBeHelpArg Data. */
        public Data: Uint8Array;

        /**
         * Creates a new WxShareBeHelpArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WxShareBeHelpArg instance
         */
        public static create(properties?: pb.IWxShareBeHelpArg): pb.WxShareBeHelpArg;

        /**
         * Encodes the specified WxShareBeHelpArg message. Does not implicitly {@link pb.WxShareBeHelpArg.verify|verify} messages.
         * @param message WxShareBeHelpArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWxShareBeHelpArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WxShareBeHelpArg message, length delimited. Does not implicitly {@link pb.WxShareBeHelpArg.verify|verify} messages.
         * @param message WxShareBeHelpArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWxShareBeHelpArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WxShareBeHelpArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WxShareBeHelpArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WxShareBeHelpArg;

        /**
         * Decodes a WxShareBeHelpArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WxShareBeHelpArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WxShareBeHelpArg;

        /**
         * Verifies a WxShareBeHelpArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of an IosShareReply. */
    interface IIosShareReply {

        /** IosShareReply Jade */
        Jade?: (number|null);

        /** IosShareReply Bowlder */
        Bowlder?: (number|null);
    }

    /** Represents an IosShareReply. */
    class IosShareReply implements IIosShareReply {

        /**
         * Constructs a new IosShareReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IIosShareReply);

        /** IosShareReply Jade. */
        public Jade: number;

        /** IosShareReply Bowlder. */
        public Bowlder: number;

        /**
         * Creates a new IosShareReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IosShareReply instance
         */
        public static create(properties?: pb.IIosShareReply): pb.IosShareReply;

        /**
         * Encodes the specified IosShareReply message. Does not implicitly {@link pb.IosShareReply.verify|verify} messages.
         * @param message IosShareReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IIosShareReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified IosShareReply message, length delimited. Does not implicitly {@link pb.IosShareReply.verify|verify} messages.
         * @param message IosShareReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IIosShareReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an IosShareReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IosShareReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.IosShareReply;

        /**
         * Decodes an IosShareReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IosShareReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.IosShareReply;

        /**
         * Verifies an IosShareReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a WxShareAddJadeReply. */
    interface IWxShareAddJadeReply {

        /** WxShareAddJadeReply Jade */
        Jade?: (number|null);

        /** WxShareAddJadeReply Bowlder */
        Bowlder?: (number|null);

        /** WxShareAddJadeReply PlayerName */
        PlayerName?: (string|null);
    }

    /** Represents a WxShareAddJadeReply. */
    class WxShareAddJadeReply implements IWxShareAddJadeReply {

        /**
         * Constructs a new WxShareAddJadeReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWxShareAddJadeReply);

        /** WxShareAddJadeReply Jade. */
        public Jade: number;

        /** WxShareAddJadeReply Bowlder. */
        public Bowlder: number;

        /** WxShareAddJadeReply PlayerName. */
        public PlayerName: string;

        /**
         * Creates a new WxShareAddJadeReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WxShareAddJadeReply instance
         */
        public static create(properties?: pb.IWxShareAddJadeReply): pb.WxShareAddJadeReply;

        /**
         * Encodes the specified WxShareAddJadeReply message. Does not implicitly {@link pb.WxShareAddJadeReply.verify|verify} messages.
         * @param message WxShareAddJadeReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWxShareAddJadeReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WxShareAddJadeReply message, length delimited. Does not implicitly {@link pb.WxShareAddJadeReply.verify|verify} messages.
         * @param message WxShareAddJadeReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWxShareAddJadeReply, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WxShareAddJadeReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WxShareAddJadeReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.WxShareAddJadeReply;

        /**
         * Decodes a WxShareAddJadeReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WxShareAddJadeReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.WxShareAddJadeReply;

        /**
         * Verifies a WxShareAddJadeReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }

    /** Properties of a G2GReplyWxInviteBattleArg. */
    interface IG2GReplyWxInviteBattleArg {

        /** G2GReplyWxInviteBattleArg InviteUid */
        InviteUid?: (number|Long|null);

        /** G2GReplyWxInviteBattleArg BeInviter */
        BeInviter?: (pb.IFighterData|null);
    }

    /** Represents a G2GReplyWxInviteBattleArg. */
    class G2GReplyWxInviteBattleArg implements IG2GReplyWxInviteBattleArg {

        /**
         * Constructs a new G2GReplyWxInviteBattleArg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IG2GReplyWxInviteBattleArg);

        /** G2GReplyWxInviteBattleArg InviteUid. */
        public InviteUid: (number|Long);

        /** G2GReplyWxInviteBattleArg BeInviter. */
        public BeInviter?: (pb.IFighterData|null);

        /**
         * Creates a new G2GReplyWxInviteBattleArg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns G2GReplyWxInviteBattleArg instance
         */
        public static create(properties?: pb.IG2GReplyWxInviteBattleArg): pb.G2GReplyWxInviteBattleArg;

        /**
         * Encodes the specified G2GReplyWxInviteBattleArg message. Does not implicitly {@link pb.G2GReplyWxInviteBattleArg.verify|verify} messages.
         * @param message G2GReplyWxInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IG2GReplyWxInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified G2GReplyWxInviteBattleArg message, length delimited. Does not implicitly {@link pb.G2GReplyWxInviteBattleArg.verify|verify} messages.
         * @param message G2GReplyWxInviteBattleArg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IG2GReplyWxInviteBattleArg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a G2GReplyWxInviteBattleArg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns G2GReplyWxInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): pb.G2GReplyWxInviteBattleArg;

        /**
         * Decodes a G2GReplyWxInviteBattleArg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns G2GReplyWxInviteBattleArg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): pb.G2GReplyWxInviteBattleArg;

        /**
         * Verifies a G2GReplyWxInviteBattleArg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);
    }
}
